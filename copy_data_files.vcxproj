<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="15.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|Win32">
      <Configuration>Debug</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|Win32">
      <Configuration>Release</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="MinSizeRel|Win32">
      <Configuration>MinSizeRel</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="RelWithDebInfo|Win32">
      <Configuration>RelWithDebInfo</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <ProjectGuid>{623FF2D7-2DAA-3930-89F6-D6379D3D0031}</ProjectGuid>
    <WindowsTargetPlatformVersion>10.0.16299.0</WindowsTargetPlatformVersion>
    <Keyword>Win32Proj</Keyword>
    <Platform>Win32</Platform>
    <ProjectName>copy_data_files</ProjectName>
    <VCProjectUpgraderObjectName>NoUpgrade</VCProjectUpgraderObjectName>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v141</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v141</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'" Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v141</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'" Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v141</PlatformToolset>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ImportGroup Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup>
    <_ProjectFileVersion>10.0.20506.1</_ProjectFileVersion>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <Midl>
      <AdditionalIncludeDirectories>C:\Development\wireshark;C:\Development\wireshark-win64-libs\glib2-2.52.2-1.31-win64ws\include\glib-2.0;C:\Development\wireshark-win64-libs\glib2-2.52.2-1.31-win64ws\lib\glib-2.0\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <Midl>
      <AdditionalIncludeDirectories>C:\Development\wireshark;C:\Development\wireshark-win64-libs\glib2-2.52.2-1.31-win64ws\include\glib-2.0;C:\Development\wireshark-win64-libs\glib2-2.52.2-1.31-win64ws\lib\glib-2.0\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">
    <Midl>
      <AdditionalIncludeDirectories>C:\Development\wireshark;C:\Development\wireshark-win64-libs\glib2-2.52.2-1.31-win64ws\include\glib-2.0;C:\Development\wireshark-win64-libs\glib2-2.52.2-1.31-win64ws\lib\glib-2.0\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">
    <Midl>
      <AdditionalIncludeDirectories>C:\Development\wireshark;C:\Development\wireshark-win64-libs\glib2-2.52.2-1.31-win64ws\include\glib-2.0;C:\Development\wireshark-win64-libs\glib2-2.52.2-1.31-win64ws\lib\glib-2.0\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
  </ItemDefinitionGroup>
  <ItemGroup>
    <CustomBuild Include="C:\Development\wireshark\CMakeFiles\9977e0a1dc4e3bfac0f880578d54d5f2\README.txt.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">Generating README.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">setlocal
C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe -NoProfile -NonInteractive -executionpolicy bypass . C:/Development/wireshark/tools/textify.ps1 -Destination C:/Development/wireshark C:/Development/wireshark/README.md
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E rename C:/Development/wireshark/README.md.txt C:/Development/wireshark/README.txt
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">C:/Development/wireshark/CMakeFiles/9977e0a1dc4e3bfac0f880578d54d5f2/README.txt.rule;C:\Development\wireshark\README.txt;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">C:\Development\wireshark\README.txt</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">Generating README.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">setlocal
C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe -NoProfile -NonInteractive -executionpolicy bypass . C:/Development/wireshark/tools/textify.ps1 -Destination C:/Development/wireshark C:/Development/wireshark/README.md
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E rename C:/Development/wireshark/README.md.txt C:/Development/wireshark/README.txt
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">C:/Development/wireshark/CMakeFiles/9977e0a1dc4e3bfac0f880578d54d5f2/README.txt.rule;C:\Development\wireshark\README.txt;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">C:\Development\wireshark\README.txt</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">Generating README.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">setlocal
C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe -NoProfile -NonInteractive -executionpolicy bypass . C:/Development/wireshark/tools/textify.ps1 -Destination C:/Development/wireshark C:/Development/wireshark/README.md
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E rename C:/Development/wireshark/README.md.txt C:/Development/wireshark/README.txt
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">C:/Development/wireshark/CMakeFiles/9977e0a1dc4e3bfac0f880578d54d5f2/README.txt.rule;C:\Development\wireshark\README.txt;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">C:\Development\wireshark\README.txt</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">Generating README.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">setlocal
C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe -NoProfile -NonInteractive -executionpolicy bypass . C:/Development/wireshark/tools/textify.ps1 -Destination C:/Development/wireshark C:/Development/wireshark/README.md
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E rename C:/Development/wireshark/README.md.txt C:/Development/wireshark/README.txt
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">C:/Development/wireshark/CMakeFiles/9977e0a1dc4e3bfac0f880578d54d5f2/README.txt.rule;C:\Development\wireshark\README.txt;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">C:\Development\wireshark\README.txt</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="C:\Development\wireshark\CMakeFiles\6ba3fa05123b9ab37d449b6da8f9d786\README.txt.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">Generating run/$(Configuration)/README.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E copy_if_different C:/Development/wireshark/README.txt C:/Development/wireshark/run/$(Configuration)/README.txt
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">C:/Development/wireshark/CMakeFiles/6ba3fa05123b9ab37d449b6da8f9d786/README.txt.rule;C:\Development\wireshark\README.txt;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">C:\Development\wireshark\run\$(Configuration)\README.txt</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">Generating run/$(Configuration)/README.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E copy_if_different C:/Development/wireshark/README.txt C:/Development/wireshark/run/$(Configuration)/README.txt
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">C:/Development/wireshark/CMakeFiles/6ba3fa05123b9ab37d449b6da8f9d786/README.txt.rule;C:\Development\wireshark\README.txt;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">C:\Development\wireshark\run\$(Configuration)\README.txt</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">Generating run/$(Configuration)/README.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E copy_if_different C:/Development/wireshark/README.txt C:/Development/wireshark/run/$(Configuration)/README.txt
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">C:/Development/wireshark/CMakeFiles/6ba3fa05123b9ab37d449b6da8f9d786/README.txt.rule;C:\Development\wireshark\README.txt;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">C:\Development\wireshark\run\$(Configuration)\README.txt</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">Generating run/$(Configuration)/README.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E copy_if_different C:/Development/wireshark/README.txt C:/Development/wireshark/run/$(Configuration)/README.txt
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">C:/Development/wireshark/CMakeFiles/6ba3fa05123b9ab37d449b6da8f9d786/README.txt.rule;C:\Development\wireshark\README.txt;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">C:\Development\wireshark\run\$(Configuration)\README.txt</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="C:\Development\wireshark\CMakeFiles\9977e0a1dc4e3bfac0f880578d54d5f2\README.windows.txt.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">Generating README.windows.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">setlocal
C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe -NoProfile -NonInteractive -executionpolicy bypass . C:/Development/wireshark/tools/textify.ps1 -Destination C:/Development/wireshark C:/Development/wireshark/README.windows
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">C:/Development/wireshark/CMakeFiles/9977e0a1dc4e3bfac0f880578d54d5f2/README.windows.txt.rule;C:\Development\wireshark\README.windows;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">C:\Development\wireshark\README.windows.txt</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">Generating README.windows.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">setlocal
C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe -NoProfile -NonInteractive -executionpolicy bypass . C:/Development/wireshark/tools/textify.ps1 -Destination C:/Development/wireshark C:/Development/wireshark/README.windows
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">C:/Development/wireshark/CMakeFiles/9977e0a1dc4e3bfac0f880578d54d5f2/README.windows.txt.rule;C:\Development\wireshark\README.windows;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">C:\Development\wireshark\README.windows.txt</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">Generating README.windows.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">setlocal
C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe -NoProfile -NonInteractive -executionpolicy bypass . C:/Development/wireshark/tools/textify.ps1 -Destination C:/Development/wireshark C:/Development/wireshark/README.windows
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">C:/Development/wireshark/CMakeFiles/9977e0a1dc4e3bfac0f880578d54d5f2/README.windows.txt.rule;C:\Development\wireshark\README.windows;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">C:\Development\wireshark\README.windows.txt</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">Generating README.windows.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">setlocal
C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe -NoProfile -NonInteractive -executionpolicy bypass . C:/Development/wireshark/tools/textify.ps1 -Destination C:/Development/wireshark C:/Development/wireshark/README.windows
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">C:/Development/wireshark/CMakeFiles/9977e0a1dc4e3bfac0f880578d54d5f2/README.windows.txt.rule;C:\Development\wireshark\README.windows;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">C:\Development\wireshark\README.windows.txt</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="C:\Development\wireshark\CMakeFiles\6ba3fa05123b9ab37d449b6da8f9d786\README.windows.txt.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">Generating run/$(Configuration)/README.windows.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E copy_if_different C:/Development/wireshark/README.windows.txt C:/Development/wireshark/run/$(Configuration)/README.windows.txt
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">C:/Development/wireshark/CMakeFiles/6ba3fa05123b9ab37d449b6da8f9d786/README.windows.txt.rule;C:\Development\wireshark\README.windows.txt;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">C:\Development\wireshark\run\$(Configuration)\README.windows.txt</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">Generating run/$(Configuration)/README.windows.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E copy_if_different C:/Development/wireshark/README.windows.txt C:/Development/wireshark/run/$(Configuration)/README.windows.txt
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">C:/Development/wireshark/CMakeFiles/6ba3fa05123b9ab37d449b6da8f9d786/README.windows.txt.rule;C:\Development\wireshark\README.windows.txt;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">C:\Development\wireshark\run\$(Configuration)\README.windows.txt</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">Generating run/$(Configuration)/README.windows.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E copy_if_different C:/Development/wireshark/README.windows.txt C:/Development/wireshark/run/$(Configuration)/README.windows.txt
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">C:/Development/wireshark/CMakeFiles/6ba3fa05123b9ab37d449b6da8f9d786/README.windows.txt.rule;C:\Development\wireshark\README.windows.txt;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">C:\Development\wireshark\run\$(Configuration)\README.windows.txt</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">Generating run/$(Configuration)/README.windows.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E copy_if_different C:/Development/wireshark/README.windows.txt C:/Development/wireshark/run/$(Configuration)/README.windows.txt
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">C:/Development/wireshark/CMakeFiles/6ba3fa05123b9ab37d449b6da8f9d786/README.windows.txt.rule;C:\Development\wireshark\README.windows.txt;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">C:\Development\wireshark\run\$(Configuration)\README.windows.txt</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="C:\Development\wireshark\CMakeFiles\9977e0a1dc4e3bfac0f880578d54d5f2\NEWS.txt.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">Generating NEWS.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">setlocal
C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe -NoProfile -NonInteractive -executionpolicy bypass . C:/Development/wireshark/tools/textify.ps1 -Destination C:/Development/wireshark C:/Development/wireshark/NEWS
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">C:/Development/wireshark/CMakeFiles/9977e0a1dc4e3bfac0f880578d54d5f2/NEWS.txt.rule;C:\Development\wireshark\NEWS;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">C:\Development\wireshark\NEWS.txt</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">Generating NEWS.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">setlocal
C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe -NoProfile -NonInteractive -executionpolicy bypass . C:/Development/wireshark/tools/textify.ps1 -Destination C:/Development/wireshark C:/Development/wireshark/NEWS
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">C:/Development/wireshark/CMakeFiles/9977e0a1dc4e3bfac0f880578d54d5f2/NEWS.txt.rule;C:\Development\wireshark\NEWS;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">C:\Development\wireshark\NEWS.txt</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">Generating NEWS.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">setlocal
C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe -NoProfile -NonInteractive -executionpolicy bypass . C:/Development/wireshark/tools/textify.ps1 -Destination C:/Development/wireshark C:/Development/wireshark/NEWS
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">C:/Development/wireshark/CMakeFiles/9977e0a1dc4e3bfac0f880578d54d5f2/NEWS.txt.rule;C:\Development\wireshark\NEWS;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">C:\Development\wireshark\NEWS.txt</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">Generating NEWS.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">setlocal
C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe -NoProfile -NonInteractive -executionpolicy bypass . C:/Development/wireshark/tools/textify.ps1 -Destination C:/Development/wireshark C:/Development/wireshark/NEWS
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">C:/Development/wireshark/CMakeFiles/9977e0a1dc4e3bfac0f880578d54d5f2/NEWS.txt.rule;C:\Development\wireshark\NEWS;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">C:\Development\wireshark\NEWS.txt</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="C:\Development\wireshark\CMakeFiles\6ba3fa05123b9ab37d449b6da8f9d786\NEWS.txt.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">Generating run/$(Configuration)/NEWS.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E copy_if_different C:/Development/wireshark/NEWS.txt C:/Development/wireshark/run/$(Configuration)/NEWS.txt
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">C:/Development/wireshark/CMakeFiles/6ba3fa05123b9ab37d449b6da8f9d786/NEWS.txt.rule;C:\Development\wireshark\NEWS.txt;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">C:\Development\wireshark\run\$(Configuration)\NEWS.txt</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">Generating run/$(Configuration)/NEWS.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E copy_if_different C:/Development/wireshark/NEWS.txt C:/Development/wireshark/run/$(Configuration)/NEWS.txt
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">C:/Development/wireshark/CMakeFiles/6ba3fa05123b9ab37d449b6da8f9d786/NEWS.txt.rule;C:\Development\wireshark\NEWS.txt;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">C:\Development\wireshark\run\$(Configuration)\NEWS.txt</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">Generating run/$(Configuration)/NEWS.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E copy_if_different C:/Development/wireshark/NEWS.txt C:/Development/wireshark/run/$(Configuration)/NEWS.txt
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">C:/Development/wireshark/CMakeFiles/6ba3fa05123b9ab37d449b6da8f9d786/NEWS.txt.rule;C:\Development\wireshark\NEWS.txt;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">C:\Development\wireshark\run\$(Configuration)\NEWS.txt</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">Generating run/$(Configuration)/NEWS.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E copy_if_different C:/Development/wireshark/NEWS.txt C:/Development/wireshark/run/$(Configuration)/NEWS.txt
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">C:/Development/wireshark/CMakeFiles/6ba3fa05123b9ab37d449b6da8f9d786/NEWS.txt.rule;C:\Development\wireshark\NEWS.txt;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">C:\Development\wireshark\run\$(Configuration)\NEWS.txt</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="C:\Development\wireshark\CMakeFiles\9977e0a1dc4e3bfac0f880578d54d5f2\COPYING.txt.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">Generating COPYING.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">setlocal
C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe -NoProfile -NonInteractive -executionpolicy bypass . C:/Development/wireshark/tools/textify.ps1 -Destination C:/Development/wireshark C:/Development/wireshark/COPYING
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">C:/Development/wireshark/CMakeFiles/9977e0a1dc4e3bfac0f880578d54d5f2/COPYING.txt.rule;C:\Development\wireshark\COPYING;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">C:\Development\wireshark\COPYING.txt</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">Generating COPYING.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">setlocal
C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe -NoProfile -NonInteractive -executionpolicy bypass . C:/Development/wireshark/tools/textify.ps1 -Destination C:/Development/wireshark C:/Development/wireshark/COPYING
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">C:/Development/wireshark/CMakeFiles/9977e0a1dc4e3bfac0f880578d54d5f2/COPYING.txt.rule;C:\Development\wireshark\COPYING;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">C:\Development\wireshark\COPYING.txt</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">Generating COPYING.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">setlocal
C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe -NoProfile -NonInteractive -executionpolicy bypass . C:/Development/wireshark/tools/textify.ps1 -Destination C:/Development/wireshark C:/Development/wireshark/COPYING
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">C:/Development/wireshark/CMakeFiles/9977e0a1dc4e3bfac0f880578d54d5f2/COPYING.txt.rule;C:\Development\wireshark\COPYING;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">C:\Development\wireshark\COPYING.txt</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">Generating COPYING.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">setlocal
C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe -NoProfile -NonInteractive -executionpolicy bypass . C:/Development/wireshark/tools/textify.ps1 -Destination C:/Development/wireshark C:/Development/wireshark/COPYING
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">C:/Development/wireshark/CMakeFiles/9977e0a1dc4e3bfac0f880578d54d5f2/COPYING.txt.rule;C:\Development\wireshark\COPYING;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">C:\Development\wireshark\COPYING.txt</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="C:\Development\wireshark\CMakeFiles\6ba3fa05123b9ab37d449b6da8f9d786\COPYING.txt.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">Generating run/$(Configuration)/COPYING.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E copy_if_different C:/Development/wireshark/COPYING.txt C:/Development/wireshark/run/$(Configuration)/COPYING.txt
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">C:/Development/wireshark/CMakeFiles/6ba3fa05123b9ab37d449b6da8f9d786/COPYING.txt.rule;C:\Development\wireshark\COPYING.txt;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">C:\Development\wireshark\run\$(Configuration)\COPYING.txt</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">Generating run/$(Configuration)/COPYING.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E copy_if_different C:/Development/wireshark/COPYING.txt C:/Development/wireshark/run/$(Configuration)/COPYING.txt
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">C:/Development/wireshark/CMakeFiles/6ba3fa05123b9ab37d449b6da8f9d786/COPYING.txt.rule;C:\Development\wireshark\COPYING.txt;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">C:\Development\wireshark\run\$(Configuration)\COPYING.txt</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">Generating run/$(Configuration)/COPYING.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E copy_if_different C:/Development/wireshark/COPYING.txt C:/Development/wireshark/run/$(Configuration)/COPYING.txt
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">C:/Development/wireshark/CMakeFiles/6ba3fa05123b9ab37d449b6da8f9d786/COPYING.txt.rule;C:\Development\wireshark\COPYING.txt;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">C:\Development\wireshark\run\$(Configuration)\COPYING.txt</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">Generating run/$(Configuration)/COPYING.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E copy_if_different C:/Development/wireshark/COPYING.txt C:/Development/wireshark/run/$(Configuration)/COPYING.txt
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">C:/Development/wireshark/CMakeFiles/6ba3fa05123b9ab37d449b6da8f9d786/COPYING.txt.rule;C:\Development\wireshark\COPYING.txt;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">C:\Development\wireshark\run\$(Configuration)\COPYING.txt</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="C:\Development\wireshark\CMakeFiles\6ba3fa05123b9ab37d449b6da8f9d786\cfilters.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">Generating run/$(Configuration)/cfilters</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E copy_if_different C:/Development/wireshark/cfilters C:/Development/wireshark/run/$(Configuration)/cfilters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">C:/Development/wireshark/CMakeFiles/6ba3fa05123b9ab37d449b6da8f9d786/cfilters.rule;C:\Development\wireshark\cfilters;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">C:\Development\wireshark\run\$(Configuration)\cfilters</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">Generating run/$(Configuration)/cfilters</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E copy_if_different C:/Development/wireshark/cfilters C:/Development/wireshark/run/$(Configuration)/cfilters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">C:/Development/wireshark/CMakeFiles/6ba3fa05123b9ab37d449b6da8f9d786/cfilters.rule;C:\Development\wireshark\cfilters;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">C:\Development\wireshark\run\$(Configuration)\cfilters</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">Generating run/$(Configuration)/cfilters</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E copy_if_different C:/Development/wireshark/cfilters C:/Development/wireshark/run/$(Configuration)/cfilters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">C:/Development/wireshark/CMakeFiles/6ba3fa05123b9ab37d449b6da8f9d786/cfilters.rule;C:\Development\wireshark\cfilters;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">C:\Development\wireshark\run\$(Configuration)\cfilters</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">Generating run/$(Configuration)/cfilters</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E copy_if_different C:/Development/wireshark/cfilters C:/Development/wireshark/run/$(Configuration)/cfilters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">C:/Development/wireshark/CMakeFiles/6ba3fa05123b9ab37d449b6da8f9d786/cfilters.rule;C:\Development\wireshark\cfilters;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">C:\Development\wireshark\run\$(Configuration)\cfilters</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="C:\Development\wireshark\CMakeFiles\6ba3fa05123b9ab37d449b6da8f9d786\colorfilters.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">Generating run/$(Configuration)/colorfilters</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E copy_if_different C:/Development/wireshark/colorfilters C:/Development/wireshark/run/$(Configuration)/colorfilters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">C:/Development/wireshark/CMakeFiles/6ba3fa05123b9ab37d449b6da8f9d786/colorfilters.rule;C:\Development\wireshark\colorfilters;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">C:\Development\wireshark\run\$(Configuration)\colorfilters</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">Generating run/$(Configuration)/colorfilters</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E copy_if_different C:/Development/wireshark/colorfilters C:/Development/wireshark/run/$(Configuration)/colorfilters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">C:/Development/wireshark/CMakeFiles/6ba3fa05123b9ab37d449b6da8f9d786/colorfilters.rule;C:\Development\wireshark\colorfilters;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">C:\Development\wireshark\run\$(Configuration)\colorfilters</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">Generating run/$(Configuration)/colorfilters</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E copy_if_different C:/Development/wireshark/colorfilters C:/Development/wireshark/run/$(Configuration)/colorfilters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">C:/Development/wireshark/CMakeFiles/6ba3fa05123b9ab37d449b6da8f9d786/colorfilters.rule;C:\Development\wireshark\colorfilters;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">C:\Development\wireshark\run\$(Configuration)\colorfilters</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">Generating run/$(Configuration)/colorfilters</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E copy_if_different C:/Development/wireshark/colorfilters C:/Development/wireshark/run/$(Configuration)/colorfilters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">C:/Development/wireshark/CMakeFiles/6ba3fa05123b9ab37d449b6da8f9d786/colorfilters.rule;C:\Development\wireshark\colorfilters;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">C:\Development\wireshark\run\$(Configuration)\colorfilters</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="C:\Development\wireshark\CMakeFiles\6ba3fa05123b9ab37d449b6da8f9d786\dfilters.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">Generating run/$(Configuration)/dfilters</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E copy_if_different C:/Development/wireshark/dfilters C:/Development/wireshark/run/$(Configuration)/dfilters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">C:/Development/wireshark/CMakeFiles/6ba3fa05123b9ab37d449b6da8f9d786/dfilters.rule;C:\Development\wireshark\dfilters;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">C:\Development\wireshark\run\$(Configuration)\dfilters</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">Generating run/$(Configuration)/dfilters</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E copy_if_different C:/Development/wireshark/dfilters C:/Development/wireshark/run/$(Configuration)/dfilters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">C:/Development/wireshark/CMakeFiles/6ba3fa05123b9ab37d449b6da8f9d786/dfilters.rule;C:\Development\wireshark\dfilters;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">C:\Development\wireshark\run\$(Configuration)\dfilters</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">Generating run/$(Configuration)/dfilters</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E copy_if_different C:/Development/wireshark/dfilters C:/Development/wireshark/run/$(Configuration)/dfilters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">C:/Development/wireshark/CMakeFiles/6ba3fa05123b9ab37d449b6da8f9d786/dfilters.rule;C:\Development\wireshark\dfilters;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">C:\Development\wireshark\run\$(Configuration)\dfilters</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">Generating run/$(Configuration)/dfilters</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E copy_if_different C:/Development/wireshark/dfilters C:/Development/wireshark/run/$(Configuration)/dfilters
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">C:/Development/wireshark/CMakeFiles/6ba3fa05123b9ab37d449b6da8f9d786/dfilters.rule;C:\Development\wireshark\dfilters;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">C:\Development\wireshark\run\$(Configuration)\dfilters</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="C:\Development\wireshark\CMakeFiles\6ba3fa05123b9ab37d449b6da8f9d786\enterprises.tsv.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">Generating run/$(Configuration)/enterprises.tsv</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E copy_if_different C:/Development/wireshark/enterprises.tsv C:/Development/wireshark/run/$(Configuration)/enterprises.tsv
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">C:/Development/wireshark/CMakeFiles/6ba3fa05123b9ab37d449b6da8f9d786/enterprises.tsv.rule;C:\Development\wireshark\enterprises.tsv;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">C:\Development\wireshark\run\$(Configuration)\enterprises.tsv</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">Generating run/$(Configuration)/enterprises.tsv</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E copy_if_different C:/Development/wireshark/enterprises.tsv C:/Development/wireshark/run/$(Configuration)/enterprises.tsv
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">C:/Development/wireshark/CMakeFiles/6ba3fa05123b9ab37d449b6da8f9d786/enterprises.tsv.rule;C:\Development\wireshark\enterprises.tsv;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">C:\Development\wireshark\run\$(Configuration)\enterprises.tsv</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">Generating run/$(Configuration)/enterprises.tsv</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E copy_if_different C:/Development/wireshark/enterprises.tsv C:/Development/wireshark/run/$(Configuration)/enterprises.tsv
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">C:/Development/wireshark/CMakeFiles/6ba3fa05123b9ab37d449b6da8f9d786/enterprises.tsv.rule;C:\Development\wireshark\enterprises.tsv;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">C:\Development\wireshark\run\$(Configuration)\enterprises.tsv</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">Generating run/$(Configuration)/enterprises.tsv</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E copy_if_different C:/Development/wireshark/enterprises.tsv C:/Development/wireshark/run/$(Configuration)/enterprises.tsv
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">C:/Development/wireshark/CMakeFiles/6ba3fa05123b9ab37d449b6da8f9d786/enterprises.tsv.rule;C:\Development\wireshark\enterprises.tsv;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">C:\Development\wireshark\run\$(Configuration)\enterprises.tsv</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="C:\Development\wireshark\CMakeFiles\6ba3fa05123b9ab37d449b6da8f9d786\ipmap.html.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">Generating run/$(Configuration)/ipmap.html</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E copy_if_different C:/Development/wireshark/ipmap.html C:/Development/wireshark/run/$(Configuration)/ipmap.html
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">C:/Development/wireshark/CMakeFiles/6ba3fa05123b9ab37d449b6da8f9d786/ipmap.html.rule;C:\Development\wireshark\ipmap.html;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">C:\Development\wireshark\run\$(Configuration)\ipmap.html</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">Generating run/$(Configuration)/ipmap.html</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E copy_if_different C:/Development/wireshark/ipmap.html C:/Development/wireshark/run/$(Configuration)/ipmap.html
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">C:/Development/wireshark/CMakeFiles/6ba3fa05123b9ab37d449b6da8f9d786/ipmap.html.rule;C:\Development\wireshark\ipmap.html;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">C:\Development\wireshark\run\$(Configuration)\ipmap.html</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">Generating run/$(Configuration)/ipmap.html</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E copy_if_different C:/Development/wireshark/ipmap.html C:/Development/wireshark/run/$(Configuration)/ipmap.html
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">C:/Development/wireshark/CMakeFiles/6ba3fa05123b9ab37d449b6da8f9d786/ipmap.html.rule;C:\Development\wireshark\ipmap.html;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">C:\Development\wireshark\run\$(Configuration)\ipmap.html</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">Generating run/$(Configuration)/ipmap.html</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E copy_if_different C:/Development/wireshark/ipmap.html C:/Development/wireshark/run/$(Configuration)/ipmap.html
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">C:/Development/wireshark/CMakeFiles/6ba3fa05123b9ab37d449b6da8f9d786/ipmap.html.rule;C:\Development\wireshark\ipmap.html;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">C:\Development\wireshark\run\$(Configuration)\ipmap.html</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="C:\Development\wireshark\CMakeFiles\6ba3fa05123b9ab37d449b6da8f9d786\manuf.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">Generating run/$(Configuration)/manuf</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E copy_if_different C:/Development/wireshark/manuf C:/Development/wireshark/run/$(Configuration)/manuf
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">C:/Development/wireshark/CMakeFiles/6ba3fa05123b9ab37d449b6da8f9d786/manuf.rule;C:\Development\wireshark\manuf;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">C:\Development\wireshark\run\$(Configuration)\manuf</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">Generating run/$(Configuration)/manuf</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E copy_if_different C:/Development/wireshark/manuf C:/Development/wireshark/run/$(Configuration)/manuf
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">C:/Development/wireshark/CMakeFiles/6ba3fa05123b9ab37d449b6da8f9d786/manuf.rule;C:\Development\wireshark\manuf;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">C:\Development\wireshark\run\$(Configuration)\manuf</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">Generating run/$(Configuration)/manuf</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E copy_if_different C:/Development/wireshark/manuf C:/Development/wireshark/run/$(Configuration)/manuf
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">C:/Development/wireshark/CMakeFiles/6ba3fa05123b9ab37d449b6da8f9d786/manuf.rule;C:\Development\wireshark\manuf;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">C:\Development\wireshark\run\$(Configuration)\manuf</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">Generating run/$(Configuration)/manuf</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E copy_if_different C:/Development/wireshark/manuf C:/Development/wireshark/run/$(Configuration)/manuf
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">C:/Development/wireshark/CMakeFiles/6ba3fa05123b9ab37d449b6da8f9d786/manuf.rule;C:\Development\wireshark\manuf;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">C:\Development\wireshark\run\$(Configuration)\manuf</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="C:\Development\wireshark\CMakeFiles\6ba3fa05123b9ab37d449b6da8f9d786\pdml2html.xsl.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">Generating run/$(Configuration)/pdml2html.xsl</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E copy_if_different C:/Development/wireshark/pdml2html.xsl C:/Development/wireshark/run/$(Configuration)/pdml2html.xsl
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">C:/Development/wireshark/CMakeFiles/6ba3fa05123b9ab37d449b6da8f9d786/pdml2html.xsl.rule;C:\Development\wireshark\pdml2html.xsl;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">C:\Development\wireshark\run\$(Configuration)\pdml2html.xsl</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">Generating run/$(Configuration)/pdml2html.xsl</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E copy_if_different C:/Development/wireshark/pdml2html.xsl C:/Development/wireshark/run/$(Configuration)/pdml2html.xsl
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">C:/Development/wireshark/CMakeFiles/6ba3fa05123b9ab37d449b6da8f9d786/pdml2html.xsl.rule;C:\Development\wireshark\pdml2html.xsl;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">C:\Development\wireshark\run\$(Configuration)\pdml2html.xsl</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">Generating run/$(Configuration)/pdml2html.xsl</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E copy_if_different C:/Development/wireshark/pdml2html.xsl C:/Development/wireshark/run/$(Configuration)/pdml2html.xsl
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">C:/Development/wireshark/CMakeFiles/6ba3fa05123b9ab37d449b6da8f9d786/pdml2html.xsl.rule;C:\Development\wireshark\pdml2html.xsl;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">C:\Development\wireshark\run\$(Configuration)\pdml2html.xsl</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">Generating run/$(Configuration)/pdml2html.xsl</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E copy_if_different C:/Development/wireshark/pdml2html.xsl C:/Development/wireshark/run/$(Configuration)/pdml2html.xsl
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">C:/Development/wireshark/CMakeFiles/6ba3fa05123b9ab37d449b6da8f9d786/pdml2html.xsl.rule;C:\Development\wireshark\pdml2html.xsl;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">C:\Development\wireshark\run\$(Configuration)\pdml2html.xsl</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="C:\Development\wireshark\CMakeFiles\6ba3fa05123b9ab37d449b6da8f9d786\services.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">Generating run/$(Configuration)/services</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E copy_if_different C:/Development/wireshark/services C:/Development/wireshark/run/$(Configuration)/services
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">C:/Development/wireshark/CMakeFiles/6ba3fa05123b9ab37d449b6da8f9d786/services.rule;C:\Development\wireshark\services;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">C:\Development\wireshark\run\$(Configuration)\services</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">Generating run/$(Configuration)/services</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E copy_if_different C:/Development/wireshark/services C:/Development/wireshark/run/$(Configuration)/services
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">C:/Development/wireshark/CMakeFiles/6ba3fa05123b9ab37d449b6da8f9d786/services.rule;C:\Development\wireshark\services;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">C:\Development\wireshark\run\$(Configuration)\services</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">Generating run/$(Configuration)/services</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E copy_if_different C:/Development/wireshark/services C:/Development/wireshark/run/$(Configuration)/services
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">C:/Development/wireshark/CMakeFiles/6ba3fa05123b9ab37d449b6da8f9d786/services.rule;C:\Development\wireshark\services;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">C:\Development\wireshark\run\$(Configuration)\services</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">Generating run/$(Configuration)/services</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E copy_if_different C:/Development/wireshark/services C:/Development/wireshark/run/$(Configuration)/services
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">C:/Development/wireshark/CMakeFiles/6ba3fa05123b9ab37d449b6da8f9d786/services.rule;C:\Development\wireshark\services;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">C:\Development\wireshark\run\$(Configuration)\services</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="C:\Development\wireshark\CMakeFiles\6ba3fa05123b9ab37d449b6da8f9d786\smi_modules.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">Generating run/$(Configuration)/smi_modules</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E copy_if_different C:/Development/wireshark/smi_modules C:/Development/wireshark/run/$(Configuration)/smi_modules
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">C:/Development/wireshark/CMakeFiles/6ba3fa05123b9ab37d449b6da8f9d786/smi_modules.rule;C:\Development\wireshark\smi_modules;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">C:\Development\wireshark\run\$(Configuration)\smi_modules</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">Generating run/$(Configuration)/smi_modules</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E copy_if_different C:/Development/wireshark/smi_modules C:/Development/wireshark/run/$(Configuration)/smi_modules
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">C:/Development/wireshark/CMakeFiles/6ba3fa05123b9ab37d449b6da8f9d786/smi_modules.rule;C:\Development\wireshark\smi_modules;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">C:\Development\wireshark\run\$(Configuration)\smi_modules</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">Generating run/$(Configuration)/smi_modules</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E copy_if_different C:/Development/wireshark/smi_modules C:/Development/wireshark/run/$(Configuration)/smi_modules
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">C:/Development/wireshark/CMakeFiles/6ba3fa05123b9ab37d449b6da8f9d786/smi_modules.rule;C:\Development\wireshark\smi_modules;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">C:\Development\wireshark\run\$(Configuration)\smi_modules</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">Generating run/$(Configuration)/smi_modules</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E copy_if_different C:/Development/wireshark/smi_modules C:/Development/wireshark/run/$(Configuration)/smi_modules
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">C:/Development/wireshark/CMakeFiles/6ba3fa05123b9ab37d449b6da8f9d786/smi_modules.rule;C:\Development\wireshark\smi_modules;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">C:\Development\wireshark\run\$(Configuration)\smi_modules</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="C:\Development\wireshark\CMakeFiles\6ba3fa05123b9ab37d449b6da8f9d786\wka.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">Generating run/$(Configuration)/wka</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E copy_if_different C:/Development/wireshark/wka C:/Development/wireshark/run/$(Configuration)/wka
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">C:/Development/wireshark/CMakeFiles/6ba3fa05123b9ab37d449b6da8f9d786/wka.rule;C:\Development\wireshark\wka;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">C:\Development\wireshark\run\$(Configuration)\wka</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">Generating run/$(Configuration)/wka</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E copy_if_different C:/Development/wireshark/wka C:/Development/wireshark/run/$(Configuration)/wka
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">C:/Development/wireshark/CMakeFiles/6ba3fa05123b9ab37d449b6da8f9d786/wka.rule;C:\Development\wireshark\wka;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">C:\Development\wireshark\run\$(Configuration)\wka</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">Generating run/$(Configuration)/wka</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E copy_if_different C:/Development/wireshark/wka C:/Development/wireshark/run/$(Configuration)/wka
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">C:/Development/wireshark/CMakeFiles/6ba3fa05123b9ab37d449b6da8f9d786/wka.rule;C:\Development\wireshark\wka;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">C:\Development\wireshark\run\$(Configuration)\wka</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">Generating run/$(Configuration)/wka</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E copy_if_different C:/Development/wireshark/wka C:/Development/wireshark/run/$(Configuration)/wka
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">C:/Development/wireshark/CMakeFiles/6ba3fa05123b9ab37d449b6da8f9d786/wka.rule;C:\Development\wireshark\wka;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">C:\Development\wireshark\run\$(Configuration)\wka</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="C:\Development\wireshark\CMakeFiles\6ba3fa05123b9ab37d449b6da8f9d786\ws.css.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">Generating run/$(Configuration)/ws.css</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E copy_if_different C:/Development/wireshark/docbook/ws.css C:/Development/wireshark/run/$(Configuration)/ws.css
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">C:/Development/wireshark/CMakeFiles/6ba3fa05123b9ab37d449b6da8f9d786/ws.css.rule;C:\Development\wireshark\docbook\ws.css;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">C:\Development\wireshark\run\$(Configuration)\ws.css</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">Generating run/$(Configuration)/ws.css</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E copy_if_different C:/Development/wireshark/docbook/ws.css C:/Development/wireshark/run/$(Configuration)/ws.css
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">C:/Development/wireshark/CMakeFiles/6ba3fa05123b9ab37d449b6da8f9d786/ws.css.rule;C:\Development\wireshark\docbook\ws.css;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">C:\Development\wireshark\run\$(Configuration)\ws.css</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">Generating run/$(Configuration)/ws.css</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E copy_if_different C:/Development/wireshark/docbook/ws.css C:/Development/wireshark/run/$(Configuration)/ws.css
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">C:/Development/wireshark/CMakeFiles/6ba3fa05123b9ab37d449b6da8f9d786/ws.css.rule;C:\Development\wireshark\docbook\ws.css;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">C:\Development\wireshark\run\$(Configuration)\ws.css</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">Generating run/$(Configuration)/ws.css</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E copy_if_different C:/Development/wireshark/docbook/ws.css C:/Development/wireshark/run/$(Configuration)/ws.css
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">C:/Development/wireshark/CMakeFiles/6ba3fa05123b9ab37d449b6da8f9d786/ws.css.rule;C:\Development\wireshark\docbook\ws.css;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">C:\Development\wireshark\run\$(Configuration)\ws.css</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="C:\Development\wireshark\CMakeFiles\6ba3fa05123b9ab37d449b6da8f9d786\AUTHORS-SHORT.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">Generating run/$(Configuration)/AUTHORS-SHORT</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E copy_if_different C:/Development/wireshark/doc/AUTHORS-SHORT C:/Development/wireshark/run/$(Configuration)/AUTHORS-SHORT
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">C:/Development/wireshark/CMakeFiles/6ba3fa05123b9ab37d449b6da8f9d786/AUTHORS-SHORT.rule;C:\Development\wireshark\doc\AUTHORS-SHORT;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">C:\Development\wireshark\run\$(Configuration)\AUTHORS-SHORT</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">Generating run/$(Configuration)/AUTHORS-SHORT</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E copy_if_different C:/Development/wireshark/doc/AUTHORS-SHORT C:/Development/wireshark/run/$(Configuration)/AUTHORS-SHORT
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">C:/Development/wireshark/CMakeFiles/6ba3fa05123b9ab37d449b6da8f9d786/AUTHORS-SHORT.rule;C:\Development\wireshark\doc\AUTHORS-SHORT;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">C:\Development\wireshark\run\$(Configuration)\AUTHORS-SHORT</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">Generating run/$(Configuration)/AUTHORS-SHORT</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E copy_if_different C:/Development/wireshark/doc/AUTHORS-SHORT C:/Development/wireshark/run/$(Configuration)/AUTHORS-SHORT
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">C:/Development/wireshark/CMakeFiles/6ba3fa05123b9ab37d449b6da8f9d786/AUTHORS-SHORT.rule;C:\Development\wireshark\doc\AUTHORS-SHORT;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">C:\Development\wireshark\run\$(Configuration)\AUTHORS-SHORT</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">Generating run/$(Configuration)/AUTHORS-SHORT</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E copy_if_different C:/Development/wireshark/doc/AUTHORS-SHORT C:/Development/wireshark/run/$(Configuration)/AUTHORS-SHORT
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">C:/Development/wireshark/CMakeFiles/6ba3fa05123b9ab37d449b6da8f9d786/AUTHORS-SHORT.rule;C:\Development\wireshark\doc\AUTHORS-SHORT;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">C:\Development\wireshark\run\$(Configuration)\AUTHORS-SHORT</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="C:\Development\wireshark\CMakeFiles\6ba3fa05123b9ab37d449b6da8f9d786\androiddump.html.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">Generating run/$(Configuration)/androiddump.html</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E copy_if_different C:/Development/wireshark/doc/androiddump.html C:/Development/wireshark/run/$(Configuration)/androiddump.html
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">C:/Development/wireshark/CMakeFiles/6ba3fa05123b9ab37d449b6da8f9d786/androiddump.html.rule;C:\Development\wireshark\doc\androiddump.html;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">C:\Development\wireshark\run\$(Configuration)\androiddump.html</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">Generating run/$(Configuration)/androiddump.html</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E copy_if_different C:/Development/wireshark/doc/androiddump.html C:/Development/wireshark/run/$(Configuration)/androiddump.html
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">C:/Development/wireshark/CMakeFiles/6ba3fa05123b9ab37d449b6da8f9d786/androiddump.html.rule;C:\Development\wireshark\doc\androiddump.html;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">C:\Development\wireshark\run\$(Configuration)\androiddump.html</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">Generating run/$(Configuration)/androiddump.html</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E copy_if_different C:/Development/wireshark/doc/androiddump.html C:/Development/wireshark/run/$(Configuration)/androiddump.html
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">C:/Development/wireshark/CMakeFiles/6ba3fa05123b9ab37d449b6da8f9d786/androiddump.html.rule;C:\Development\wireshark\doc\androiddump.html;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">C:\Development\wireshark\run\$(Configuration)\androiddump.html</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">Generating run/$(Configuration)/androiddump.html</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E copy_if_different C:/Development/wireshark/doc/androiddump.html C:/Development/wireshark/run/$(Configuration)/androiddump.html
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">C:/Development/wireshark/CMakeFiles/6ba3fa05123b9ab37d449b6da8f9d786/androiddump.html.rule;C:\Development\wireshark\doc\androiddump.html;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">C:\Development\wireshark\run\$(Configuration)\androiddump.html</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="C:\Development\wireshark\CMakeFiles\6ba3fa05123b9ab37d449b6da8f9d786\udpdump.html.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">Generating run/$(Configuration)/udpdump.html</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E copy_if_different C:/Development/wireshark/doc/udpdump.html C:/Development/wireshark/run/$(Configuration)/udpdump.html
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">C:/Development/wireshark/CMakeFiles/6ba3fa05123b9ab37d449b6da8f9d786/udpdump.html.rule;C:\Development\wireshark\doc\udpdump.html;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">C:\Development\wireshark\run\$(Configuration)\udpdump.html</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">Generating run/$(Configuration)/udpdump.html</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E copy_if_different C:/Development/wireshark/doc/udpdump.html C:/Development/wireshark/run/$(Configuration)/udpdump.html
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">C:/Development/wireshark/CMakeFiles/6ba3fa05123b9ab37d449b6da8f9d786/udpdump.html.rule;C:\Development\wireshark\doc\udpdump.html;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">C:\Development\wireshark\run\$(Configuration)\udpdump.html</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">Generating run/$(Configuration)/udpdump.html</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E copy_if_different C:/Development/wireshark/doc/udpdump.html C:/Development/wireshark/run/$(Configuration)/udpdump.html
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">C:/Development/wireshark/CMakeFiles/6ba3fa05123b9ab37d449b6da8f9d786/udpdump.html.rule;C:\Development\wireshark\doc\udpdump.html;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">C:\Development\wireshark\run\$(Configuration)\udpdump.html</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">Generating run/$(Configuration)/udpdump.html</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E copy_if_different C:/Development/wireshark/doc/udpdump.html C:/Development/wireshark/run/$(Configuration)/udpdump.html
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">C:/Development/wireshark/CMakeFiles/6ba3fa05123b9ab37d449b6da8f9d786/udpdump.html.rule;C:\Development\wireshark\doc\udpdump.html;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">C:\Development\wireshark\run\$(Configuration)\udpdump.html</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="C:\Development\wireshark\CMakeFiles\6ba3fa05123b9ab37d449b6da8f9d786\capinfos.html.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">Generating run/$(Configuration)/capinfos.html</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E copy_if_different C:/Development/wireshark/doc/capinfos.html C:/Development/wireshark/run/$(Configuration)/capinfos.html
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">C:/Development/wireshark/CMakeFiles/6ba3fa05123b9ab37d449b6da8f9d786/capinfos.html.rule;C:\Development\wireshark\doc\capinfos.html;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">C:\Development\wireshark\run\$(Configuration)\capinfos.html</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">Generating run/$(Configuration)/capinfos.html</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E copy_if_different C:/Development/wireshark/doc/capinfos.html C:/Development/wireshark/run/$(Configuration)/capinfos.html
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">C:/Development/wireshark/CMakeFiles/6ba3fa05123b9ab37d449b6da8f9d786/capinfos.html.rule;C:\Development\wireshark\doc\capinfos.html;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">C:\Development\wireshark\run\$(Configuration)\capinfos.html</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">Generating run/$(Configuration)/capinfos.html</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E copy_if_different C:/Development/wireshark/doc/capinfos.html C:/Development/wireshark/run/$(Configuration)/capinfos.html
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">C:/Development/wireshark/CMakeFiles/6ba3fa05123b9ab37d449b6da8f9d786/capinfos.html.rule;C:\Development\wireshark\doc\capinfos.html;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">C:\Development\wireshark\run\$(Configuration)\capinfos.html</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">Generating run/$(Configuration)/capinfos.html</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E copy_if_different C:/Development/wireshark/doc/capinfos.html C:/Development/wireshark/run/$(Configuration)/capinfos.html
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">C:/Development/wireshark/CMakeFiles/6ba3fa05123b9ab37d449b6da8f9d786/capinfos.html.rule;C:\Development\wireshark\doc\capinfos.html;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">C:\Development\wireshark\run\$(Configuration)\capinfos.html</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="C:\Development\wireshark\CMakeFiles\6ba3fa05123b9ab37d449b6da8f9d786\captype.html.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">Generating run/$(Configuration)/captype.html</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E copy_if_different C:/Development/wireshark/doc/captype.html C:/Development/wireshark/run/$(Configuration)/captype.html
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">C:/Development/wireshark/CMakeFiles/6ba3fa05123b9ab37d449b6da8f9d786/captype.html.rule;C:\Development\wireshark\doc\captype.html;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">C:\Development\wireshark\run\$(Configuration)\captype.html</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">Generating run/$(Configuration)/captype.html</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E copy_if_different C:/Development/wireshark/doc/captype.html C:/Development/wireshark/run/$(Configuration)/captype.html
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">C:/Development/wireshark/CMakeFiles/6ba3fa05123b9ab37d449b6da8f9d786/captype.html.rule;C:\Development\wireshark\doc\captype.html;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">C:\Development\wireshark\run\$(Configuration)\captype.html</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">Generating run/$(Configuration)/captype.html</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E copy_if_different C:/Development/wireshark/doc/captype.html C:/Development/wireshark/run/$(Configuration)/captype.html
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">C:/Development/wireshark/CMakeFiles/6ba3fa05123b9ab37d449b6da8f9d786/captype.html.rule;C:\Development\wireshark\doc\captype.html;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">C:\Development\wireshark\run\$(Configuration)\captype.html</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">Generating run/$(Configuration)/captype.html</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E copy_if_different C:/Development/wireshark/doc/captype.html C:/Development/wireshark/run/$(Configuration)/captype.html
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">C:/Development/wireshark/CMakeFiles/6ba3fa05123b9ab37d449b6da8f9d786/captype.html.rule;C:\Development\wireshark\doc\captype.html;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">C:\Development\wireshark\run\$(Configuration)\captype.html</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="C:\Development\wireshark\CMakeFiles\6ba3fa05123b9ab37d449b6da8f9d786\ciscodump.html.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">Generating run/$(Configuration)/ciscodump.html</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E copy_if_different C:/Development/wireshark/doc/ciscodump.html C:/Development/wireshark/run/$(Configuration)/ciscodump.html
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">C:/Development/wireshark/CMakeFiles/6ba3fa05123b9ab37d449b6da8f9d786/ciscodump.html.rule;C:\Development\wireshark\doc\ciscodump.html;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">C:\Development\wireshark\run\$(Configuration)\ciscodump.html</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">Generating run/$(Configuration)/ciscodump.html</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E copy_if_different C:/Development/wireshark/doc/ciscodump.html C:/Development/wireshark/run/$(Configuration)/ciscodump.html
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">C:/Development/wireshark/CMakeFiles/6ba3fa05123b9ab37d449b6da8f9d786/ciscodump.html.rule;C:\Development\wireshark\doc\ciscodump.html;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">C:\Development\wireshark\run\$(Configuration)\ciscodump.html</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">Generating run/$(Configuration)/ciscodump.html</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E copy_if_different C:/Development/wireshark/doc/ciscodump.html C:/Development/wireshark/run/$(Configuration)/ciscodump.html
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">C:/Development/wireshark/CMakeFiles/6ba3fa05123b9ab37d449b6da8f9d786/ciscodump.html.rule;C:\Development\wireshark\doc\ciscodump.html;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">C:\Development\wireshark\run\$(Configuration)\ciscodump.html</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">Generating run/$(Configuration)/ciscodump.html</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E copy_if_different C:/Development/wireshark/doc/ciscodump.html C:/Development/wireshark/run/$(Configuration)/ciscodump.html
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">C:/Development/wireshark/CMakeFiles/6ba3fa05123b9ab37d449b6da8f9d786/ciscodump.html.rule;C:\Development\wireshark\doc\ciscodump.html;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">C:\Development\wireshark\run\$(Configuration)\ciscodump.html</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="C:\Development\wireshark\CMakeFiles\6ba3fa05123b9ab37d449b6da8f9d786\dftest.html.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">Generating run/$(Configuration)/dftest.html</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E copy_if_different C:/Development/wireshark/doc/dftest.html C:/Development/wireshark/run/$(Configuration)/dftest.html
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">C:/Development/wireshark/CMakeFiles/6ba3fa05123b9ab37d449b6da8f9d786/dftest.html.rule;C:\Development\wireshark\doc\dftest.html;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">C:\Development\wireshark\run\$(Configuration)\dftest.html</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">Generating run/$(Configuration)/dftest.html</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E copy_if_different C:/Development/wireshark/doc/dftest.html C:/Development/wireshark/run/$(Configuration)/dftest.html
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">C:/Development/wireshark/CMakeFiles/6ba3fa05123b9ab37d449b6da8f9d786/dftest.html.rule;C:\Development\wireshark\doc\dftest.html;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">C:\Development\wireshark\run\$(Configuration)\dftest.html</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">Generating run/$(Configuration)/dftest.html</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E copy_if_different C:/Development/wireshark/doc/dftest.html C:/Development/wireshark/run/$(Configuration)/dftest.html
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">C:/Development/wireshark/CMakeFiles/6ba3fa05123b9ab37d449b6da8f9d786/dftest.html.rule;C:\Development\wireshark\doc\dftest.html;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">C:\Development\wireshark\run\$(Configuration)\dftest.html</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">Generating run/$(Configuration)/dftest.html</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E copy_if_different C:/Development/wireshark/doc/dftest.html C:/Development/wireshark/run/$(Configuration)/dftest.html
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">C:/Development/wireshark/CMakeFiles/6ba3fa05123b9ab37d449b6da8f9d786/dftest.html.rule;C:\Development\wireshark\doc\dftest.html;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">C:\Development\wireshark\run\$(Configuration)\dftest.html</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="C:\Development\wireshark\CMakeFiles\6ba3fa05123b9ab37d449b6da8f9d786\dumpcap.html.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">Generating run/$(Configuration)/dumpcap.html</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E copy_if_different C:/Development/wireshark/doc/dumpcap.html C:/Development/wireshark/run/$(Configuration)/dumpcap.html
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">C:/Development/wireshark/CMakeFiles/6ba3fa05123b9ab37d449b6da8f9d786/dumpcap.html.rule;C:\Development\wireshark\doc\dumpcap.html;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">C:\Development\wireshark\run\$(Configuration)\dumpcap.html</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">Generating run/$(Configuration)/dumpcap.html</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E copy_if_different C:/Development/wireshark/doc/dumpcap.html C:/Development/wireshark/run/$(Configuration)/dumpcap.html
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">C:/Development/wireshark/CMakeFiles/6ba3fa05123b9ab37d449b6da8f9d786/dumpcap.html.rule;C:\Development\wireshark\doc\dumpcap.html;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">C:\Development\wireshark\run\$(Configuration)\dumpcap.html</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">Generating run/$(Configuration)/dumpcap.html</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E copy_if_different C:/Development/wireshark/doc/dumpcap.html C:/Development/wireshark/run/$(Configuration)/dumpcap.html
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">C:/Development/wireshark/CMakeFiles/6ba3fa05123b9ab37d449b6da8f9d786/dumpcap.html.rule;C:\Development\wireshark\doc\dumpcap.html;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">C:\Development\wireshark\run\$(Configuration)\dumpcap.html</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">Generating run/$(Configuration)/dumpcap.html</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E copy_if_different C:/Development/wireshark/doc/dumpcap.html C:/Development/wireshark/run/$(Configuration)/dumpcap.html
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">C:/Development/wireshark/CMakeFiles/6ba3fa05123b9ab37d449b6da8f9d786/dumpcap.html.rule;C:\Development\wireshark\doc\dumpcap.html;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">C:\Development\wireshark\run\$(Configuration)\dumpcap.html</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="C:\Development\wireshark\CMakeFiles\6ba3fa05123b9ab37d449b6da8f9d786\editcap.html.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">Generating run/$(Configuration)/editcap.html</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E copy_if_different C:/Development/wireshark/doc/editcap.html C:/Development/wireshark/run/$(Configuration)/editcap.html
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">C:/Development/wireshark/CMakeFiles/6ba3fa05123b9ab37d449b6da8f9d786/editcap.html.rule;C:\Development\wireshark\doc\editcap.html;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">C:\Development\wireshark\run\$(Configuration)\editcap.html</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">Generating run/$(Configuration)/editcap.html</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E copy_if_different C:/Development/wireshark/doc/editcap.html C:/Development/wireshark/run/$(Configuration)/editcap.html
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">C:/Development/wireshark/CMakeFiles/6ba3fa05123b9ab37d449b6da8f9d786/editcap.html.rule;C:\Development\wireshark\doc\editcap.html;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">C:\Development\wireshark\run\$(Configuration)\editcap.html</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">Generating run/$(Configuration)/editcap.html</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E copy_if_different C:/Development/wireshark/doc/editcap.html C:/Development/wireshark/run/$(Configuration)/editcap.html
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">C:/Development/wireshark/CMakeFiles/6ba3fa05123b9ab37d449b6da8f9d786/editcap.html.rule;C:\Development\wireshark\doc\editcap.html;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">C:\Development\wireshark\run\$(Configuration)\editcap.html</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">Generating run/$(Configuration)/editcap.html</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E copy_if_different C:/Development/wireshark/doc/editcap.html C:/Development/wireshark/run/$(Configuration)/editcap.html
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">C:/Development/wireshark/CMakeFiles/6ba3fa05123b9ab37d449b6da8f9d786/editcap.html.rule;C:\Development\wireshark\doc\editcap.html;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">C:\Development\wireshark\run\$(Configuration)\editcap.html</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="C:\Development\wireshark\CMakeFiles\6ba3fa05123b9ab37d449b6da8f9d786\extcap.html.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">Generating run/$(Configuration)/extcap.html</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E copy_if_different C:/Development/wireshark/doc/extcap.html C:/Development/wireshark/run/$(Configuration)/extcap.html
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">C:/Development/wireshark/CMakeFiles/6ba3fa05123b9ab37d449b6da8f9d786/extcap.html.rule;C:\Development\wireshark\doc\extcap.html;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">C:\Development\wireshark\run\$(Configuration)\extcap.html</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">Generating run/$(Configuration)/extcap.html</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E copy_if_different C:/Development/wireshark/doc/extcap.html C:/Development/wireshark/run/$(Configuration)/extcap.html
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">C:/Development/wireshark/CMakeFiles/6ba3fa05123b9ab37d449b6da8f9d786/extcap.html.rule;C:\Development\wireshark\doc\extcap.html;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">C:\Development\wireshark\run\$(Configuration)\extcap.html</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">Generating run/$(Configuration)/extcap.html</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E copy_if_different C:/Development/wireshark/doc/extcap.html C:/Development/wireshark/run/$(Configuration)/extcap.html
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">C:/Development/wireshark/CMakeFiles/6ba3fa05123b9ab37d449b6da8f9d786/extcap.html.rule;C:\Development\wireshark\doc\extcap.html;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">C:\Development\wireshark\run\$(Configuration)\extcap.html</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">Generating run/$(Configuration)/extcap.html</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E copy_if_different C:/Development/wireshark/doc/extcap.html C:/Development/wireshark/run/$(Configuration)/extcap.html
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">C:/Development/wireshark/CMakeFiles/6ba3fa05123b9ab37d449b6da8f9d786/extcap.html.rule;C:\Development\wireshark\doc\extcap.html;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">C:\Development\wireshark\run\$(Configuration)\extcap.html</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="C:\Development\wireshark\CMakeFiles\6ba3fa05123b9ab37d449b6da8f9d786\mergecap.html.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">Generating run/$(Configuration)/mergecap.html</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E copy_if_different C:/Development/wireshark/doc/mergecap.html C:/Development/wireshark/run/$(Configuration)/mergecap.html
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">C:/Development/wireshark/CMakeFiles/6ba3fa05123b9ab37d449b6da8f9d786/mergecap.html.rule;C:\Development\wireshark\doc\mergecap.html;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">C:\Development\wireshark\run\$(Configuration)\mergecap.html</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">Generating run/$(Configuration)/mergecap.html</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E copy_if_different C:/Development/wireshark/doc/mergecap.html C:/Development/wireshark/run/$(Configuration)/mergecap.html
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">C:/Development/wireshark/CMakeFiles/6ba3fa05123b9ab37d449b6da8f9d786/mergecap.html.rule;C:\Development\wireshark\doc\mergecap.html;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">C:\Development\wireshark\run\$(Configuration)\mergecap.html</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">Generating run/$(Configuration)/mergecap.html</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E copy_if_different C:/Development/wireshark/doc/mergecap.html C:/Development/wireshark/run/$(Configuration)/mergecap.html
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">C:/Development/wireshark/CMakeFiles/6ba3fa05123b9ab37d449b6da8f9d786/mergecap.html.rule;C:\Development\wireshark\doc\mergecap.html;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">C:\Development\wireshark\run\$(Configuration)\mergecap.html</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">Generating run/$(Configuration)/mergecap.html</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E copy_if_different C:/Development/wireshark/doc/mergecap.html C:/Development/wireshark/run/$(Configuration)/mergecap.html
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">C:/Development/wireshark/CMakeFiles/6ba3fa05123b9ab37d449b6da8f9d786/mergecap.html.rule;C:\Development\wireshark\doc\mergecap.html;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">C:\Development\wireshark\run\$(Configuration)\mergecap.html</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="C:\Development\wireshark\CMakeFiles\6ba3fa05123b9ab37d449b6da8f9d786\randpkt.html.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">Generating run/$(Configuration)/randpkt.html</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E copy_if_different C:/Development/wireshark/doc/randpkt.html C:/Development/wireshark/run/$(Configuration)/randpkt.html
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">C:/Development/wireshark/CMakeFiles/6ba3fa05123b9ab37d449b6da8f9d786/randpkt.html.rule;C:\Development\wireshark\doc\randpkt.html;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">C:\Development\wireshark\run\$(Configuration)\randpkt.html</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">Generating run/$(Configuration)/randpkt.html</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E copy_if_different C:/Development/wireshark/doc/randpkt.html C:/Development/wireshark/run/$(Configuration)/randpkt.html
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">C:/Development/wireshark/CMakeFiles/6ba3fa05123b9ab37d449b6da8f9d786/randpkt.html.rule;C:\Development\wireshark\doc\randpkt.html;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">C:\Development\wireshark\run\$(Configuration)\randpkt.html</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">Generating run/$(Configuration)/randpkt.html</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E copy_if_different C:/Development/wireshark/doc/randpkt.html C:/Development/wireshark/run/$(Configuration)/randpkt.html
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">C:/Development/wireshark/CMakeFiles/6ba3fa05123b9ab37d449b6da8f9d786/randpkt.html.rule;C:\Development\wireshark\doc\randpkt.html;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">C:\Development\wireshark\run\$(Configuration)\randpkt.html</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">Generating run/$(Configuration)/randpkt.html</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E copy_if_different C:/Development/wireshark/doc/randpkt.html C:/Development/wireshark/run/$(Configuration)/randpkt.html
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">C:/Development/wireshark/CMakeFiles/6ba3fa05123b9ab37d449b6da8f9d786/randpkt.html.rule;C:\Development\wireshark\doc\randpkt.html;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">C:\Development\wireshark\run\$(Configuration)\randpkt.html</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="C:\Development\wireshark\CMakeFiles\6ba3fa05123b9ab37d449b6da8f9d786\randpktdump.html.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">Generating run/$(Configuration)/randpktdump.html</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E copy_if_different C:/Development/wireshark/doc/randpktdump.html C:/Development/wireshark/run/$(Configuration)/randpktdump.html
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">C:/Development/wireshark/CMakeFiles/6ba3fa05123b9ab37d449b6da8f9d786/randpktdump.html.rule;C:\Development\wireshark\doc\randpktdump.html;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">C:\Development\wireshark\run\$(Configuration)\randpktdump.html</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">Generating run/$(Configuration)/randpktdump.html</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E copy_if_different C:/Development/wireshark/doc/randpktdump.html C:/Development/wireshark/run/$(Configuration)/randpktdump.html
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">C:/Development/wireshark/CMakeFiles/6ba3fa05123b9ab37d449b6da8f9d786/randpktdump.html.rule;C:\Development\wireshark\doc\randpktdump.html;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">C:\Development\wireshark\run\$(Configuration)\randpktdump.html</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">Generating run/$(Configuration)/randpktdump.html</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E copy_if_different C:/Development/wireshark/doc/randpktdump.html C:/Development/wireshark/run/$(Configuration)/randpktdump.html
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">C:/Development/wireshark/CMakeFiles/6ba3fa05123b9ab37d449b6da8f9d786/randpktdump.html.rule;C:\Development\wireshark\doc\randpktdump.html;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">C:\Development\wireshark\run\$(Configuration)\randpktdump.html</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">Generating run/$(Configuration)/randpktdump.html</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E copy_if_different C:/Development/wireshark/doc/randpktdump.html C:/Development/wireshark/run/$(Configuration)/randpktdump.html
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">C:/Development/wireshark/CMakeFiles/6ba3fa05123b9ab37d449b6da8f9d786/randpktdump.html.rule;C:\Development\wireshark\doc\randpktdump.html;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">C:\Development\wireshark\run\$(Configuration)\randpktdump.html</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="C:\Development\wireshark\CMakeFiles\6ba3fa05123b9ab37d449b6da8f9d786\rawshark.html.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">Generating run/$(Configuration)/rawshark.html</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E copy_if_different C:/Development/wireshark/doc/rawshark.html C:/Development/wireshark/run/$(Configuration)/rawshark.html
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">C:/Development/wireshark/CMakeFiles/6ba3fa05123b9ab37d449b6da8f9d786/rawshark.html.rule;C:\Development\wireshark\doc\rawshark.html;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">C:\Development\wireshark\run\$(Configuration)\rawshark.html</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">Generating run/$(Configuration)/rawshark.html</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E copy_if_different C:/Development/wireshark/doc/rawshark.html C:/Development/wireshark/run/$(Configuration)/rawshark.html
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">C:/Development/wireshark/CMakeFiles/6ba3fa05123b9ab37d449b6da8f9d786/rawshark.html.rule;C:\Development\wireshark\doc\rawshark.html;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">C:\Development\wireshark\run\$(Configuration)\rawshark.html</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">Generating run/$(Configuration)/rawshark.html</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E copy_if_different C:/Development/wireshark/doc/rawshark.html C:/Development/wireshark/run/$(Configuration)/rawshark.html
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">C:/Development/wireshark/CMakeFiles/6ba3fa05123b9ab37d449b6da8f9d786/rawshark.html.rule;C:\Development\wireshark\doc\rawshark.html;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">C:\Development\wireshark\run\$(Configuration)\rawshark.html</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">Generating run/$(Configuration)/rawshark.html</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E copy_if_different C:/Development/wireshark/doc/rawshark.html C:/Development/wireshark/run/$(Configuration)/rawshark.html
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">C:/Development/wireshark/CMakeFiles/6ba3fa05123b9ab37d449b6da8f9d786/rawshark.html.rule;C:\Development\wireshark\doc\rawshark.html;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">C:\Development\wireshark\run\$(Configuration)\rawshark.html</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="C:\Development\wireshark\CMakeFiles\6ba3fa05123b9ab37d449b6da8f9d786\reordercap.html.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">Generating run/$(Configuration)/reordercap.html</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E copy_if_different C:/Development/wireshark/doc/reordercap.html C:/Development/wireshark/run/$(Configuration)/reordercap.html
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">C:/Development/wireshark/CMakeFiles/6ba3fa05123b9ab37d449b6da8f9d786/reordercap.html.rule;C:\Development\wireshark\doc\reordercap.html;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">C:\Development\wireshark\run\$(Configuration)\reordercap.html</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">Generating run/$(Configuration)/reordercap.html</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E copy_if_different C:/Development/wireshark/doc/reordercap.html C:/Development/wireshark/run/$(Configuration)/reordercap.html
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">C:/Development/wireshark/CMakeFiles/6ba3fa05123b9ab37d449b6da8f9d786/reordercap.html.rule;C:\Development\wireshark\doc\reordercap.html;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">C:\Development\wireshark\run\$(Configuration)\reordercap.html</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">Generating run/$(Configuration)/reordercap.html</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E copy_if_different C:/Development/wireshark/doc/reordercap.html C:/Development/wireshark/run/$(Configuration)/reordercap.html
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">C:/Development/wireshark/CMakeFiles/6ba3fa05123b9ab37d449b6da8f9d786/reordercap.html.rule;C:\Development\wireshark\doc\reordercap.html;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">C:\Development\wireshark\run\$(Configuration)\reordercap.html</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">Generating run/$(Configuration)/reordercap.html</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E copy_if_different C:/Development/wireshark/doc/reordercap.html C:/Development/wireshark/run/$(Configuration)/reordercap.html
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">C:/Development/wireshark/CMakeFiles/6ba3fa05123b9ab37d449b6da8f9d786/reordercap.html.rule;C:\Development\wireshark\doc\reordercap.html;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">C:\Development\wireshark\run\$(Configuration)\reordercap.html</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="C:\Development\wireshark\CMakeFiles\6ba3fa05123b9ab37d449b6da8f9d786\sshdump.html.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">Generating run/$(Configuration)/sshdump.html</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E copy_if_different C:/Development/wireshark/doc/sshdump.html C:/Development/wireshark/run/$(Configuration)/sshdump.html
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">C:/Development/wireshark/CMakeFiles/6ba3fa05123b9ab37d449b6da8f9d786/sshdump.html.rule;C:\Development\wireshark\doc\sshdump.html;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">C:\Development\wireshark\run\$(Configuration)\sshdump.html</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">Generating run/$(Configuration)/sshdump.html</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E copy_if_different C:/Development/wireshark/doc/sshdump.html C:/Development/wireshark/run/$(Configuration)/sshdump.html
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">C:/Development/wireshark/CMakeFiles/6ba3fa05123b9ab37d449b6da8f9d786/sshdump.html.rule;C:\Development\wireshark\doc\sshdump.html;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">C:\Development\wireshark\run\$(Configuration)\sshdump.html</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">Generating run/$(Configuration)/sshdump.html</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E copy_if_different C:/Development/wireshark/doc/sshdump.html C:/Development/wireshark/run/$(Configuration)/sshdump.html
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">C:/Development/wireshark/CMakeFiles/6ba3fa05123b9ab37d449b6da8f9d786/sshdump.html.rule;C:\Development\wireshark\doc\sshdump.html;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">C:\Development\wireshark\run\$(Configuration)\sshdump.html</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">Generating run/$(Configuration)/sshdump.html</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E copy_if_different C:/Development/wireshark/doc/sshdump.html C:/Development/wireshark/run/$(Configuration)/sshdump.html
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">C:/Development/wireshark/CMakeFiles/6ba3fa05123b9ab37d449b6da8f9d786/sshdump.html.rule;C:\Development\wireshark\doc\sshdump.html;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">C:\Development\wireshark\run\$(Configuration)\sshdump.html</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="C:\Development\wireshark\CMakeFiles\6ba3fa05123b9ab37d449b6da8f9d786\text2pcap.html.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">Generating run/$(Configuration)/text2pcap.html</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E copy_if_different C:/Development/wireshark/doc/text2pcap.html C:/Development/wireshark/run/$(Configuration)/text2pcap.html
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">C:/Development/wireshark/CMakeFiles/6ba3fa05123b9ab37d449b6da8f9d786/text2pcap.html.rule;C:\Development\wireshark\doc\text2pcap.html;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">C:\Development\wireshark\run\$(Configuration)\text2pcap.html</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">Generating run/$(Configuration)/text2pcap.html</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E copy_if_different C:/Development/wireshark/doc/text2pcap.html C:/Development/wireshark/run/$(Configuration)/text2pcap.html
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">C:/Development/wireshark/CMakeFiles/6ba3fa05123b9ab37d449b6da8f9d786/text2pcap.html.rule;C:\Development\wireshark\doc\text2pcap.html;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">C:\Development\wireshark\run\$(Configuration)\text2pcap.html</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">Generating run/$(Configuration)/text2pcap.html</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E copy_if_different C:/Development/wireshark/doc/text2pcap.html C:/Development/wireshark/run/$(Configuration)/text2pcap.html
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">C:/Development/wireshark/CMakeFiles/6ba3fa05123b9ab37d449b6da8f9d786/text2pcap.html.rule;C:\Development\wireshark\doc\text2pcap.html;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">C:\Development\wireshark\run\$(Configuration)\text2pcap.html</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">Generating run/$(Configuration)/text2pcap.html</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E copy_if_different C:/Development/wireshark/doc/text2pcap.html C:/Development/wireshark/run/$(Configuration)/text2pcap.html
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">C:/Development/wireshark/CMakeFiles/6ba3fa05123b9ab37d449b6da8f9d786/text2pcap.html.rule;C:\Development\wireshark\doc\text2pcap.html;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">C:\Development\wireshark\run\$(Configuration)\text2pcap.html</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="C:\Development\wireshark\CMakeFiles\6ba3fa05123b9ab37d449b6da8f9d786\tshark.html.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">Generating run/$(Configuration)/tshark.html</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E copy_if_different C:/Development/wireshark/doc/tshark.html C:/Development/wireshark/run/$(Configuration)/tshark.html
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">C:/Development/wireshark/CMakeFiles/6ba3fa05123b9ab37d449b6da8f9d786/tshark.html.rule;C:\Development\wireshark\doc\tshark.html;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">C:\Development\wireshark\run\$(Configuration)\tshark.html</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">Generating run/$(Configuration)/tshark.html</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E copy_if_different C:/Development/wireshark/doc/tshark.html C:/Development/wireshark/run/$(Configuration)/tshark.html
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">C:/Development/wireshark/CMakeFiles/6ba3fa05123b9ab37d449b6da8f9d786/tshark.html.rule;C:\Development\wireshark\doc\tshark.html;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">C:\Development\wireshark\run\$(Configuration)\tshark.html</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">Generating run/$(Configuration)/tshark.html</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E copy_if_different C:/Development/wireshark/doc/tshark.html C:/Development/wireshark/run/$(Configuration)/tshark.html
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">C:/Development/wireshark/CMakeFiles/6ba3fa05123b9ab37d449b6da8f9d786/tshark.html.rule;C:\Development\wireshark\doc\tshark.html;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">C:\Development\wireshark\run\$(Configuration)\tshark.html</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">Generating run/$(Configuration)/tshark.html</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E copy_if_different C:/Development/wireshark/doc/tshark.html C:/Development/wireshark/run/$(Configuration)/tshark.html
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">C:/Development/wireshark/CMakeFiles/6ba3fa05123b9ab37d449b6da8f9d786/tshark.html.rule;C:\Development\wireshark\doc\tshark.html;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">C:\Development\wireshark\run\$(Configuration)\tshark.html</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="C:\Development\wireshark\CMakeFiles\6ba3fa05123b9ab37d449b6da8f9d786\wireshark.html.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">Generating run/$(Configuration)/wireshark.html</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E copy_if_different C:/Development/wireshark/doc/wireshark.html C:/Development/wireshark/run/$(Configuration)/wireshark.html
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">C:/Development/wireshark/CMakeFiles/6ba3fa05123b9ab37d449b6da8f9d786/wireshark.html.rule;C:\Development\wireshark\doc\wireshark.html;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">C:\Development\wireshark\run\$(Configuration)\wireshark.html</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">Generating run/$(Configuration)/wireshark.html</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E copy_if_different C:/Development/wireshark/doc/wireshark.html C:/Development/wireshark/run/$(Configuration)/wireshark.html
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">C:/Development/wireshark/CMakeFiles/6ba3fa05123b9ab37d449b6da8f9d786/wireshark.html.rule;C:\Development\wireshark\doc\wireshark.html;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">C:\Development\wireshark\run\$(Configuration)\wireshark.html</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">Generating run/$(Configuration)/wireshark.html</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E copy_if_different C:/Development/wireshark/doc/wireshark.html C:/Development/wireshark/run/$(Configuration)/wireshark.html
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">C:/Development/wireshark/CMakeFiles/6ba3fa05123b9ab37d449b6da8f9d786/wireshark.html.rule;C:\Development\wireshark\doc\wireshark.html;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">C:\Development\wireshark\run\$(Configuration)\wireshark.html</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">Generating run/$(Configuration)/wireshark.html</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E copy_if_different C:/Development/wireshark/doc/wireshark.html C:/Development/wireshark/run/$(Configuration)/wireshark.html
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">C:/Development/wireshark/CMakeFiles/6ba3fa05123b9ab37d449b6da8f9d786/wireshark.html.rule;C:\Development\wireshark\doc\wireshark.html;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">C:\Development\wireshark\run\$(Configuration)\wireshark.html</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="C:\Development\wireshark\CMakeFiles\6ba3fa05123b9ab37d449b6da8f9d786\wireshark-filter.html.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">Generating run/$(Configuration)/wireshark-filter.html</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E copy_if_different C:/Development/wireshark/doc/wireshark-filter.html C:/Development/wireshark/run/$(Configuration)/wireshark-filter.html
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">C:/Development/wireshark/CMakeFiles/6ba3fa05123b9ab37d449b6da8f9d786/wireshark-filter.html.rule;C:\Development\wireshark\doc\wireshark-filter.html;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">C:\Development\wireshark\run\$(Configuration)\wireshark-filter.html</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">Generating run/$(Configuration)/wireshark-filter.html</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E copy_if_different C:/Development/wireshark/doc/wireshark-filter.html C:/Development/wireshark/run/$(Configuration)/wireshark-filter.html
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">C:/Development/wireshark/CMakeFiles/6ba3fa05123b9ab37d449b6da8f9d786/wireshark-filter.html.rule;C:\Development\wireshark\doc\wireshark-filter.html;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">C:\Development\wireshark\run\$(Configuration)\wireshark-filter.html</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">Generating run/$(Configuration)/wireshark-filter.html</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E copy_if_different C:/Development/wireshark/doc/wireshark-filter.html C:/Development/wireshark/run/$(Configuration)/wireshark-filter.html
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">C:/Development/wireshark/CMakeFiles/6ba3fa05123b9ab37d449b6da8f9d786/wireshark-filter.html.rule;C:\Development\wireshark\doc\wireshark-filter.html;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">C:\Development\wireshark\run\$(Configuration)\wireshark-filter.html</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">Generating run/$(Configuration)/wireshark-filter.html</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E copy_if_different C:/Development/wireshark/doc/wireshark-filter.html C:/Development/wireshark/run/$(Configuration)/wireshark-filter.html
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">C:/Development/wireshark/CMakeFiles/6ba3fa05123b9ab37d449b6da8f9d786/wireshark-filter.html.rule;C:\Development\wireshark\doc\wireshark-filter.html;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">C:\Development\wireshark\run\$(Configuration)\wireshark-filter.html</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="C:\Development\wireshark\CMakeFiles\6ba3fa05123b9ab37d449b6da8f9d786\mmdbresolve.html.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">Generating run/$(Configuration)/mmdbresolve.html</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E copy_if_different C:/Development/wireshark/doc/mmdbresolve.html C:/Development/wireshark/run/$(Configuration)/mmdbresolve.html
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">C:/Development/wireshark/CMakeFiles/6ba3fa05123b9ab37d449b6da8f9d786/mmdbresolve.html.rule;C:\Development\wireshark\doc\mmdbresolve.html;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">C:\Development\wireshark\run\$(Configuration)\mmdbresolve.html</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">Generating run/$(Configuration)/mmdbresolve.html</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E copy_if_different C:/Development/wireshark/doc/mmdbresolve.html C:/Development/wireshark/run/$(Configuration)/mmdbresolve.html
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">C:/Development/wireshark/CMakeFiles/6ba3fa05123b9ab37d449b6da8f9d786/mmdbresolve.html.rule;C:\Development\wireshark\doc\mmdbresolve.html;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">C:\Development\wireshark\run\$(Configuration)\mmdbresolve.html</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">Generating run/$(Configuration)/mmdbresolve.html</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E copy_if_different C:/Development/wireshark/doc/mmdbresolve.html C:/Development/wireshark/run/$(Configuration)/mmdbresolve.html
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">C:/Development/wireshark/CMakeFiles/6ba3fa05123b9ab37d449b6da8f9d786/mmdbresolve.html.rule;C:\Development\wireshark\doc\mmdbresolve.html;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">C:\Development\wireshark\run\$(Configuration)\mmdbresolve.html</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">Generating run/$(Configuration)/mmdbresolve.html</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E copy_if_different C:/Development/wireshark/doc/mmdbresolve.html C:/Development/wireshark/run/$(Configuration)/mmdbresolve.html
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">C:/Development/wireshark/CMakeFiles/6ba3fa05123b9ab37d449b6da8f9d786/mmdbresolve.html.rule;C:\Development\wireshark\doc\mmdbresolve.html;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">C:\Development\wireshark\run\$(Configuration)\mmdbresolve.html</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="C:\Development\wireshark\CMakeFiles\6ba3fa05123b9ab37d449b6da8f9d786\init.lua.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">Generating run/$(Configuration)/init.lua</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E copy_if_different C:/Development/wireshark/epan/wslua/init.lua C:/Development/wireshark/run/$(Configuration)/init.lua
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">C:/Development/wireshark/CMakeFiles/6ba3fa05123b9ab37d449b6da8f9d786/init.lua.rule;C:\Development\wireshark\epan\wslua\init.lua;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">C:\Development\wireshark\run\$(Configuration)\init.lua</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">Generating run/$(Configuration)/init.lua</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E copy_if_different C:/Development/wireshark/epan/wslua/init.lua C:/Development/wireshark/run/$(Configuration)/init.lua
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">C:/Development/wireshark/CMakeFiles/6ba3fa05123b9ab37d449b6da8f9d786/init.lua.rule;C:\Development\wireshark\epan\wslua\init.lua;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">C:\Development\wireshark\run\$(Configuration)\init.lua</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">Generating run/$(Configuration)/init.lua</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E copy_if_different C:/Development/wireshark/epan/wslua/init.lua C:/Development/wireshark/run/$(Configuration)/init.lua
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">C:/Development/wireshark/CMakeFiles/6ba3fa05123b9ab37d449b6da8f9d786/init.lua.rule;C:\Development\wireshark\epan\wslua\init.lua;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">C:\Development\wireshark\run\$(Configuration)\init.lua</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">Generating run/$(Configuration)/init.lua</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E copy_if_different C:/Development/wireshark/epan/wslua/init.lua C:/Development/wireshark/run/$(Configuration)/init.lua
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">C:/Development/wireshark/CMakeFiles/6ba3fa05123b9ab37d449b6da8f9d786/init.lua.rule;C:\Development\wireshark\epan\wslua\init.lua;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">C:\Development\wireshark\run\$(Configuration)\init.lua</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="C:\Development\wireshark\CMakeFiles\6ba3fa05123b9ab37d449b6da8f9d786\console.lua.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">Generating run/$(Configuration)/console.lua</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E copy_if_different C:/Development/wireshark/epan/wslua/console.lua C:/Development/wireshark/run/$(Configuration)/console.lua
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">C:/Development/wireshark/CMakeFiles/6ba3fa05123b9ab37d449b6da8f9d786/console.lua.rule;C:\Development\wireshark\epan\wslua\console.lua;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">C:\Development\wireshark\run\$(Configuration)\console.lua</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">Generating run/$(Configuration)/console.lua</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E copy_if_different C:/Development/wireshark/epan/wslua/console.lua C:/Development/wireshark/run/$(Configuration)/console.lua
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">C:/Development/wireshark/CMakeFiles/6ba3fa05123b9ab37d449b6da8f9d786/console.lua.rule;C:\Development\wireshark\epan\wslua\console.lua;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">C:\Development\wireshark\run\$(Configuration)\console.lua</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">Generating run/$(Configuration)/console.lua</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E copy_if_different C:/Development/wireshark/epan/wslua/console.lua C:/Development/wireshark/run/$(Configuration)/console.lua
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">C:/Development/wireshark/CMakeFiles/6ba3fa05123b9ab37d449b6da8f9d786/console.lua.rule;C:\Development\wireshark\epan\wslua\console.lua;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">C:\Development\wireshark\run\$(Configuration)\console.lua</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">Generating run/$(Configuration)/console.lua</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E copy_if_different C:/Development/wireshark/epan/wslua/console.lua C:/Development/wireshark/run/$(Configuration)/console.lua
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">C:/Development/wireshark/CMakeFiles/6ba3fa05123b9ab37d449b6da8f9d786/console.lua.rule;C:\Development\wireshark\epan\wslua\console.lua;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">C:\Development\wireshark\run\$(Configuration)\console.lua</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="C:\Development\wireshark\CMakeFiles\6ba3fa05123b9ab37d449b6da8f9d786\dtd_gen.lua.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">Generating run/$(Configuration)/dtd_gen.lua</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E copy_if_different C:/Development/wireshark/epan/wslua/dtd_gen.lua C:/Development/wireshark/run/$(Configuration)/dtd_gen.lua
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">C:/Development/wireshark/CMakeFiles/6ba3fa05123b9ab37d449b6da8f9d786/dtd_gen.lua.rule;C:\Development\wireshark\epan\wslua\dtd_gen.lua;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">C:\Development\wireshark\run\$(Configuration)\dtd_gen.lua</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">Generating run/$(Configuration)/dtd_gen.lua</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E copy_if_different C:/Development/wireshark/epan/wslua/dtd_gen.lua C:/Development/wireshark/run/$(Configuration)/dtd_gen.lua
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">C:/Development/wireshark/CMakeFiles/6ba3fa05123b9ab37d449b6da8f9d786/dtd_gen.lua.rule;C:\Development\wireshark\epan\wslua\dtd_gen.lua;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">C:\Development\wireshark\run\$(Configuration)\dtd_gen.lua</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">Generating run/$(Configuration)/dtd_gen.lua</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E copy_if_different C:/Development/wireshark/epan/wslua/dtd_gen.lua C:/Development/wireshark/run/$(Configuration)/dtd_gen.lua
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">C:/Development/wireshark/CMakeFiles/6ba3fa05123b9ab37d449b6da8f9d786/dtd_gen.lua.rule;C:\Development\wireshark\epan\wslua\dtd_gen.lua;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">C:\Development\wireshark\run\$(Configuration)\dtd_gen.lua</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">Generating run/$(Configuration)/dtd_gen.lua</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E copy_if_different C:/Development/wireshark/epan/wslua/dtd_gen.lua C:/Development/wireshark/run/$(Configuration)/dtd_gen.lua
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">C:/Development/wireshark/CMakeFiles/6ba3fa05123b9ab37d449b6da8f9d786/dtd_gen.lua.rule;C:\Development\wireshark\epan\wslua\dtd_gen.lua;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">C:\Development\wireshark\run\$(Configuration)\dtd_gen.lua</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="C:\Development\wireshark\CMakeFiles\0ae91614a3e22bfce0e7a15279086d90\tpncp.dat.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">Generating run/$(Configuration)/tpncp/tpncp.dat</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E copy_if_different C:/Development/wireshark/tpncp/tpncp.dat C:/Development/wireshark/run/$(Configuration)/tpncp/tpncp.dat
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">C:/Development/wireshark/CMakeFiles/0ae91614a3e22bfce0e7a15279086d90/tpncp.dat.rule;C:\Development\wireshark\tpncp\tpncp.dat;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">C:\Development\wireshark\run\$(Configuration)\tpncp\tpncp.dat</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">Generating run/$(Configuration)/tpncp/tpncp.dat</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E copy_if_different C:/Development/wireshark/tpncp/tpncp.dat C:/Development/wireshark/run/$(Configuration)/tpncp/tpncp.dat
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">C:/Development/wireshark/CMakeFiles/0ae91614a3e22bfce0e7a15279086d90/tpncp.dat.rule;C:\Development\wireshark\tpncp\tpncp.dat;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">C:\Development\wireshark\run\$(Configuration)\tpncp\tpncp.dat</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">Generating run/$(Configuration)/tpncp/tpncp.dat</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E copy_if_different C:/Development/wireshark/tpncp/tpncp.dat C:/Development/wireshark/run/$(Configuration)/tpncp/tpncp.dat
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">C:/Development/wireshark/CMakeFiles/0ae91614a3e22bfce0e7a15279086d90/tpncp.dat.rule;C:\Development\wireshark\tpncp\tpncp.dat;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">C:\Development\wireshark\run\$(Configuration)\tpncp\tpncp.dat</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">Generating run/$(Configuration)/tpncp/tpncp.dat</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E copy_if_different C:/Development/wireshark/tpncp/tpncp.dat C:/Development/wireshark/run/$(Configuration)/tpncp/tpncp.dat
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">C:/Development/wireshark/CMakeFiles/0ae91614a3e22bfce0e7a15279086d90/tpncp.dat.rule;C:\Development\wireshark\tpncp\tpncp.dat;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">C:\Development\wireshark\run\$(Configuration)\tpncp\tpncp.dat</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="C:\Development\wireshark\CMakeFiles\8bd51bb4c8603a18a29f1c9bd767dcc3\dictionary.dtd.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">Generating run/$(Configuration)/wimaxasncp/dictionary.dtd</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E copy_if_different C:/Development/wireshark/wimaxasncp/dictionary.dtd C:/Development/wireshark/run/$(Configuration)/wimaxasncp/dictionary.dtd
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">C:/Development/wireshark/CMakeFiles/8bd51bb4c8603a18a29f1c9bd767dcc3/dictionary.dtd.rule;C:\Development\wireshark\wimaxasncp\dictionary.dtd;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">C:\Development\wireshark\run\$(Configuration)\wimaxasncp\dictionary.dtd</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">Generating run/$(Configuration)/wimaxasncp/dictionary.dtd</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E copy_if_different C:/Development/wireshark/wimaxasncp/dictionary.dtd C:/Development/wireshark/run/$(Configuration)/wimaxasncp/dictionary.dtd
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">C:/Development/wireshark/CMakeFiles/8bd51bb4c8603a18a29f1c9bd767dcc3/dictionary.dtd.rule;C:\Development\wireshark\wimaxasncp\dictionary.dtd;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">C:\Development\wireshark\run\$(Configuration)\wimaxasncp\dictionary.dtd</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">Generating run/$(Configuration)/wimaxasncp/dictionary.dtd</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E copy_if_different C:/Development/wireshark/wimaxasncp/dictionary.dtd C:/Development/wireshark/run/$(Configuration)/wimaxasncp/dictionary.dtd
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">C:/Development/wireshark/CMakeFiles/8bd51bb4c8603a18a29f1c9bd767dcc3/dictionary.dtd.rule;C:\Development\wireshark\wimaxasncp\dictionary.dtd;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">C:\Development\wireshark\run\$(Configuration)\wimaxasncp\dictionary.dtd</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">Generating run/$(Configuration)/wimaxasncp/dictionary.dtd</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E copy_if_different C:/Development/wireshark/wimaxasncp/dictionary.dtd C:/Development/wireshark/run/$(Configuration)/wimaxasncp/dictionary.dtd
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">C:/Development/wireshark/CMakeFiles/8bd51bb4c8603a18a29f1c9bd767dcc3/dictionary.dtd.rule;C:\Development\wireshark\wimaxasncp\dictionary.dtd;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">C:\Development\wireshark\run\$(Configuration)\wimaxasncp\dictionary.dtd</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="C:\Development\wireshark\CMakeFiles\8bd51bb4c8603a18a29f1c9bd767dcc3\dictionary.xml.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">Generating run/$(Configuration)/wimaxasncp/dictionary.xml</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E copy_if_different C:/Development/wireshark/wimaxasncp/dictionary.xml C:/Development/wireshark/run/$(Configuration)/wimaxasncp/dictionary.xml
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">C:/Development/wireshark/CMakeFiles/8bd51bb4c8603a18a29f1c9bd767dcc3/dictionary.xml.rule;C:\Development\wireshark\wimaxasncp\dictionary.xml;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">C:\Development\wireshark\run\$(Configuration)\wimaxasncp\dictionary.xml</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">Generating run/$(Configuration)/wimaxasncp/dictionary.xml</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E copy_if_different C:/Development/wireshark/wimaxasncp/dictionary.xml C:/Development/wireshark/run/$(Configuration)/wimaxasncp/dictionary.xml
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">C:/Development/wireshark/CMakeFiles/8bd51bb4c8603a18a29f1c9bd767dcc3/dictionary.xml.rule;C:\Development\wireshark\wimaxasncp\dictionary.xml;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">C:\Development\wireshark\run\$(Configuration)\wimaxasncp\dictionary.xml</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">Generating run/$(Configuration)/wimaxasncp/dictionary.xml</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E copy_if_different C:/Development/wireshark/wimaxasncp/dictionary.xml C:/Development/wireshark/run/$(Configuration)/wimaxasncp/dictionary.xml
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">C:/Development/wireshark/CMakeFiles/8bd51bb4c8603a18a29f1c9bd767dcc3/dictionary.xml.rule;C:\Development\wireshark\wimaxasncp\dictionary.xml;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">C:\Development\wireshark\run\$(Configuration)\wimaxasncp\dictionary.xml</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">Generating run/$(Configuration)/wimaxasncp/dictionary.xml</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E copy_if_different C:/Development/wireshark/wimaxasncp/dictionary.xml C:/Development/wireshark/run/$(Configuration)/wimaxasncp/dictionary.xml
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">C:/Development/wireshark/CMakeFiles/8bd51bb4c8603a18a29f1c9bd767dcc3/dictionary.xml.rule;C:\Development\wireshark\wimaxasncp\dictionary.xml;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">C:\Development\wireshark\run\$(Configuration)\wimaxasncp\dictionary.xml</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="C:\Development\wireshark\CMakeFiles\9cce62870aa5cf0001c8514212f0e365\dc.dtd.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">Generating run/$(Configuration)/dtds/dc.dtd, run/$(Configuration)/dtds/itunes.dtd, run/$(Configuration)/dtds/mscml.dtd, run/$(Configuration)/dtds/pocsettings.dtd, run/$(Configuration)/dtds/presence.dtd, run/$(Configuration)/dtds/reginfo.dtd, run/$(Configuration)/dtds/rlmi.dtd, run/$(Configuration)/dtds/rss.dtd, run/$(Configuration)/dtds/smil.dtd, run/$(Configuration)/dtds/watcherinfo.dtd, run/$(Configuration)/dtds/xcap-caps.dtd, run/$(Configuration)/dtds/xcap-error.dtd</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">setlocal
cd C:\Development\wireshark
if %errorlevel% neq 0 goto :cmEnd
C:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory C:/Development/wireshark/run/$(Configuration)/dtds
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E copy_if_different dtds/dc.dtd dtds/itunes.dtd dtds/mscml.dtd dtds/pocsettings.dtd dtds/presence.dtd dtds/reginfo.dtd dtds/rlmi.dtd dtds/rss.dtd dtds/smil.dtd dtds/watcherinfo.dtd dtds/xcap-caps.dtd dtds/xcap-error.dtd C:/Development/wireshark/run/$(Configuration)/dtds
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">C:/Development/wireshark/CMakeFiles/9cce62870aa5cf0001c8514212f0e365/dc.dtd.rule;C:\Development\wireshark\dtds\dc.dtd;C:\Development\wireshark\dtds\itunes.dtd;C:\Development\wireshark\dtds\mscml.dtd;C:\Development\wireshark\dtds\pocsettings.dtd;C:\Development\wireshark\dtds\presence.dtd;C:\Development\wireshark\dtds\reginfo.dtd;C:\Development\wireshark\dtds\rlmi.dtd;C:\Development\wireshark\dtds\rss.dtd;C:\Development\wireshark\dtds\smil.dtd;C:\Development\wireshark\dtds\watcherinfo.dtd;C:\Development\wireshark\dtds\xcap-caps.dtd;C:\Development\wireshark\dtds\xcap-error.dtd;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">C:\Development\wireshark\run\$(Configuration)\dtds\dc.dtd;C:\Development\wireshark\run\$(Configuration)\dtds\itunes.dtd;C:\Development\wireshark\run\$(Configuration)\dtds\mscml.dtd;C:\Development\wireshark\run\$(Configuration)\dtds\pocsettings.dtd;C:\Development\wireshark\run\$(Configuration)\dtds\presence.dtd;C:\Development\wireshark\run\$(Configuration)\dtds\reginfo.dtd;C:\Development\wireshark\run\$(Configuration)\dtds\rlmi.dtd;C:\Development\wireshark\run\$(Configuration)\dtds\rss.dtd;C:\Development\wireshark\run\$(Configuration)\dtds\smil.dtd;C:\Development\wireshark\run\$(Configuration)\dtds\watcherinfo.dtd;C:\Development\wireshark\run\$(Configuration)\dtds\xcap-caps.dtd;C:\Development\wireshark\run\$(Configuration)\dtds\xcap-error.dtd</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">Generating run/$(Configuration)/dtds/dc.dtd, run/$(Configuration)/dtds/itunes.dtd, run/$(Configuration)/dtds/mscml.dtd, run/$(Configuration)/dtds/pocsettings.dtd, run/$(Configuration)/dtds/presence.dtd, run/$(Configuration)/dtds/reginfo.dtd, run/$(Configuration)/dtds/rlmi.dtd, run/$(Configuration)/dtds/rss.dtd, run/$(Configuration)/dtds/smil.dtd, run/$(Configuration)/dtds/watcherinfo.dtd, run/$(Configuration)/dtds/xcap-caps.dtd, run/$(Configuration)/dtds/xcap-error.dtd</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">setlocal
cd C:\Development\wireshark
if %errorlevel% neq 0 goto :cmEnd
C:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory C:/Development/wireshark/run/$(Configuration)/dtds
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E copy_if_different dtds/dc.dtd dtds/itunes.dtd dtds/mscml.dtd dtds/pocsettings.dtd dtds/presence.dtd dtds/reginfo.dtd dtds/rlmi.dtd dtds/rss.dtd dtds/smil.dtd dtds/watcherinfo.dtd dtds/xcap-caps.dtd dtds/xcap-error.dtd C:/Development/wireshark/run/$(Configuration)/dtds
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">C:/Development/wireshark/CMakeFiles/9cce62870aa5cf0001c8514212f0e365/dc.dtd.rule;C:\Development\wireshark\dtds\dc.dtd;C:\Development\wireshark\dtds\itunes.dtd;C:\Development\wireshark\dtds\mscml.dtd;C:\Development\wireshark\dtds\pocsettings.dtd;C:\Development\wireshark\dtds\presence.dtd;C:\Development\wireshark\dtds\reginfo.dtd;C:\Development\wireshark\dtds\rlmi.dtd;C:\Development\wireshark\dtds\rss.dtd;C:\Development\wireshark\dtds\smil.dtd;C:\Development\wireshark\dtds\watcherinfo.dtd;C:\Development\wireshark\dtds\xcap-caps.dtd;C:\Development\wireshark\dtds\xcap-error.dtd;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">C:\Development\wireshark\run\$(Configuration)\dtds\dc.dtd;C:\Development\wireshark\run\$(Configuration)\dtds\itunes.dtd;C:\Development\wireshark\run\$(Configuration)\dtds\mscml.dtd;C:\Development\wireshark\run\$(Configuration)\dtds\pocsettings.dtd;C:\Development\wireshark\run\$(Configuration)\dtds\presence.dtd;C:\Development\wireshark\run\$(Configuration)\dtds\reginfo.dtd;C:\Development\wireshark\run\$(Configuration)\dtds\rlmi.dtd;C:\Development\wireshark\run\$(Configuration)\dtds\rss.dtd;C:\Development\wireshark\run\$(Configuration)\dtds\smil.dtd;C:\Development\wireshark\run\$(Configuration)\dtds\watcherinfo.dtd;C:\Development\wireshark\run\$(Configuration)\dtds\xcap-caps.dtd;C:\Development\wireshark\run\$(Configuration)\dtds\xcap-error.dtd</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">Generating run/$(Configuration)/dtds/dc.dtd, run/$(Configuration)/dtds/itunes.dtd, run/$(Configuration)/dtds/mscml.dtd, run/$(Configuration)/dtds/pocsettings.dtd, run/$(Configuration)/dtds/presence.dtd, run/$(Configuration)/dtds/reginfo.dtd, run/$(Configuration)/dtds/rlmi.dtd, run/$(Configuration)/dtds/rss.dtd, run/$(Configuration)/dtds/smil.dtd, run/$(Configuration)/dtds/watcherinfo.dtd, run/$(Configuration)/dtds/xcap-caps.dtd, run/$(Configuration)/dtds/xcap-error.dtd</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">setlocal
cd C:\Development\wireshark
if %errorlevel% neq 0 goto :cmEnd
C:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory C:/Development/wireshark/run/$(Configuration)/dtds
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E copy_if_different dtds/dc.dtd dtds/itunes.dtd dtds/mscml.dtd dtds/pocsettings.dtd dtds/presence.dtd dtds/reginfo.dtd dtds/rlmi.dtd dtds/rss.dtd dtds/smil.dtd dtds/watcherinfo.dtd dtds/xcap-caps.dtd dtds/xcap-error.dtd C:/Development/wireshark/run/$(Configuration)/dtds
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">C:/Development/wireshark/CMakeFiles/9cce62870aa5cf0001c8514212f0e365/dc.dtd.rule;C:\Development\wireshark\dtds\dc.dtd;C:\Development\wireshark\dtds\itunes.dtd;C:\Development\wireshark\dtds\mscml.dtd;C:\Development\wireshark\dtds\pocsettings.dtd;C:\Development\wireshark\dtds\presence.dtd;C:\Development\wireshark\dtds\reginfo.dtd;C:\Development\wireshark\dtds\rlmi.dtd;C:\Development\wireshark\dtds\rss.dtd;C:\Development\wireshark\dtds\smil.dtd;C:\Development\wireshark\dtds\watcherinfo.dtd;C:\Development\wireshark\dtds\xcap-caps.dtd;C:\Development\wireshark\dtds\xcap-error.dtd;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">C:\Development\wireshark\run\$(Configuration)\dtds\dc.dtd;C:\Development\wireshark\run\$(Configuration)\dtds\itunes.dtd;C:\Development\wireshark\run\$(Configuration)\dtds\mscml.dtd;C:\Development\wireshark\run\$(Configuration)\dtds\pocsettings.dtd;C:\Development\wireshark\run\$(Configuration)\dtds\presence.dtd;C:\Development\wireshark\run\$(Configuration)\dtds\reginfo.dtd;C:\Development\wireshark\run\$(Configuration)\dtds\rlmi.dtd;C:\Development\wireshark\run\$(Configuration)\dtds\rss.dtd;C:\Development\wireshark\run\$(Configuration)\dtds\smil.dtd;C:\Development\wireshark\run\$(Configuration)\dtds\watcherinfo.dtd;C:\Development\wireshark\run\$(Configuration)\dtds\xcap-caps.dtd;C:\Development\wireshark\run\$(Configuration)\dtds\xcap-error.dtd</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">Generating run/$(Configuration)/dtds/dc.dtd, run/$(Configuration)/dtds/itunes.dtd, run/$(Configuration)/dtds/mscml.dtd, run/$(Configuration)/dtds/pocsettings.dtd, run/$(Configuration)/dtds/presence.dtd, run/$(Configuration)/dtds/reginfo.dtd, run/$(Configuration)/dtds/rlmi.dtd, run/$(Configuration)/dtds/rss.dtd, run/$(Configuration)/dtds/smil.dtd, run/$(Configuration)/dtds/watcherinfo.dtd, run/$(Configuration)/dtds/xcap-caps.dtd, run/$(Configuration)/dtds/xcap-error.dtd</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">setlocal
cd C:\Development\wireshark
if %errorlevel% neq 0 goto :cmEnd
C:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory C:/Development/wireshark/run/$(Configuration)/dtds
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E copy_if_different dtds/dc.dtd dtds/itunes.dtd dtds/mscml.dtd dtds/pocsettings.dtd dtds/presence.dtd dtds/reginfo.dtd dtds/rlmi.dtd dtds/rss.dtd dtds/smil.dtd dtds/watcherinfo.dtd dtds/xcap-caps.dtd dtds/xcap-error.dtd C:/Development/wireshark/run/$(Configuration)/dtds
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">C:/Development/wireshark/CMakeFiles/9cce62870aa5cf0001c8514212f0e365/dc.dtd.rule;C:\Development\wireshark\dtds\dc.dtd;C:\Development\wireshark\dtds\itunes.dtd;C:\Development\wireshark\dtds\mscml.dtd;C:\Development\wireshark\dtds\pocsettings.dtd;C:\Development\wireshark\dtds\presence.dtd;C:\Development\wireshark\dtds\reginfo.dtd;C:\Development\wireshark\dtds\rlmi.dtd;C:\Development\wireshark\dtds\rss.dtd;C:\Development\wireshark\dtds\smil.dtd;C:\Development\wireshark\dtds\watcherinfo.dtd;C:\Development\wireshark\dtds\xcap-caps.dtd;C:\Development\wireshark\dtds\xcap-error.dtd;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">C:\Development\wireshark\run\$(Configuration)\dtds\dc.dtd;C:\Development\wireshark\run\$(Configuration)\dtds\itunes.dtd;C:\Development\wireshark\run\$(Configuration)\dtds\mscml.dtd;C:\Development\wireshark\run\$(Configuration)\dtds\pocsettings.dtd;C:\Development\wireshark\run\$(Configuration)\dtds\presence.dtd;C:\Development\wireshark\run\$(Configuration)\dtds\reginfo.dtd;C:\Development\wireshark\run\$(Configuration)\dtds\rlmi.dtd;C:\Development\wireshark\run\$(Configuration)\dtds\rss.dtd;C:\Development\wireshark\run\$(Configuration)\dtds\smil.dtd;C:\Development\wireshark\run\$(Configuration)\dtds\watcherinfo.dtd;C:\Development\wireshark\run\$(Configuration)\dtds\xcap-caps.dtd;C:\Development\wireshark\run\$(Configuration)\dtds\xcap-error.dtd</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="C:\Development\wireshark\CMakeFiles\8e520a7ed2945d2de73fa4d34e4b4593\AlcatelLucent.xml.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">Generating run/$(Configuration)/diameter/AlcatelLucent.xml, run/$(Configuration)/diameter/Cisco.xml, run/$(Configuration)/diameter/CiscoSystems.xml, run/$(Configuration)/diameter/Custom.xml, run/$(Configuration)/diameter/Ericsson.xml, run/$(Configuration)/diameter/HP.xml, run/$(Configuration)/diameter/Huawei.xml, run/$(Configuration)/diameter/Inovar.xml, run/$(Configuration)/diameter/Juniper.xml, run/$(Configuration)/diameter/Nokia.xml, run/$(Configuration)/diameter/NokiaSolutionsAndNetworks.xml, run/$(Configuration)/diameter/Oracle.xml, run/$(Configuration)/diameter/Starent.xml, run/$(Configuration)/diameter/TGPP.xml, run/$(Configuration)/diameter/TGPP2.xml, run/$(Configuration)/diameter/VerizonWireless.xml, run/$(Configuration)/diameter/Vodafone.xml, run/$(Configuration)/diameter/chargecontrol.xml, run/$(Configuration)/diameter/dictionary.dtd, run/$(Configuration)/diameter/dictionary.xml, run/$(Configuration)/diameter/eap.xml, run/$(Configuration)/diameter/etsie2e4.xml, run/$(Configuration)/diameter/mobileipv4.xml, run/$(Configuration)/diameter/mobileipv6.xml, run/$(Configuration)/diameter/nasreq.xml, run/$(Configuration)/diameter/sip.xml, run/$(Configuration)/diameter/sunping.xml</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">setlocal
cd C:\Development\wireshark
if %errorlevel% neq 0 goto :cmEnd
C:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory C:/Development/wireshark/run/$(Configuration)/diameter
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E copy_if_different diameter/AlcatelLucent.xml diameter/Cisco.xml diameter/CiscoSystems.xml diameter/Custom.xml diameter/Ericsson.xml diameter/HP.xml diameter/Huawei.xml diameter/Inovar.xml diameter/Juniper.xml diameter/Nokia.xml diameter/NokiaSolutionsAndNetworks.xml diameter/Oracle.xml diameter/Starent.xml diameter/TGPP.xml diameter/TGPP2.xml diameter/VerizonWireless.xml diameter/Vodafone.xml diameter/chargecontrol.xml diameter/dictionary.dtd diameter/dictionary.xml diameter/eap.xml diameter/etsie2e4.xml diameter/mobileipv4.xml diameter/mobileipv6.xml diameter/nasreq.xml diameter/sip.xml diameter/sunping.xml C:/Development/wireshark/run/$(Configuration)/diameter
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">C:/Development/wireshark/CMakeFiles/8e520a7ed2945d2de73fa4d34e4b4593/AlcatelLucent.xml.rule;C:\Development\wireshark\diameter\AlcatelLucent.xml;C:\Development\wireshark\diameter\Cisco.xml;C:\Development\wireshark\diameter\CiscoSystems.xml;C:\Development\wireshark\diameter\Custom.xml;C:\Development\wireshark\diameter\Ericsson.xml;C:\Development\wireshark\diameter\HP.xml;C:\Development\wireshark\diameter\Huawei.xml;C:\Development\wireshark\diameter\Inovar.xml;C:\Development\wireshark\diameter\Juniper.xml;C:\Development\wireshark\diameter\Nokia.xml;C:\Development\wireshark\diameter\NokiaSolutionsAndNetworks.xml;C:\Development\wireshark\diameter\Oracle.xml;C:\Development\wireshark\diameter\Starent.xml;C:\Development\wireshark\diameter\TGPP.xml;C:\Development\wireshark\diameter\TGPP2.xml;C:\Development\wireshark\diameter\VerizonWireless.xml;C:\Development\wireshark\diameter\Vodafone.xml;C:\Development\wireshark\diameter\chargecontrol.xml;C:\Development\wireshark\diameter\dictionary.dtd;C:\Development\wireshark\diameter\dictionary.xml;C:\Development\wireshark\diameter\eap.xml;C:\Development\wireshark\diameter\etsie2e4.xml;C:\Development\wireshark\diameter\mobileipv4.xml;C:\Development\wireshark\diameter\mobileipv6.xml;C:\Development\wireshark\diameter\nasreq.xml;C:\Development\wireshark\diameter\sip.xml;C:\Development\wireshark\diameter\sunping.xml;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">C:\Development\wireshark\run\$(Configuration)\diameter\AlcatelLucent.xml;C:\Development\wireshark\run\$(Configuration)\diameter\Cisco.xml;C:\Development\wireshark\run\$(Configuration)\diameter\CiscoSystems.xml;C:\Development\wireshark\run\$(Configuration)\diameter\Custom.xml;C:\Development\wireshark\run\$(Configuration)\diameter\Ericsson.xml;C:\Development\wireshark\run\$(Configuration)\diameter\HP.xml;C:\Development\wireshark\run\$(Configuration)\diameter\Huawei.xml;C:\Development\wireshark\run\$(Configuration)\diameter\Inovar.xml;C:\Development\wireshark\run\$(Configuration)\diameter\Juniper.xml;C:\Development\wireshark\run\$(Configuration)\diameter\Nokia.xml;C:\Development\wireshark\run\$(Configuration)\diameter\NokiaSolutionsAndNetworks.xml;C:\Development\wireshark\run\$(Configuration)\diameter\Oracle.xml;C:\Development\wireshark\run\$(Configuration)\diameter\Starent.xml;C:\Development\wireshark\run\$(Configuration)\diameter\TGPP.xml;C:\Development\wireshark\run\$(Configuration)\diameter\TGPP2.xml;C:\Development\wireshark\run\$(Configuration)\diameter\VerizonWireless.xml;C:\Development\wireshark\run\$(Configuration)\diameter\Vodafone.xml;C:\Development\wireshark\run\$(Configuration)\diameter\chargecontrol.xml;C:\Development\wireshark\run\$(Configuration)\diameter\dictionary.dtd;C:\Development\wireshark\run\$(Configuration)\diameter\dictionary.xml;C:\Development\wireshark\run\$(Configuration)\diameter\eap.xml;C:\Development\wireshark\run\$(Configuration)\diameter\etsie2e4.xml;C:\Development\wireshark\run\$(Configuration)\diameter\mobileipv4.xml;C:\Development\wireshark\run\$(Configuration)\diameter\mobileipv6.xml;C:\Development\wireshark\run\$(Configuration)\diameter\nasreq.xml;C:\Development\wireshark\run\$(Configuration)\diameter\sip.xml;C:\Development\wireshark\run\$(Configuration)\diameter\sunping.xml</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">Generating run/$(Configuration)/diameter/AlcatelLucent.xml, run/$(Configuration)/diameter/Cisco.xml, run/$(Configuration)/diameter/CiscoSystems.xml, run/$(Configuration)/diameter/Custom.xml, run/$(Configuration)/diameter/Ericsson.xml, run/$(Configuration)/diameter/HP.xml, run/$(Configuration)/diameter/Huawei.xml, run/$(Configuration)/diameter/Inovar.xml, run/$(Configuration)/diameter/Juniper.xml, run/$(Configuration)/diameter/Nokia.xml, run/$(Configuration)/diameter/NokiaSolutionsAndNetworks.xml, run/$(Configuration)/diameter/Oracle.xml, run/$(Configuration)/diameter/Starent.xml, run/$(Configuration)/diameter/TGPP.xml, run/$(Configuration)/diameter/TGPP2.xml, run/$(Configuration)/diameter/VerizonWireless.xml, run/$(Configuration)/diameter/Vodafone.xml, run/$(Configuration)/diameter/chargecontrol.xml, run/$(Configuration)/diameter/dictionary.dtd, run/$(Configuration)/diameter/dictionary.xml, run/$(Configuration)/diameter/eap.xml, run/$(Configuration)/diameter/etsie2e4.xml, run/$(Configuration)/diameter/mobileipv4.xml, run/$(Configuration)/diameter/mobileipv6.xml, run/$(Configuration)/diameter/nasreq.xml, run/$(Configuration)/diameter/sip.xml, run/$(Configuration)/diameter/sunping.xml</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">setlocal
cd C:\Development\wireshark
if %errorlevel% neq 0 goto :cmEnd
C:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory C:/Development/wireshark/run/$(Configuration)/diameter
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E copy_if_different diameter/AlcatelLucent.xml diameter/Cisco.xml diameter/CiscoSystems.xml diameter/Custom.xml diameter/Ericsson.xml diameter/HP.xml diameter/Huawei.xml diameter/Inovar.xml diameter/Juniper.xml diameter/Nokia.xml diameter/NokiaSolutionsAndNetworks.xml diameter/Oracle.xml diameter/Starent.xml diameter/TGPP.xml diameter/TGPP2.xml diameter/VerizonWireless.xml diameter/Vodafone.xml diameter/chargecontrol.xml diameter/dictionary.dtd diameter/dictionary.xml diameter/eap.xml diameter/etsie2e4.xml diameter/mobileipv4.xml diameter/mobileipv6.xml diameter/nasreq.xml diameter/sip.xml diameter/sunping.xml C:/Development/wireshark/run/$(Configuration)/diameter
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">C:/Development/wireshark/CMakeFiles/8e520a7ed2945d2de73fa4d34e4b4593/AlcatelLucent.xml.rule;C:\Development\wireshark\diameter\AlcatelLucent.xml;C:\Development\wireshark\diameter\Cisco.xml;C:\Development\wireshark\diameter\CiscoSystems.xml;C:\Development\wireshark\diameter\Custom.xml;C:\Development\wireshark\diameter\Ericsson.xml;C:\Development\wireshark\diameter\HP.xml;C:\Development\wireshark\diameter\Huawei.xml;C:\Development\wireshark\diameter\Inovar.xml;C:\Development\wireshark\diameter\Juniper.xml;C:\Development\wireshark\diameter\Nokia.xml;C:\Development\wireshark\diameter\NokiaSolutionsAndNetworks.xml;C:\Development\wireshark\diameter\Oracle.xml;C:\Development\wireshark\diameter\Starent.xml;C:\Development\wireshark\diameter\TGPP.xml;C:\Development\wireshark\diameter\TGPP2.xml;C:\Development\wireshark\diameter\VerizonWireless.xml;C:\Development\wireshark\diameter\Vodafone.xml;C:\Development\wireshark\diameter\chargecontrol.xml;C:\Development\wireshark\diameter\dictionary.dtd;C:\Development\wireshark\diameter\dictionary.xml;C:\Development\wireshark\diameter\eap.xml;C:\Development\wireshark\diameter\etsie2e4.xml;C:\Development\wireshark\diameter\mobileipv4.xml;C:\Development\wireshark\diameter\mobileipv6.xml;C:\Development\wireshark\diameter\nasreq.xml;C:\Development\wireshark\diameter\sip.xml;C:\Development\wireshark\diameter\sunping.xml;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">C:\Development\wireshark\run\$(Configuration)\diameter\AlcatelLucent.xml;C:\Development\wireshark\run\$(Configuration)\diameter\Cisco.xml;C:\Development\wireshark\run\$(Configuration)\diameter\CiscoSystems.xml;C:\Development\wireshark\run\$(Configuration)\diameter\Custom.xml;C:\Development\wireshark\run\$(Configuration)\diameter\Ericsson.xml;C:\Development\wireshark\run\$(Configuration)\diameter\HP.xml;C:\Development\wireshark\run\$(Configuration)\diameter\Huawei.xml;C:\Development\wireshark\run\$(Configuration)\diameter\Inovar.xml;C:\Development\wireshark\run\$(Configuration)\diameter\Juniper.xml;C:\Development\wireshark\run\$(Configuration)\diameter\Nokia.xml;C:\Development\wireshark\run\$(Configuration)\diameter\NokiaSolutionsAndNetworks.xml;C:\Development\wireshark\run\$(Configuration)\diameter\Oracle.xml;C:\Development\wireshark\run\$(Configuration)\diameter\Starent.xml;C:\Development\wireshark\run\$(Configuration)\diameter\TGPP.xml;C:\Development\wireshark\run\$(Configuration)\diameter\TGPP2.xml;C:\Development\wireshark\run\$(Configuration)\diameter\VerizonWireless.xml;C:\Development\wireshark\run\$(Configuration)\diameter\Vodafone.xml;C:\Development\wireshark\run\$(Configuration)\diameter\chargecontrol.xml;C:\Development\wireshark\run\$(Configuration)\diameter\dictionary.dtd;C:\Development\wireshark\run\$(Configuration)\diameter\dictionary.xml;C:\Development\wireshark\run\$(Configuration)\diameter\eap.xml;C:\Development\wireshark\run\$(Configuration)\diameter\etsie2e4.xml;C:\Development\wireshark\run\$(Configuration)\diameter\mobileipv4.xml;C:\Development\wireshark\run\$(Configuration)\diameter\mobileipv6.xml;C:\Development\wireshark\run\$(Configuration)\diameter\nasreq.xml;C:\Development\wireshark\run\$(Configuration)\diameter\sip.xml;C:\Development\wireshark\run\$(Configuration)\diameter\sunping.xml</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">Generating run/$(Configuration)/diameter/AlcatelLucent.xml, run/$(Configuration)/diameter/Cisco.xml, run/$(Configuration)/diameter/CiscoSystems.xml, run/$(Configuration)/diameter/Custom.xml, run/$(Configuration)/diameter/Ericsson.xml, run/$(Configuration)/diameter/HP.xml, run/$(Configuration)/diameter/Huawei.xml, run/$(Configuration)/diameter/Inovar.xml, run/$(Configuration)/diameter/Juniper.xml, run/$(Configuration)/diameter/Nokia.xml, run/$(Configuration)/diameter/NokiaSolutionsAndNetworks.xml, run/$(Configuration)/diameter/Oracle.xml, run/$(Configuration)/diameter/Starent.xml, run/$(Configuration)/diameter/TGPP.xml, run/$(Configuration)/diameter/TGPP2.xml, run/$(Configuration)/diameter/VerizonWireless.xml, run/$(Configuration)/diameter/Vodafone.xml, run/$(Configuration)/diameter/chargecontrol.xml, run/$(Configuration)/diameter/dictionary.dtd, run/$(Configuration)/diameter/dictionary.xml, run/$(Configuration)/diameter/eap.xml, run/$(Configuration)/diameter/etsie2e4.xml, run/$(Configuration)/diameter/mobileipv4.xml, run/$(Configuration)/diameter/mobileipv6.xml, run/$(Configuration)/diameter/nasreq.xml, run/$(Configuration)/diameter/sip.xml, run/$(Configuration)/diameter/sunping.xml</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">setlocal
cd C:\Development\wireshark
if %errorlevel% neq 0 goto :cmEnd
C:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory C:/Development/wireshark/run/$(Configuration)/diameter
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E copy_if_different diameter/AlcatelLucent.xml diameter/Cisco.xml diameter/CiscoSystems.xml diameter/Custom.xml diameter/Ericsson.xml diameter/HP.xml diameter/Huawei.xml diameter/Inovar.xml diameter/Juniper.xml diameter/Nokia.xml diameter/NokiaSolutionsAndNetworks.xml diameter/Oracle.xml diameter/Starent.xml diameter/TGPP.xml diameter/TGPP2.xml diameter/VerizonWireless.xml diameter/Vodafone.xml diameter/chargecontrol.xml diameter/dictionary.dtd diameter/dictionary.xml diameter/eap.xml diameter/etsie2e4.xml diameter/mobileipv4.xml diameter/mobileipv6.xml diameter/nasreq.xml diameter/sip.xml diameter/sunping.xml C:/Development/wireshark/run/$(Configuration)/diameter
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">C:/Development/wireshark/CMakeFiles/8e520a7ed2945d2de73fa4d34e4b4593/AlcatelLucent.xml.rule;C:\Development\wireshark\diameter\AlcatelLucent.xml;C:\Development\wireshark\diameter\Cisco.xml;C:\Development\wireshark\diameter\CiscoSystems.xml;C:\Development\wireshark\diameter\Custom.xml;C:\Development\wireshark\diameter\Ericsson.xml;C:\Development\wireshark\diameter\HP.xml;C:\Development\wireshark\diameter\Huawei.xml;C:\Development\wireshark\diameter\Inovar.xml;C:\Development\wireshark\diameter\Juniper.xml;C:\Development\wireshark\diameter\Nokia.xml;C:\Development\wireshark\diameter\NokiaSolutionsAndNetworks.xml;C:\Development\wireshark\diameter\Oracle.xml;C:\Development\wireshark\diameter\Starent.xml;C:\Development\wireshark\diameter\TGPP.xml;C:\Development\wireshark\diameter\TGPP2.xml;C:\Development\wireshark\diameter\VerizonWireless.xml;C:\Development\wireshark\diameter\Vodafone.xml;C:\Development\wireshark\diameter\chargecontrol.xml;C:\Development\wireshark\diameter\dictionary.dtd;C:\Development\wireshark\diameter\dictionary.xml;C:\Development\wireshark\diameter\eap.xml;C:\Development\wireshark\diameter\etsie2e4.xml;C:\Development\wireshark\diameter\mobileipv4.xml;C:\Development\wireshark\diameter\mobileipv6.xml;C:\Development\wireshark\diameter\nasreq.xml;C:\Development\wireshark\diameter\sip.xml;C:\Development\wireshark\diameter\sunping.xml;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">C:\Development\wireshark\run\$(Configuration)\diameter\AlcatelLucent.xml;C:\Development\wireshark\run\$(Configuration)\diameter\Cisco.xml;C:\Development\wireshark\run\$(Configuration)\diameter\CiscoSystems.xml;C:\Development\wireshark\run\$(Configuration)\diameter\Custom.xml;C:\Development\wireshark\run\$(Configuration)\diameter\Ericsson.xml;C:\Development\wireshark\run\$(Configuration)\diameter\HP.xml;C:\Development\wireshark\run\$(Configuration)\diameter\Huawei.xml;C:\Development\wireshark\run\$(Configuration)\diameter\Inovar.xml;C:\Development\wireshark\run\$(Configuration)\diameter\Juniper.xml;C:\Development\wireshark\run\$(Configuration)\diameter\Nokia.xml;C:\Development\wireshark\run\$(Configuration)\diameter\NokiaSolutionsAndNetworks.xml;C:\Development\wireshark\run\$(Configuration)\diameter\Oracle.xml;C:\Development\wireshark\run\$(Configuration)\diameter\Starent.xml;C:\Development\wireshark\run\$(Configuration)\diameter\TGPP.xml;C:\Development\wireshark\run\$(Configuration)\diameter\TGPP2.xml;C:\Development\wireshark\run\$(Configuration)\diameter\VerizonWireless.xml;C:\Development\wireshark\run\$(Configuration)\diameter\Vodafone.xml;C:\Development\wireshark\run\$(Configuration)\diameter\chargecontrol.xml;C:\Development\wireshark\run\$(Configuration)\diameter\dictionary.dtd;C:\Development\wireshark\run\$(Configuration)\diameter\dictionary.xml;C:\Development\wireshark\run\$(Configuration)\diameter\eap.xml;C:\Development\wireshark\run\$(Configuration)\diameter\etsie2e4.xml;C:\Development\wireshark\run\$(Configuration)\diameter\mobileipv4.xml;C:\Development\wireshark\run\$(Configuration)\diameter\mobileipv6.xml;C:\Development\wireshark\run\$(Configuration)\diameter\nasreq.xml;C:\Development\wireshark\run\$(Configuration)\diameter\sip.xml;C:\Development\wireshark\run\$(Configuration)\diameter\sunping.xml</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">Generating run/$(Configuration)/diameter/AlcatelLucent.xml, run/$(Configuration)/diameter/Cisco.xml, run/$(Configuration)/diameter/CiscoSystems.xml, run/$(Configuration)/diameter/Custom.xml, run/$(Configuration)/diameter/Ericsson.xml, run/$(Configuration)/diameter/HP.xml, run/$(Configuration)/diameter/Huawei.xml, run/$(Configuration)/diameter/Inovar.xml, run/$(Configuration)/diameter/Juniper.xml, run/$(Configuration)/diameter/Nokia.xml, run/$(Configuration)/diameter/NokiaSolutionsAndNetworks.xml, run/$(Configuration)/diameter/Oracle.xml, run/$(Configuration)/diameter/Starent.xml, run/$(Configuration)/diameter/TGPP.xml, run/$(Configuration)/diameter/TGPP2.xml, run/$(Configuration)/diameter/VerizonWireless.xml, run/$(Configuration)/diameter/Vodafone.xml, run/$(Configuration)/diameter/chargecontrol.xml, run/$(Configuration)/diameter/dictionary.dtd, run/$(Configuration)/diameter/dictionary.xml, run/$(Configuration)/diameter/eap.xml, run/$(Configuration)/diameter/etsie2e4.xml, run/$(Configuration)/diameter/mobileipv4.xml, run/$(Configuration)/diameter/mobileipv6.xml, run/$(Configuration)/diameter/nasreq.xml, run/$(Configuration)/diameter/sip.xml, run/$(Configuration)/diameter/sunping.xml</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">setlocal
cd C:\Development\wireshark
if %errorlevel% neq 0 goto :cmEnd
C:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory C:/Development/wireshark/run/$(Configuration)/diameter
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E copy_if_different diameter/AlcatelLucent.xml diameter/Cisco.xml diameter/CiscoSystems.xml diameter/Custom.xml diameter/Ericsson.xml diameter/HP.xml diameter/Huawei.xml diameter/Inovar.xml diameter/Juniper.xml diameter/Nokia.xml diameter/NokiaSolutionsAndNetworks.xml diameter/Oracle.xml diameter/Starent.xml diameter/TGPP.xml diameter/TGPP2.xml diameter/VerizonWireless.xml diameter/Vodafone.xml diameter/chargecontrol.xml diameter/dictionary.dtd diameter/dictionary.xml diameter/eap.xml diameter/etsie2e4.xml diameter/mobileipv4.xml diameter/mobileipv6.xml diameter/nasreq.xml diameter/sip.xml diameter/sunping.xml C:/Development/wireshark/run/$(Configuration)/diameter
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">C:/Development/wireshark/CMakeFiles/8e520a7ed2945d2de73fa4d34e4b4593/AlcatelLucent.xml.rule;C:\Development\wireshark\diameter\AlcatelLucent.xml;C:\Development\wireshark\diameter\Cisco.xml;C:\Development\wireshark\diameter\CiscoSystems.xml;C:\Development\wireshark\diameter\Custom.xml;C:\Development\wireshark\diameter\Ericsson.xml;C:\Development\wireshark\diameter\HP.xml;C:\Development\wireshark\diameter\Huawei.xml;C:\Development\wireshark\diameter\Inovar.xml;C:\Development\wireshark\diameter\Juniper.xml;C:\Development\wireshark\diameter\Nokia.xml;C:\Development\wireshark\diameter\NokiaSolutionsAndNetworks.xml;C:\Development\wireshark\diameter\Oracle.xml;C:\Development\wireshark\diameter\Starent.xml;C:\Development\wireshark\diameter\TGPP.xml;C:\Development\wireshark\diameter\TGPP2.xml;C:\Development\wireshark\diameter\VerizonWireless.xml;C:\Development\wireshark\diameter\Vodafone.xml;C:\Development\wireshark\diameter\chargecontrol.xml;C:\Development\wireshark\diameter\dictionary.dtd;C:\Development\wireshark\diameter\dictionary.xml;C:\Development\wireshark\diameter\eap.xml;C:\Development\wireshark\diameter\etsie2e4.xml;C:\Development\wireshark\diameter\mobileipv4.xml;C:\Development\wireshark\diameter\mobileipv6.xml;C:\Development\wireshark\diameter\nasreq.xml;C:\Development\wireshark\diameter\sip.xml;C:\Development\wireshark\diameter\sunping.xml;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">C:\Development\wireshark\run\$(Configuration)\diameter\AlcatelLucent.xml;C:\Development\wireshark\run\$(Configuration)\diameter\Cisco.xml;C:\Development\wireshark\run\$(Configuration)\diameter\CiscoSystems.xml;C:\Development\wireshark\run\$(Configuration)\diameter\Custom.xml;C:\Development\wireshark\run\$(Configuration)\diameter\Ericsson.xml;C:\Development\wireshark\run\$(Configuration)\diameter\HP.xml;C:\Development\wireshark\run\$(Configuration)\diameter\Huawei.xml;C:\Development\wireshark\run\$(Configuration)\diameter\Inovar.xml;C:\Development\wireshark\run\$(Configuration)\diameter\Juniper.xml;C:\Development\wireshark\run\$(Configuration)\diameter\Nokia.xml;C:\Development\wireshark\run\$(Configuration)\diameter\NokiaSolutionsAndNetworks.xml;C:\Development\wireshark\run\$(Configuration)\diameter\Oracle.xml;C:\Development\wireshark\run\$(Configuration)\diameter\Starent.xml;C:\Development\wireshark\run\$(Configuration)\diameter\TGPP.xml;C:\Development\wireshark\run\$(Configuration)\diameter\TGPP2.xml;C:\Development\wireshark\run\$(Configuration)\diameter\VerizonWireless.xml;C:\Development\wireshark\run\$(Configuration)\diameter\Vodafone.xml;C:\Development\wireshark\run\$(Configuration)\diameter\chargecontrol.xml;C:\Development\wireshark\run\$(Configuration)\diameter\dictionary.dtd;C:\Development\wireshark\run\$(Configuration)\diameter\dictionary.xml;C:\Development\wireshark\run\$(Configuration)\diameter\eap.xml;C:\Development\wireshark\run\$(Configuration)\diameter\etsie2e4.xml;C:\Development\wireshark\run\$(Configuration)\diameter\mobileipv4.xml;C:\Development\wireshark\run\$(Configuration)\diameter\mobileipv6.xml;C:\Development\wireshark\run\$(Configuration)\diameter\nasreq.xml;C:\Development\wireshark\run\$(Configuration)\diameter\sip.xml;C:\Development\wireshark\run\$(Configuration)\diameter\sunping.xml</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="C:\Development\wireshark\CMakeFiles\8944e641a9b55c429b37c9939e31cf62\README.radius_dictionary.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">Generating run/$(Configuration)/radius/README.radius_dictionary, run/$(Configuration)/radius/custom.includes, run/$(Configuration)/radius/dictionary, run/$(Configuration)/radius/dictionary.3com, run/$(Configuration)/radius/dictionary.3gpp, run/$(Configuration)/radius/dictionary.3gpp2, run/$(Configuration)/radius/dictionary.acc, run/$(Configuration)/radius/dictionary.acme, run/$(Configuration)/radius/dictionary.actelis, run/$(Configuration)/radius/dictionary.aerohive, run/$(Configuration)/radius/dictionary.airespace, run/$(Configuration)/radius/dictionary.alcatel, run/$(Configuration)/radius/dictionary.alcatel-lucent.aaa, run/$(Configuration)/radius/dictionary.alcatel.esam, run/$(Configuration)/radius/dictionary.alcatel.sr, run/$(Configuration)/radius/dictionary.alteon, run/$(Configuration)/radius/dictionary.altiga, run/$(Configuration)/radius/dictionary.alvarion, run/$(Configuration)/radius/dictionary.alvarion.wimax.v2_2, run/$(Configuration)/radius/dictionary.apc, run/$(Configuration)/radius/dictionary.aptis, run/$(Configuration)/radius/dictionary.arbor, run/$(Configuration)/radius/dictionary.aruba, run/$(Configuration)/radius/dictionary.ascend, run/$(Configuration)/radius/dictionary.asn, run/$(Configuration)/radius/dictionary.audiocodes, run/$(Configuration)/radius/dictionary.avaya, run/$(Configuration)/radius/dictionary.azaire, run/$(Configuration)/radius/dictionary.bay, run/$(Configuration)/radius/dictionary.bintec, run/$(Configuration)/radius/dictionary.bluecoat, run/$(Configuration)/radius/dictionary.bristol, run/$(Configuration)/radius/dictionary.broadsoft, run/$(Configuration)/radius/dictionary.brocade, run/$(Configuration)/radius/dictionary.bskyb, run/$(Configuration)/radius/dictionary.bt, run/$(Configuration)/radius/dictionary.cablelabs, run/$(Configuration)/radius/dictionary.cabletron, run/$(Configuration)/radius/dictionary.camiant, run/$(Configuration)/radius/dictionary.chillispot, run/$(Configuration)/radius/dictionary.cisco, run/$(Configuration)/radius/dictionary.cisco.asa, run/$(Configuration)/radius/dictionary.cisco.bbsm, run/$(Configuration)/radius/dictionary.cisco.vpn3000, run/$(Configuration)/radius/dictionary.cisco.vpn5000, run/$(Configuration)/radius/dictionary.citrix, run/$(Configuration)/radius/dictionary.clavister, run/$(Configuration)/radius/dictionary.cnergee, run/$(Configuration)/radius/dictionary.colubris, run/$(Configuration)/radius/dictionary.columbia_university, run/$(Configuration)/radius/dictionary.compat, run/$(Configuration)/radius/dictionary.compatible, run/$(Configuration)/radius/dictionary.cosine, run/$(Configuration)/radius/dictionary.dante, run/$(Configuration)/radius/dictionary.dellemc, run/$(Configuration)/radius/dictionary.dhcp, run/$(Configuration)/radius/dictionary.digium, run/$(Configuration)/radius/dictionary.dlink, run/$(Configuration)/radius/dictionary.dragonwave, run/$(Configuration)/radius/dictionary.efficientip, run/$(Configuration)/radius/dictionary.eltex, run/$(Configuration)/radius/dictionary.epygi, run/$(Configuration)/radius/dictionary.equallogic, run/$(Configuration)/radius/dictionary.ericsson, run/$(Configuration)/radius/dictionary.ericsson.ab, run/$(Configuration)/radius/dictionary.ericsson.packet.core.networks, run/$(Configuration)/radius/dictionary.extreme, run/$(Configuration)/radius/dictionary.f5, run/$(Configuration)/radius/dictionary.fdxtended, run/$(Configuration)/radius/dictionary.fortinet, run/$(Configuration)/radius/dictionary.foundry, run/$(Configuration)/radius/dictionary.freedhcp, run/$(Configuration)/radius/dictionary.freeradius, run/$(Configuration)/radius/dictionary.freeradius.internal, run/$(Configuration)/radius/dictionary.freeswitch, run/$(Configuration)/radius/dictionary.gandalf, run/$(Configuration)/radius/dictionary.garderos, run/$(Configuration)/radius/dictionary.gemtek, run/$(Configuration)/radius/dictionary.h3c, run/$(Configuration)/radius/dictionary.hp, run/$(Configuration)/radius/dictionary.huawei, run/$(Configuration)/radius/dictionary.iana, run/$(Configuration)/radius/dictionary.iea, run/$(Configuration)/radius/dictionary.infoblox, run/$(Configuration)/radius/dictionary.infonet, run/$(Configuration)/radius/dictionary.ipunplugged, run/$(Configuration)/radius/dictionary.issanni, run/$(Configuration)/radius/dictionary.itk, run/$(Configuration)/radius/dictionary.jradius, run/$(Configuration)/radius/dictionary.juniper, run/$(Configuration)/radius/dictionary.karlnet, run/$(Configuration)/radius/dictionary.kineto, run/$(Configuration)/radius/dictionary.lancom, run/$(Configuration)/radius/dictionary.livingston, run/$(Configuration)/radius/dictionary.localweb, run/$(Configuration)/radius/dictionary.lucent, run/$(Configuration)/radius/dictionary.manzara, run/$(Configuration)/radius/dictionary.meinberg, run/$(Configuration)/radius/dictionary.merit, run/$(Configuration)/radius/dictionary.meru, run/$(Configuration)/radius/dictionary.microsemi, run/$(Configuration)/radius/dictionary.microsoft, run/$(Configuration)/radius/dictionary.mikrotik, run/$(Configuration)/radius/dictionary.motorola, run/$(Configuration)/radius/dictionary.motorola.wimax, run/$(Configuration)/radius/dictionary.navini, run/$(Configuration)/radius/dictionary.netscreen, run/$(Configuration)/radius/dictionary.networkphysics, run/$(Configuration)/radius/dictionary.nexans, run/$(Configuration)/radius/dictionary.nokia, run/$(Configuration)/radius/dictionary.nokia.conflict, run/$(Configuration)/radius/dictionary.nomadix, run/$(Configuration)/radius/dictionary.nortel, run/$(Configuration)/radius/dictionary.ntua, run/$(Configuration)/radius/dictionary.openser, run/$(Configuration)/radius/dictionary.packeteer, run/$(Configuration)/radius/dictionary.paloalto, run/$(Configuration)/radius/dictionary.patton, run/$(Configuration)/radius/dictionary.perle, run/$(Configuration)/radius/dictionary.propel, run/$(Configuration)/radius/dictionary.prosoft, run/$(Configuration)/radius/dictionary.proxim, run/$(Configuration)/radius/dictionary.purewave, run/$(Configuration)/radius/dictionary.quiconnect, run/$(Configuration)/radius/dictionary.quintum, run/$(Configuration)/radius/dictionary.redcreek, run/$(Configuration)/radius/dictionary.rfc2865, run/$(Configuration)/radius/dictionary.rfc2866, run/$(Configuration)/radius/dictionary.rfc2867, run/$(Configuration)/radius/dictionary.rfc2868, run/$(Configuration)/radius/dictionary.rfc2869, run/$(Configuration)/radius/dictionary.rfc3162, run/$(Configuration)/radius/dictionary.rfc3576, run/$(Configuration)/radius/dictionary.rfc3580, run/$(Configuration)/radius/dictionary.rfc4072, run/$(Configuration)/radius/dictionary.rfc4372, run/$(Configuration)/radius/dictionary.rfc4603, run/$(Configuration)/radius/dictionary.rfc4675, run/$(Configuration)/radius/dictionary.rfc4679, run/$(Configuration)/radius/dictionary.rfc4818, run/$(Configuration)/radius/dictionary.rfc4849, run/$(Configuration)/radius/dictionary.rfc5090, run/$(Configuration)/radius/dictionary.rfc5176, run/$(Configuration)/radius/dictionary.rfc5447, run/$(Configuration)/radius/dictionary.rfc5580, run/$(Configuration)/radius/dictionary.rfc5607, run/$(Configuration)/radius/dictionary.rfc5904, run/$(Configuration)/radius/dictionary.rfc6519, run/$(Configuration)/radius/dictionary.rfc6572, run/$(Configuration)/radius/dictionary.rfc6677, run/$(Configuration)/radius/dictionary.rfc6911, run/$(Configuration)/radius/dictionary.rfc6929, run/$(Configuration)/radius/dictionary.rfc6930, run/$(Configuration)/radius/dictionary.rfc7055, run/$(Configuration)/radius/dictionary.rfc7155, run/$(Configuration)/radius/dictionary.rfc7268, run/$(Configuration)/radius/dictionary.rfc7499, run/$(Configuration)/radius/dictionary.rfc7930, run/$(Configuration)/radius/dictionary.riverbed, run/$(Configuration)/radius/dictionary.riverstone, run/$(Configuration)/radius/dictionary.roaringpenguin, run/$(Configuration)/radius/dictionary.ruckus, run/$(Configuration)/radius/dictionary.ruggedcom, run/$(Configuration)/radius/dictionary.sangoma, run/$(Configuration)/radius/dictionary.sg, run/$(Configuration)/radius/dictionary.shasta, run/$(Configuration)/radius/dictionary.shiva, run/$(Configuration)/radius/dictionary.siemens, run/$(Configuration)/radius/dictionary.slipstream, run/$(Configuration)/radius/dictionary.sofaware, run/$(Configuration)/radius/dictionary.sonicwall, run/$(Configuration)/radius/dictionary.springtide, run/$(Configuration)/radius/dictionary.starent, run/$(Configuration)/radius/dictionary.starent.vsa1, run/$(Configuration)/radius/dictionary.surfnet, run/$(Configuration)/radius/dictionary.symbol, run/$(Configuration)/radius/dictionary.t_systems_nova, run/$(Configuration)/radius/dictionary.telebit, run/$(Configuration)/radius/dictionary.telkom, run/$(Configuration)/radius/dictionary.terena, run/$(Configuration)/radius/dictionary.trapeze, run/$(Configuration)/radius/dictionary.travelping, run/$(Configuration)/radius/dictionary.tropos, run/$(Configuration)/radius/dictionary.ukerna, run/$(Configuration)/radius/dictionary.unisphere, run/$(Configuration)/radius/dictionary.unix, run/$(Configuration)/radius/dictionary.usr, run/$(Configuration)/radius/dictionary.utstarcom, run/$(Configuration)/radius/dictionary.valemount, run/$(Configuration)/radius/dictionary.verizon, run/$(Configuration)/radius/dictionary.versanet, run/$(Configuration)/radius/dictionary.vqp, run/$(Configuration)/radius/dictionary.walabi, run/$(Configuration)/radius/dictionary.waverider, run/$(Configuration)/radius/dictionary.wichorus, run/$(Configuration)/radius/dictionary.wimax, run/$(Configuration)/radius/dictionary.wimax.alvarion, run/$(Configuration)/radius/dictionary.wimax.wichorus, run/$(Configuration)/radius/dictionary.wispr, run/$(Configuration)/radius/dictionary.xedia, run/$(Configuration)/radius/dictionary.xylan, run/$(Configuration)/radius/dictionary.yubico, run/$(Configuration)/radius/dictionary.zeus, run/$(Configuration)/radius/dictionary.zte, run/$(Configuration)/radius/dictionary.zyxel</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">setlocal
cd C:\Development\wireshark
if %errorlevel% neq 0 goto :cmEnd
C:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory C:/Development/wireshark/run/$(Configuration)/radius
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E copy_if_different radius/README.radius_dictionary radius/custom.includes radius/dictionary radius/dictionary.3com radius/dictionary.3gpp radius/dictionary.3gpp2 radius/dictionary.acc radius/dictionary.acme radius/dictionary.actelis radius/dictionary.aerohive radius/dictionary.airespace radius/dictionary.alcatel radius/dictionary.alcatel-lucent.aaa radius/dictionary.alcatel.esam radius/dictionary.alcatel.sr radius/dictionary.alteon radius/dictionary.altiga radius/dictionary.alvarion radius/dictionary.alvarion.wimax.v2_2 radius/dictionary.apc radius/dictionary.aptis radius/dictionary.arbor radius/dictionary.aruba radius/dictionary.ascend radius/dictionary.asn radius/dictionary.audiocodes radius/dictionary.avaya radius/dictionary.azaire radius/dictionary.bay radius/dictionary.bintec radius/dictionary.bluecoat radius/dictionary.bristol radius/dictionary.broadsoft radius/dictionary.brocade radius/dictionary.bskyb radius/dictionary.bt radius/dictionary.cablelabs radius/dictionary.cabletron radius/dictionary.camiant radius/dictionary.chillispot radius/dictionary.cisco radius/dictionary.cisco.asa radius/dictionary.cisco.bbsm radius/dictionary.cisco.vpn3000 radius/dictionary.cisco.vpn5000 radius/dictionary.citrix radius/dictionary.clavister radius/dictionary.cnergee radius/dictionary.colubris radius/dictionary.columbia_university radius/dictionary.compat radius/dictionary.compatible radius/dictionary.cosine radius/dictionary.dante radius/dictionary.dellemc radius/dictionary.dhcp radius/dictionary.digium radius/dictionary.dlink radius/dictionary.dragonwave radius/dictionary.efficientip radius/dictionary.eltex radius/dictionary.epygi radius/dictionary.equallogic radius/dictionary.ericsson radius/dictionary.ericsson.ab radius/dictionary.ericsson.packet.core.networks radius/dictionary.extreme radius/dictionary.f5 radius/dictionary.fdxtended radius/dictionary.fortinet radius/dictionary.foundry radius/dictionary.freedhcp radius/dictionary.freeradius radius/dictionary.freeradius.internal radius/dictionary.freeswitch radius/dictionary.gandalf radius/dictionary.garderos radius/dictionary.gemtek radius/dictionary.h3c radius/dictionary.hp radius/dictionary.huawei radius/dictionary.iana radius/dictionary.iea radius/dictionary.infoblox radius/dictionary.infonet radius/dictionary.ipunplugged radius/dictionary.issanni radius/dictionary.itk radius/dictionary.jradius radius/dictionary.juniper radius/dictionary.karlnet radius/dictionary.kineto radius/dictionary.lancom radius/dictionary.livingston radius/dictionary.localweb radius/dictionary.lucent radius/dictionary.manzara radius/dictionary.meinberg radius/dictionary.merit radius/dictionary.meru radius/dictionary.microsemi radius/dictionary.microsoft radius/dictionary.mikrotik radius/dictionary.motorola radius/dictionary.motorola.wimax radius/dictionary.navini radius/dictionary.netscreen radius/dictionary.networkphysics radius/dictionary.nexans radius/dictionary.nokia radius/dictionary.nokia.conflict radius/dictionary.nomadix radius/dictionary.nortel radius/dictionary.ntua radius/dictionary.openser radius/dictionary.packeteer radius/dictionary.paloalto radius/dictionary.patton radius/dictionary.perle radius/dictionary.propel radius/dictionary.prosoft radius/dictionary.proxim radius/dictionary.purewave radius/dictionary.quiconnect radius/dictionary.quintum radius/dictionary.redcreek radius/dictionary.rfc2865 radius/dictionary.rfc2866 radius/dictionary.rfc2867 radius/dictionary.rfc2868 radius/dictionary.rfc2869 radius/dictionary.rfc3162 radius/dictionary.rfc3576 radius/dictionary.rfc3580 radius/dictionary.rfc4072 radius/dictionary.rfc4372 radius/dictionary.rfc4603 radius/dictionary.rfc4675 radius/dictionary.rfc4679 radius/dictionary.rfc4818 radius/dictionary.rfc4849 radius/dictionary.rfc5090 radius/dictionary.rfc5176 radius/dictionary.rfc5447 radius/dictionary.rfc5580 radius/dictionary.rfc5607 radius/dictionary.rfc5904 radius/dictionary.rfc6519 radius/dictionary.rfc6572 radius/dictionary.rfc6677 radius/dictionary.rfc6911 radius/dictionary.rfc6929 radius/dictionary.rfc6930 radius/dictionary.rfc7055 radius/dictionary.rfc7155 radius/dictionary.rfc7268 radius/dictionary.rfc7499 radius/dictionary.rfc7930 radius/dictionary.riverbed radius/dictionary.riverstone radius/dictionary.roaringpenguin radius/dictionary.ruckus radius/dictionary.ruggedcom radius/dictionary.sangoma radius/dictionary.sg radius/dictionary.shasta radius/dictionary.shiva radius/dictionary.siemens radius/dictionary.slipstream radius/dictionary.sofaware radius/dictionary.sonicwall radius/dictionary.springtide radius/dictionary.starent radius/dictionary.starent.vsa1 radius/dictionary.surfnet radius/dictionary.symbol radius/dictionary.t_systems_nova radius/dictionary.telebit radius/dictionary.telkom radius/dictionary.terena radius/dictionary.trapeze radius/dictionary.travelping radius/dictionary.tropos radius/dictionary.ukerna radius/dictionary.unisphere radius/dictionary.unix radius/dictionary.usr radius/dictionary.utstarcom radius/dictionary.valemount radius/dictionary.verizon radius/dictionary.versanet radius/dictionary.vqp radius/dictionary.walabi radius/dictionary.waverider radius/dictionary.wichorus radius/dictionary.wimax radius/dictionary.wimax.alvarion radius/dictionary.wimax.wichorus radius/dictionary.wispr radius/dictionary.xedia radius/dictionary.xylan radius/dictionary.yubico radius/dictionary.zeus radius/dictionary.zte radius/dictionary.zyxel C:/Development/wireshark/run/$(Configuration)/radius
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">C:/Development/wireshark/CMakeFiles/8944e641a9b55c429b37c9939e31cf62/README.radius_dictionary.rule;C:\Development\wireshark\radius\README.radius_dictionary;C:\Development\wireshark\radius\custom.includes;C:\Development\wireshark\radius\dictionary;C:\Development\wireshark\radius\dictionary.3com;C:\Development\wireshark\radius\dictionary.3gpp;C:\Development\wireshark\radius\dictionary.3gpp2;C:\Development\wireshark\radius\dictionary.acc;C:\Development\wireshark\radius\dictionary.acme;C:\Development\wireshark\radius\dictionary.actelis;C:\Development\wireshark\radius\dictionary.aerohive;C:\Development\wireshark\radius\dictionary.airespace;C:\Development\wireshark\radius\dictionary.alcatel;C:\Development\wireshark\radius\dictionary.alcatel-lucent.aaa;C:\Development\wireshark\radius\dictionary.alcatel.esam;C:\Development\wireshark\radius\dictionary.alcatel.sr;C:\Development\wireshark\radius\dictionary.alteon;C:\Development\wireshark\radius\dictionary.altiga;C:\Development\wireshark\radius\dictionary.alvarion;C:\Development\wireshark\radius\dictionary.alvarion.wimax.v2_2;C:\Development\wireshark\radius\dictionary.apc;C:\Development\wireshark\radius\dictionary.aptis;C:\Development\wireshark\radius\dictionary.arbor;C:\Development\wireshark\radius\dictionary.aruba;C:\Development\wireshark\radius\dictionary.ascend;C:\Development\wireshark\radius\dictionary.asn;C:\Development\wireshark\radius\dictionary.audiocodes;C:\Development\wireshark\radius\dictionary.avaya;C:\Development\wireshark\radius\dictionary.azaire;C:\Development\wireshark\radius\dictionary.bay;C:\Development\wireshark\radius\dictionary.bintec;C:\Development\wireshark\radius\dictionary.bluecoat;C:\Development\wireshark\radius\dictionary.bristol;C:\Development\wireshark\radius\dictionary.broadsoft;C:\Development\wireshark\radius\dictionary.brocade;C:\Development\wireshark\radius\dictionary.bskyb;C:\Development\wireshark\radius\dictionary.bt;C:\Development\wireshark\radius\dictionary.cablelabs;C:\Development\wireshark\radius\dictionary.cabletron;C:\Development\wireshark\radius\dictionary.camiant;C:\Development\wireshark\radius\dictionary.chillispot;C:\Development\wireshark\radius\dictionary.cisco;C:\Development\wireshark\radius\dictionary.cisco.asa;C:\Development\wireshark\radius\dictionary.cisco.bbsm;C:\Development\wireshark\radius\dictionary.cisco.vpn3000;C:\Development\wireshark\radius\dictionary.cisco.vpn5000;C:\Development\wireshark\radius\dictionary.citrix;C:\Development\wireshark\radius\dictionary.clavister;C:\Development\wireshark\radius\dictionary.cnergee;C:\Development\wireshark\radius\dictionary.colubris;C:\Development\wireshark\radius\dictionary.columbia_university;C:\Development\wireshark\radius\dictionary.compat;C:\Development\wireshark\radius\dictionary.compatible;C:\Development\wireshark\radius\dictionary.cosine;C:\Development\wireshark\radius\dictionary.dante;C:\Development\wireshark\radius\dictionary.dellemc;C:\Development\wireshark\radius\dictionary.dhcp;C:\Development\wireshark\radius\dictionary.digium;C:\Development\wireshark\radius\dictionary.dlink;C:\Development\wireshark\radius\dictionary.dragonwave;C:\Development\wireshark\radius\dictionary.efficientip;C:\Development\wireshark\radius\dictionary.eltex;C:\Development\wireshark\radius\dictionary.epygi;C:\Development\wireshark\radius\dictionary.equallogic;C:\Development\wireshark\radius\dictionary.ericsson;C:\Development\wireshark\radius\dictionary.ericsson.ab;C:\Development\wireshark\radius\dictionary.ericsson.packet.core.networks;C:\Development\wireshark\radius\dictionary.extreme;C:\Development\wireshark\radius\dictionary.f5;C:\Development\wireshark\radius\dictionary.fdxtended;C:\Development\wireshark\radius\dictionary.fortinet;C:\Development\wireshark\radius\dictionary.foundry;C:\Development\wireshark\radius\dictionary.freedhcp;C:\Development\wireshark\radius\dictionary.freeradius;C:\Development\wireshark\radius\dictionary.freeradius.internal;C:\Development\wireshark\radius\dictionary.freeswitch;C:\Development\wireshark\radius\dictionary.gandalf;C:\Development\wireshark\radius\dictionary.garderos;C:\Development\wireshark\radius\dictionary.gemtek;C:\Development\wireshark\radius\dictionary.h3c;C:\Development\wireshark\radius\dictionary.hp;C:\Development\wireshark\radius\dictionary.huawei;C:\Development\wireshark\radius\dictionary.iana;C:\Development\wireshark\radius\dictionary.iea;C:\Development\wireshark\radius\dictionary.infoblox;C:\Development\wireshark\radius\dictionary.infonet;C:\Development\wireshark\radius\dictionary.ipunplugged;C:\Development\wireshark\radius\dictionary.issanni;C:\Development\wireshark\radius\dictionary.itk;C:\Development\wireshark\radius\dictionary.jradius;C:\Development\wireshark\radius\dictionary.juniper;C:\Development\wireshark\radius\dictionary.karlnet;C:\Development\wireshark\radius\dictionary.kineto;C:\Development\wireshark\radius\dictionary.lancom;C:\Development\wireshark\radius\dictionary.livingston;C:\Development\wireshark\radius\dictionary.localweb;C:\Development\wireshark\radius\dictionary.lucent;C:\Development\wireshark\radius\dictionary.manzara;C:\Development\wireshark\radius\dictionary.meinberg;C:\Development\wireshark\radius\dictionary.merit;C:\Development\wireshark\radius\dictionary.meru;C:\Development\wireshark\radius\dictionary.microsemi;C:\Development\wireshark\radius\dictionary.microsoft;C:\Development\wireshark\radius\dictionary.mikrotik;C:\Development\wireshark\radius\dictionary.motorola;C:\Development\wireshark\radius\dictionary.motorola.wimax;C:\Development\wireshark\radius\dictionary.navini;C:\Development\wireshark\radius\dictionary.netscreen;C:\Development\wireshark\radius\dictionary.networkphysics;C:\Development\wireshark\radius\dictionary.nexans;C:\Development\wireshark\radius\dictionary.nokia;C:\Development\wireshark\radius\dictionary.nokia.conflict;C:\Development\wireshark\radius\dictionary.nomadix;C:\Development\wireshark\radius\dictionary.nortel;C:\Development\wireshark\radius\dictionary.ntua;C:\Development\wireshark\radius\dictionary.openser;C:\Development\wireshark\radius\dictionary.packeteer;C:\Development\wireshark\radius\dictionary.paloalto;C:\Development\wireshark\radius\dictionary.patton;C:\Development\wireshark\radius\dictionary.perle;C:\Development\wireshark\radius\dictionary.propel;C:\Development\wireshark\radius\dictionary.prosoft;C:\Development\wireshark\radius\dictionary.proxim;C:\Development\wireshark\radius\dictionary.purewave;C:\Development\wireshark\radius\dictionary.quiconnect;C:\Development\wireshark\radius\dictionary.quintum;C:\Development\wireshark\radius\dictionary.redcreek;C:\Development\wireshark\radius\dictionary.rfc2865;C:\Development\wireshark\radius\dictionary.rfc2866;C:\Development\wireshark\radius\dictionary.rfc2867;C:\Development\wireshark\radius\dictionary.rfc2868;C:\Development\wireshark\radius\dictionary.rfc2869;C:\Development\wireshark\radius\dictionary.rfc3162;C:\Development\wireshark\radius\dictionary.rfc3576;C:\Development\wireshark\radius\dictionary.rfc3580;C:\Development\wireshark\radius\dictionary.rfc4072;C:\Development\wireshark\radius\dictionary.rfc4372;C:\Development\wireshark\radius\dictionary.rfc4603;C:\Development\wireshark\radius\dictionary.rfc4675;C:\Development\wireshark\radius\dictionary.rfc4679;C:\Development\wireshark\radius\dictionary.rfc4818;C:\Development\wireshark\radius\dictionary.rfc4849;C:\Development\wireshark\radius\dictionary.rfc5090;C:\Development\wireshark\radius\dictionary.rfc5176;C:\Development\wireshark\radius\dictionary.rfc5447;C:\Development\wireshark\radius\dictionary.rfc5580;C:\Development\wireshark\radius\dictionary.rfc5607;C:\Development\wireshark\radius\dictionary.rfc5904;C:\Development\wireshark\radius\dictionary.rfc6519;C:\Development\wireshark\radius\dictionary.rfc6572;C:\Development\wireshark\radius\dictionary.rfc6677;C:\Development\wireshark\radius\dictionary.rfc6911;C:\Development\wireshark\radius\dictionary.rfc6929;C:\Development\wireshark\radius\dictionary.rfc6930;C:\Development\wireshark\radius\dictionary.rfc7055;C:\Development\wireshark\radius\dictionary.rfc7155;C:\Development\wireshark\radius\dictionary.rfc7268;C:\Development\wireshark\radius\dictionary.rfc7499;C:\Development\wireshark\radius\dictionary.rfc7930;C:\Development\wireshark\radius\dictionary.riverbed;C:\Development\wireshark\radius\dictionary.riverstone;C:\Development\wireshark\radius\dictionary.roaringpenguin;C:\Development\wireshark\radius\dictionary.ruckus;C:\Development\wireshark\radius\dictionary.ruggedcom;C:\Development\wireshark\radius\dictionary.sangoma;C:\Development\wireshark\radius\dictionary.sg;C:\Development\wireshark\radius\dictionary.shasta;C:\Development\wireshark\radius\dictionary.shiva;C:\Development\wireshark\radius\dictionary.siemens;C:\Development\wireshark\radius\dictionary.slipstream;C:\Development\wireshark\radius\dictionary.sofaware;C:\Development\wireshark\radius\dictionary.sonicwall;C:\Development\wireshark\radius\dictionary.springtide;C:\Development\wireshark\radius\dictionary.starent;C:\Development\wireshark\radius\dictionary.starent.vsa1;C:\Development\wireshark\radius\dictionary.surfnet;C:\Development\wireshark\radius\dictionary.symbol;C:\Development\wireshark\radius\dictionary.t_systems_nova;C:\Development\wireshark\radius\dictionary.telebit;C:\Development\wireshark\radius\dictionary.telkom;C:\Development\wireshark\radius\dictionary.terena;C:\Development\wireshark\radius\dictionary.trapeze;C:\Development\wireshark\radius\dictionary.travelping;C:\Development\wireshark\radius\dictionary.tropos;C:\Development\wireshark\radius\dictionary.ukerna;C:\Development\wireshark\radius\dictionary.unisphere;C:\Development\wireshark\radius\dictionary.unix;C:\Development\wireshark\radius\dictionary.usr;C:\Development\wireshark\radius\dictionary.utstarcom;C:\Development\wireshark\radius\dictionary.valemount;C:\Development\wireshark\radius\dictionary.verizon;C:\Development\wireshark\radius\dictionary.versanet;C:\Development\wireshark\radius\dictionary.vqp;C:\Development\wireshark\radius\dictionary.walabi;C:\Development\wireshark\radius\dictionary.waverider;C:\Development\wireshark\radius\dictionary.wichorus;C:\Development\wireshark\radius\dictionary.wimax;C:\Development\wireshark\radius\dictionary.wimax.alvarion;C:\Development\wireshark\radius\dictionary.wimax.wichorus;C:\Development\wireshark\radius\dictionary.wispr;C:\Development\wireshark\radius\dictionary.xedia;C:\Development\wireshark\radius\dictionary.xylan;C:\Development\wireshark\radius\dictionary.yubico;C:\Development\wireshark\radius\dictionary.zeus;C:\Development\wireshark\radius\dictionary.zte;C:\Development\wireshark\radius\dictionary.zyxel;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">C:\Development\wireshark\run\$(Configuration)\radius\README.radius_dictionary;C:\Development\wireshark\run\$(Configuration)\radius\custom.includes;C:\Development\wireshark\run\$(Configuration)\radius\dictionary;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.3com;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.3gpp;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.3gpp2;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.acc;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.acme;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.actelis;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.aerohive;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.airespace;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.alcatel;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.alcatel-lucent.aaa;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.alcatel.esam;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.alcatel.sr;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.alteon;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.altiga;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.alvarion;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.alvarion.wimax.v2_2;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.apc;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.aptis;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.arbor;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.aruba;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.ascend;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.asn;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.audiocodes;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.avaya;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.azaire;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.bay;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.bintec;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.bluecoat;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.bristol;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.broadsoft;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.brocade;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.bskyb;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.bt;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.cablelabs;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.cabletron;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.camiant;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.chillispot;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.cisco;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.cisco.asa;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.cisco.bbsm;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.cisco.vpn3000;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.cisco.vpn5000;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.citrix;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.clavister;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.cnergee;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.colubris;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.columbia_university;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.compat;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.compatible;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.cosine;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.dante;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.dellemc;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.dhcp;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.digium;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.dlink;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.dragonwave;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.efficientip;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.eltex;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.epygi;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.equallogic;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.ericsson;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.ericsson.ab;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.ericsson.packet.core.networks;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.extreme;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.f5;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.fdxtended;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.fortinet;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.foundry;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.freedhcp;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.freeradius;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.freeradius.internal;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.freeswitch;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.gandalf;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.garderos;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.gemtek;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.h3c;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.hp;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.huawei;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.iana;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.iea;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.infoblox;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.infonet;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.ipunplugged;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.issanni;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.itk;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.jradius;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.juniper;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.karlnet;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.kineto;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.lancom;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.livingston;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.localweb;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.lucent;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.manzara;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.meinberg;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.merit;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.meru;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.microsemi;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.microsoft;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.mikrotik;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.motorola;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.motorola.wimax;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.navini;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.netscreen;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.networkphysics;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.nexans;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.nokia;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.nokia.conflict;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.nomadix;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.nortel;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.ntua;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.openser;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.packeteer;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.paloalto;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.patton;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.perle;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.propel;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.prosoft;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.proxim;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.purewave;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.quiconnect;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.quintum;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.redcreek;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc2865;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc2866;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc2867;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc2868;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc2869;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc3162;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc3576;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc3580;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc4072;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc4372;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc4603;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc4675;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc4679;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc4818;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc4849;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc5090;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc5176;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc5447;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc5580;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc5607;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc5904;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc6519;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc6572;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc6677;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc6911;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc6929;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc6930;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc7055;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc7155;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc7268;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc7499;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc7930;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.riverbed;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.riverstone;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.roaringpenguin;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.ruckus;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.ruggedcom;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.sangoma;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.sg;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.shasta;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.shiva;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.siemens;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.slipstream;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.sofaware;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.sonicwall;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.springtide;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.starent;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.starent.vsa1;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.surfnet;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.symbol;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.t_systems_nova;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.telebit;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.telkom;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.terena;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.trapeze;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.travelping;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.tropos;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.ukerna;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.unisphere;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.unix;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.usr;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.utstarcom;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.valemount;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.verizon;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.versanet;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.vqp;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.walabi;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.waverider;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.wichorus;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.wimax;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.wimax.alvarion;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.wimax.wichorus;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.wispr;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.xedia;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.xylan;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.yubico;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.zeus;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.zte;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.zyxel</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">Generating run/$(Configuration)/radius/README.radius_dictionary, run/$(Configuration)/radius/custom.includes, run/$(Configuration)/radius/dictionary, run/$(Configuration)/radius/dictionary.3com, run/$(Configuration)/radius/dictionary.3gpp, run/$(Configuration)/radius/dictionary.3gpp2, run/$(Configuration)/radius/dictionary.acc, run/$(Configuration)/radius/dictionary.acme, run/$(Configuration)/radius/dictionary.actelis, run/$(Configuration)/radius/dictionary.aerohive, run/$(Configuration)/radius/dictionary.airespace, run/$(Configuration)/radius/dictionary.alcatel, run/$(Configuration)/radius/dictionary.alcatel-lucent.aaa, run/$(Configuration)/radius/dictionary.alcatel.esam, run/$(Configuration)/radius/dictionary.alcatel.sr, run/$(Configuration)/radius/dictionary.alteon, run/$(Configuration)/radius/dictionary.altiga, run/$(Configuration)/radius/dictionary.alvarion, run/$(Configuration)/radius/dictionary.alvarion.wimax.v2_2, run/$(Configuration)/radius/dictionary.apc, run/$(Configuration)/radius/dictionary.aptis, run/$(Configuration)/radius/dictionary.arbor, run/$(Configuration)/radius/dictionary.aruba, run/$(Configuration)/radius/dictionary.ascend, run/$(Configuration)/radius/dictionary.asn, run/$(Configuration)/radius/dictionary.audiocodes, run/$(Configuration)/radius/dictionary.avaya, run/$(Configuration)/radius/dictionary.azaire, run/$(Configuration)/radius/dictionary.bay, run/$(Configuration)/radius/dictionary.bintec, run/$(Configuration)/radius/dictionary.bluecoat, run/$(Configuration)/radius/dictionary.bristol, run/$(Configuration)/radius/dictionary.broadsoft, run/$(Configuration)/radius/dictionary.brocade, run/$(Configuration)/radius/dictionary.bskyb, run/$(Configuration)/radius/dictionary.bt, run/$(Configuration)/radius/dictionary.cablelabs, run/$(Configuration)/radius/dictionary.cabletron, run/$(Configuration)/radius/dictionary.camiant, run/$(Configuration)/radius/dictionary.chillispot, run/$(Configuration)/radius/dictionary.cisco, run/$(Configuration)/radius/dictionary.cisco.asa, run/$(Configuration)/radius/dictionary.cisco.bbsm, run/$(Configuration)/radius/dictionary.cisco.vpn3000, run/$(Configuration)/radius/dictionary.cisco.vpn5000, run/$(Configuration)/radius/dictionary.citrix, run/$(Configuration)/radius/dictionary.clavister, run/$(Configuration)/radius/dictionary.cnergee, run/$(Configuration)/radius/dictionary.colubris, run/$(Configuration)/radius/dictionary.columbia_university, run/$(Configuration)/radius/dictionary.compat, run/$(Configuration)/radius/dictionary.compatible, run/$(Configuration)/radius/dictionary.cosine, run/$(Configuration)/radius/dictionary.dante, run/$(Configuration)/radius/dictionary.dellemc, run/$(Configuration)/radius/dictionary.dhcp, run/$(Configuration)/radius/dictionary.digium, run/$(Configuration)/radius/dictionary.dlink, run/$(Configuration)/radius/dictionary.dragonwave, run/$(Configuration)/radius/dictionary.efficientip, run/$(Configuration)/radius/dictionary.eltex, run/$(Configuration)/radius/dictionary.epygi, run/$(Configuration)/radius/dictionary.equallogic, run/$(Configuration)/radius/dictionary.ericsson, run/$(Configuration)/radius/dictionary.ericsson.ab, run/$(Configuration)/radius/dictionary.ericsson.packet.core.networks, run/$(Configuration)/radius/dictionary.extreme, run/$(Configuration)/radius/dictionary.f5, run/$(Configuration)/radius/dictionary.fdxtended, run/$(Configuration)/radius/dictionary.fortinet, run/$(Configuration)/radius/dictionary.foundry, run/$(Configuration)/radius/dictionary.freedhcp, run/$(Configuration)/radius/dictionary.freeradius, run/$(Configuration)/radius/dictionary.freeradius.internal, run/$(Configuration)/radius/dictionary.freeswitch, run/$(Configuration)/radius/dictionary.gandalf, run/$(Configuration)/radius/dictionary.garderos, run/$(Configuration)/radius/dictionary.gemtek, run/$(Configuration)/radius/dictionary.h3c, run/$(Configuration)/radius/dictionary.hp, run/$(Configuration)/radius/dictionary.huawei, run/$(Configuration)/radius/dictionary.iana, run/$(Configuration)/radius/dictionary.iea, run/$(Configuration)/radius/dictionary.infoblox, run/$(Configuration)/radius/dictionary.infonet, run/$(Configuration)/radius/dictionary.ipunplugged, run/$(Configuration)/radius/dictionary.issanni, run/$(Configuration)/radius/dictionary.itk, run/$(Configuration)/radius/dictionary.jradius, run/$(Configuration)/radius/dictionary.juniper, run/$(Configuration)/radius/dictionary.karlnet, run/$(Configuration)/radius/dictionary.kineto, run/$(Configuration)/radius/dictionary.lancom, run/$(Configuration)/radius/dictionary.livingston, run/$(Configuration)/radius/dictionary.localweb, run/$(Configuration)/radius/dictionary.lucent, run/$(Configuration)/radius/dictionary.manzara, run/$(Configuration)/radius/dictionary.meinberg, run/$(Configuration)/radius/dictionary.merit, run/$(Configuration)/radius/dictionary.meru, run/$(Configuration)/radius/dictionary.microsemi, run/$(Configuration)/radius/dictionary.microsoft, run/$(Configuration)/radius/dictionary.mikrotik, run/$(Configuration)/radius/dictionary.motorola, run/$(Configuration)/radius/dictionary.motorola.wimax, run/$(Configuration)/radius/dictionary.navini, run/$(Configuration)/radius/dictionary.netscreen, run/$(Configuration)/radius/dictionary.networkphysics, run/$(Configuration)/radius/dictionary.nexans, run/$(Configuration)/radius/dictionary.nokia, run/$(Configuration)/radius/dictionary.nokia.conflict, run/$(Configuration)/radius/dictionary.nomadix, run/$(Configuration)/radius/dictionary.nortel, run/$(Configuration)/radius/dictionary.ntua, run/$(Configuration)/radius/dictionary.openser, run/$(Configuration)/radius/dictionary.packeteer, run/$(Configuration)/radius/dictionary.paloalto, run/$(Configuration)/radius/dictionary.patton, run/$(Configuration)/radius/dictionary.perle, run/$(Configuration)/radius/dictionary.propel, run/$(Configuration)/radius/dictionary.prosoft, run/$(Configuration)/radius/dictionary.proxim, run/$(Configuration)/radius/dictionary.purewave, run/$(Configuration)/radius/dictionary.quiconnect, run/$(Configuration)/radius/dictionary.quintum, run/$(Configuration)/radius/dictionary.redcreek, run/$(Configuration)/radius/dictionary.rfc2865, run/$(Configuration)/radius/dictionary.rfc2866, run/$(Configuration)/radius/dictionary.rfc2867, run/$(Configuration)/radius/dictionary.rfc2868, run/$(Configuration)/radius/dictionary.rfc2869, run/$(Configuration)/radius/dictionary.rfc3162, run/$(Configuration)/radius/dictionary.rfc3576, run/$(Configuration)/radius/dictionary.rfc3580, run/$(Configuration)/radius/dictionary.rfc4072, run/$(Configuration)/radius/dictionary.rfc4372, run/$(Configuration)/radius/dictionary.rfc4603, run/$(Configuration)/radius/dictionary.rfc4675, run/$(Configuration)/radius/dictionary.rfc4679, run/$(Configuration)/radius/dictionary.rfc4818, run/$(Configuration)/radius/dictionary.rfc4849, run/$(Configuration)/radius/dictionary.rfc5090, run/$(Configuration)/radius/dictionary.rfc5176, run/$(Configuration)/radius/dictionary.rfc5447, run/$(Configuration)/radius/dictionary.rfc5580, run/$(Configuration)/radius/dictionary.rfc5607, run/$(Configuration)/radius/dictionary.rfc5904, run/$(Configuration)/radius/dictionary.rfc6519, run/$(Configuration)/radius/dictionary.rfc6572, run/$(Configuration)/radius/dictionary.rfc6677, run/$(Configuration)/radius/dictionary.rfc6911, run/$(Configuration)/radius/dictionary.rfc6929, run/$(Configuration)/radius/dictionary.rfc6930, run/$(Configuration)/radius/dictionary.rfc7055, run/$(Configuration)/radius/dictionary.rfc7155, run/$(Configuration)/radius/dictionary.rfc7268, run/$(Configuration)/radius/dictionary.rfc7499, run/$(Configuration)/radius/dictionary.rfc7930, run/$(Configuration)/radius/dictionary.riverbed, run/$(Configuration)/radius/dictionary.riverstone, run/$(Configuration)/radius/dictionary.roaringpenguin, run/$(Configuration)/radius/dictionary.ruckus, run/$(Configuration)/radius/dictionary.ruggedcom, run/$(Configuration)/radius/dictionary.sangoma, run/$(Configuration)/radius/dictionary.sg, run/$(Configuration)/radius/dictionary.shasta, run/$(Configuration)/radius/dictionary.shiva, run/$(Configuration)/radius/dictionary.siemens, run/$(Configuration)/radius/dictionary.slipstream, run/$(Configuration)/radius/dictionary.sofaware, run/$(Configuration)/radius/dictionary.sonicwall, run/$(Configuration)/radius/dictionary.springtide, run/$(Configuration)/radius/dictionary.starent, run/$(Configuration)/radius/dictionary.starent.vsa1, run/$(Configuration)/radius/dictionary.surfnet, run/$(Configuration)/radius/dictionary.symbol, run/$(Configuration)/radius/dictionary.t_systems_nova, run/$(Configuration)/radius/dictionary.telebit, run/$(Configuration)/radius/dictionary.telkom, run/$(Configuration)/radius/dictionary.terena, run/$(Configuration)/radius/dictionary.trapeze, run/$(Configuration)/radius/dictionary.travelping, run/$(Configuration)/radius/dictionary.tropos, run/$(Configuration)/radius/dictionary.ukerna, run/$(Configuration)/radius/dictionary.unisphere, run/$(Configuration)/radius/dictionary.unix, run/$(Configuration)/radius/dictionary.usr, run/$(Configuration)/radius/dictionary.utstarcom, run/$(Configuration)/radius/dictionary.valemount, run/$(Configuration)/radius/dictionary.verizon, run/$(Configuration)/radius/dictionary.versanet, run/$(Configuration)/radius/dictionary.vqp, run/$(Configuration)/radius/dictionary.walabi, run/$(Configuration)/radius/dictionary.waverider, run/$(Configuration)/radius/dictionary.wichorus, run/$(Configuration)/radius/dictionary.wimax, run/$(Configuration)/radius/dictionary.wimax.alvarion, run/$(Configuration)/radius/dictionary.wimax.wichorus, run/$(Configuration)/radius/dictionary.wispr, run/$(Configuration)/radius/dictionary.xedia, run/$(Configuration)/radius/dictionary.xylan, run/$(Configuration)/radius/dictionary.yubico, run/$(Configuration)/radius/dictionary.zeus, run/$(Configuration)/radius/dictionary.zte, run/$(Configuration)/radius/dictionary.zyxel</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">setlocal
cd C:\Development\wireshark
if %errorlevel% neq 0 goto :cmEnd
C:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory C:/Development/wireshark/run/$(Configuration)/radius
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E copy_if_different radius/README.radius_dictionary radius/custom.includes radius/dictionary radius/dictionary.3com radius/dictionary.3gpp radius/dictionary.3gpp2 radius/dictionary.acc radius/dictionary.acme radius/dictionary.actelis radius/dictionary.aerohive radius/dictionary.airespace radius/dictionary.alcatel radius/dictionary.alcatel-lucent.aaa radius/dictionary.alcatel.esam radius/dictionary.alcatel.sr radius/dictionary.alteon radius/dictionary.altiga radius/dictionary.alvarion radius/dictionary.alvarion.wimax.v2_2 radius/dictionary.apc radius/dictionary.aptis radius/dictionary.arbor radius/dictionary.aruba radius/dictionary.ascend radius/dictionary.asn radius/dictionary.audiocodes radius/dictionary.avaya radius/dictionary.azaire radius/dictionary.bay radius/dictionary.bintec radius/dictionary.bluecoat radius/dictionary.bristol radius/dictionary.broadsoft radius/dictionary.brocade radius/dictionary.bskyb radius/dictionary.bt radius/dictionary.cablelabs radius/dictionary.cabletron radius/dictionary.camiant radius/dictionary.chillispot radius/dictionary.cisco radius/dictionary.cisco.asa radius/dictionary.cisco.bbsm radius/dictionary.cisco.vpn3000 radius/dictionary.cisco.vpn5000 radius/dictionary.citrix radius/dictionary.clavister radius/dictionary.cnergee radius/dictionary.colubris radius/dictionary.columbia_university radius/dictionary.compat radius/dictionary.compatible radius/dictionary.cosine radius/dictionary.dante radius/dictionary.dellemc radius/dictionary.dhcp radius/dictionary.digium radius/dictionary.dlink radius/dictionary.dragonwave radius/dictionary.efficientip radius/dictionary.eltex radius/dictionary.epygi radius/dictionary.equallogic radius/dictionary.ericsson radius/dictionary.ericsson.ab radius/dictionary.ericsson.packet.core.networks radius/dictionary.extreme radius/dictionary.f5 radius/dictionary.fdxtended radius/dictionary.fortinet radius/dictionary.foundry radius/dictionary.freedhcp radius/dictionary.freeradius radius/dictionary.freeradius.internal radius/dictionary.freeswitch radius/dictionary.gandalf radius/dictionary.garderos radius/dictionary.gemtek radius/dictionary.h3c radius/dictionary.hp radius/dictionary.huawei radius/dictionary.iana radius/dictionary.iea radius/dictionary.infoblox radius/dictionary.infonet radius/dictionary.ipunplugged radius/dictionary.issanni radius/dictionary.itk radius/dictionary.jradius radius/dictionary.juniper radius/dictionary.karlnet radius/dictionary.kineto radius/dictionary.lancom radius/dictionary.livingston radius/dictionary.localweb radius/dictionary.lucent radius/dictionary.manzara radius/dictionary.meinberg radius/dictionary.merit radius/dictionary.meru radius/dictionary.microsemi radius/dictionary.microsoft radius/dictionary.mikrotik radius/dictionary.motorola radius/dictionary.motorola.wimax radius/dictionary.navini radius/dictionary.netscreen radius/dictionary.networkphysics radius/dictionary.nexans radius/dictionary.nokia radius/dictionary.nokia.conflict radius/dictionary.nomadix radius/dictionary.nortel radius/dictionary.ntua radius/dictionary.openser radius/dictionary.packeteer radius/dictionary.paloalto radius/dictionary.patton radius/dictionary.perle radius/dictionary.propel radius/dictionary.prosoft radius/dictionary.proxim radius/dictionary.purewave radius/dictionary.quiconnect radius/dictionary.quintum radius/dictionary.redcreek radius/dictionary.rfc2865 radius/dictionary.rfc2866 radius/dictionary.rfc2867 radius/dictionary.rfc2868 radius/dictionary.rfc2869 radius/dictionary.rfc3162 radius/dictionary.rfc3576 radius/dictionary.rfc3580 radius/dictionary.rfc4072 radius/dictionary.rfc4372 radius/dictionary.rfc4603 radius/dictionary.rfc4675 radius/dictionary.rfc4679 radius/dictionary.rfc4818 radius/dictionary.rfc4849 radius/dictionary.rfc5090 radius/dictionary.rfc5176 radius/dictionary.rfc5447 radius/dictionary.rfc5580 radius/dictionary.rfc5607 radius/dictionary.rfc5904 radius/dictionary.rfc6519 radius/dictionary.rfc6572 radius/dictionary.rfc6677 radius/dictionary.rfc6911 radius/dictionary.rfc6929 radius/dictionary.rfc6930 radius/dictionary.rfc7055 radius/dictionary.rfc7155 radius/dictionary.rfc7268 radius/dictionary.rfc7499 radius/dictionary.rfc7930 radius/dictionary.riverbed radius/dictionary.riverstone radius/dictionary.roaringpenguin radius/dictionary.ruckus radius/dictionary.ruggedcom radius/dictionary.sangoma radius/dictionary.sg radius/dictionary.shasta radius/dictionary.shiva radius/dictionary.siemens radius/dictionary.slipstream radius/dictionary.sofaware radius/dictionary.sonicwall radius/dictionary.springtide radius/dictionary.starent radius/dictionary.starent.vsa1 radius/dictionary.surfnet radius/dictionary.symbol radius/dictionary.t_systems_nova radius/dictionary.telebit radius/dictionary.telkom radius/dictionary.terena radius/dictionary.trapeze radius/dictionary.travelping radius/dictionary.tropos radius/dictionary.ukerna radius/dictionary.unisphere radius/dictionary.unix radius/dictionary.usr radius/dictionary.utstarcom radius/dictionary.valemount radius/dictionary.verizon radius/dictionary.versanet radius/dictionary.vqp radius/dictionary.walabi radius/dictionary.waverider radius/dictionary.wichorus radius/dictionary.wimax radius/dictionary.wimax.alvarion radius/dictionary.wimax.wichorus radius/dictionary.wispr radius/dictionary.xedia radius/dictionary.xylan radius/dictionary.yubico radius/dictionary.zeus radius/dictionary.zte radius/dictionary.zyxel C:/Development/wireshark/run/$(Configuration)/radius
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">C:/Development/wireshark/CMakeFiles/8944e641a9b55c429b37c9939e31cf62/README.radius_dictionary.rule;C:\Development\wireshark\radius\README.radius_dictionary;C:\Development\wireshark\radius\custom.includes;C:\Development\wireshark\radius\dictionary;C:\Development\wireshark\radius\dictionary.3com;C:\Development\wireshark\radius\dictionary.3gpp;C:\Development\wireshark\radius\dictionary.3gpp2;C:\Development\wireshark\radius\dictionary.acc;C:\Development\wireshark\radius\dictionary.acme;C:\Development\wireshark\radius\dictionary.actelis;C:\Development\wireshark\radius\dictionary.aerohive;C:\Development\wireshark\radius\dictionary.airespace;C:\Development\wireshark\radius\dictionary.alcatel;C:\Development\wireshark\radius\dictionary.alcatel-lucent.aaa;C:\Development\wireshark\radius\dictionary.alcatel.esam;C:\Development\wireshark\radius\dictionary.alcatel.sr;C:\Development\wireshark\radius\dictionary.alteon;C:\Development\wireshark\radius\dictionary.altiga;C:\Development\wireshark\radius\dictionary.alvarion;C:\Development\wireshark\radius\dictionary.alvarion.wimax.v2_2;C:\Development\wireshark\radius\dictionary.apc;C:\Development\wireshark\radius\dictionary.aptis;C:\Development\wireshark\radius\dictionary.arbor;C:\Development\wireshark\radius\dictionary.aruba;C:\Development\wireshark\radius\dictionary.ascend;C:\Development\wireshark\radius\dictionary.asn;C:\Development\wireshark\radius\dictionary.audiocodes;C:\Development\wireshark\radius\dictionary.avaya;C:\Development\wireshark\radius\dictionary.azaire;C:\Development\wireshark\radius\dictionary.bay;C:\Development\wireshark\radius\dictionary.bintec;C:\Development\wireshark\radius\dictionary.bluecoat;C:\Development\wireshark\radius\dictionary.bristol;C:\Development\wireshark\radius\dictionary.broadsoft;C:\Development\wireshark\radius\dictionary.brocade;C:\Development\wireshark\radius\dictionary.bskyb;C:\Development\wireshark\radius\dictionary.bt;C:\Development\wireshark\radius\dictionary.cablelabs;C:\Development\wireshark\radius\dictionary.cabletron;C:\Development\wireshark\radius\dictionary.camiant;C:\Development\wireshark\radius\dictionary.chillispot;C:\Development\wireshark\radius\dictionary.cisco;C:\Development\wireshark\radius\dictionary.cisco.asa;C:\Development\wireshark\radius\dictionary.cisco.bbsm;C:\Development\wireshark\radius\dictionary.cisco.vpn3000;C:\Development\wireshark\radius\dictionary.cisco.vpn5000;C:\Development\wireshark\radius\dictionary.citrix;C:\Development\wireshark\radius\dictionary.clavister;C:\Development\wireshark\radius\dictionary.cnergee;C:\Development\wireshark\radius\dictionary.colubris;C:\Development\wireshark\radius\dictionary.columbia_university;C:\Development\wireshark\radius\dictionary.compat;C:\Development\wireshark\radius\dictionary.compatible;C:\Development\wireshark\radius\dictionary.cosine;C:\Development\wireshark\radius\dictionary.dante;C:\Development\wireshark\radius\dictionary.dellemc;C:\Development\wireshark\radius\dictionary.dhcp;C:\Development\wireshark\radius\dictionary.digium;C:\Development\wireshark\radius\dictionary.dlink;C:\Development\wireshark\radius\dictionary.dragonwave;C:\Development\wireshark\radius\dictionary.efficientip;C:\Development\wireshark\radius\dictionary.eltex;C:\Development\wireshark\radius\dictionary.epygi;C:\Development\wireshark\radius\dictionary.equallogic;C:\Development\wireshark\radius\dictionary.ericsson;C:\Development\wireshark\radius\dictionary.ericsson.ab;C:\Development\wireshark\radius\dictionary.ericsson.packet.core.networks;C:\Development\wireshark\radius\dictionary.extreme;C:\Development\wireshark\radius\dictionary.f5;C:\Development\wireshark\radius\dictionary.fdxtended;C:\Development\wireshark\radius\dictionary.fortinet;C:\Development\wireshark\radius\dictionary.foundry;C:\Development\wireshark\radius\dictionary.freedhcp;C:\Development\wireshark\radius\dictionary.freeradius;C:\Development\wireshark\radius\dictionary.freeradius.internal;C:\Development\wireshark\radius\dictionary.freeswitch;C:\Development\wireshark\radius\dictionary.gandalf;C:\Development\wireshark\radius\dictionary.garderos;C:\Development\wireshark\radius\dictionary.gemtek;C:\Development\wireshark\radius\dictionary.h3c;C:\Development\wireshark\radius\dictionary.hp;C:\Development\wireshark\radius\dictionary.huawei;C:\Development\wireshark\radius\dictionary.iana;C:\Development\wireshark\radius\dictionary.iea;C:\Development\wireshark\radius\dictionary.infoblox;C:\Development\wireshark\radius\dictionary.infonet;C:\Development\wireshark\radius\dictionary.ipunplugged;C:\Development\wireshark\radius\dictionary.issanni;C:\Development\wireshark\radius\dictionary.itk;C:\Development\wireshark\radius\dictionary.jradius;C:\Development\wireshark\radius\dictionary.juniper;C:\Development\wireshark\radius\dictionary.karlnet;C:\Development\wireshark\radius\dictionary.kineto;C:\Development\wireshark\radius\dictionary.lancom;C:\Development\wireshark\radius\dictionary.livingston;C:\Development\wireshark\radius\dictionary.localweb;C:\Development\wireshark\radius\dictionary.lucent;C:\Development\wireshark\radius\dictionary.manzara;C:\Development\wireshark\radius\dictionary.meinberg;C:\Development\wireshark\radius\dictionary.merit;C:\Development\wireshark\radius\dictionary.meru;C:\Development\wireshark\radius\dictionary.microsemi;C:\Development\wireshark\radius\dictionary.microsoft;C:\Development\wireshark\radius\dictionary.mikrotik;C:\Development\wireshark\radius\dictionary.motorola;C:\Development\wireshark\radius\dictionary.motorola.wimax;C:\Development\wireshark\radius\dictionary.navini;C:\Development\wireshark\radius\dictionary.netscreen;C:\Development\wireshark\radius\dictionary.networkphysics;C:\Development\wireshark\radius\dictionary.nexans;C:\Development\wireshark\radius\dictionary.nokia;C:\Development\wireshark\radius\dictionary.nokia.conflict;C:\Development\wireshark\radius\dictionary.nomadix;C:\Development\wireshark\radius\dictionary.nortel;C:\Development\wireshark\radius\dictionary.ntua;C:\Development\wireshark\radius\dictionary.openser;C:\Development\wireshark\radius\dictionary.packeteer;C:\Development\wireshark\radius\dictionary.paloalto;C:\Development\wireshark\radius\dictionary.patton;C:\Development\wireshark\radius\dictionary.perle;C:\Development\wireshark\radius\dictionary.propel;C:\Development\wireshark\radius\dictionary.prosoft;C:\Development\wireshark\radius\dictionary.proxim;C:\Development\wireshark\radius\dictionary.purewave;C:\Development\wireshark\radius\dictionary.quiconnect;C:\Development\wireshark\radius\dictionary.quintum;C:\Development\wireshark\radius\dictionary.redcreek;C:\Development\wireshark\radius\dictionary.rfc2865;C:\Development\wireshark\radius\dictionary.rfc2866;C:\Development\wireshark\radius\dictionary.rfc2867;C:\Development\wireshark\radius\dictionary.rfc2868;C:\Development\wireshark\radius\dictionary.rfc2869;C:\Development\wireshark\radius\dictionary.rfc3162;C:\Development\wireshark\radius\dictionary.rfc3576;C:\Development\wireshark\radius\dictionary.rfc3580;C:\Development\wireshark\radius\dictionary.rfc4072;C:\Development\wireshark\radius\dictionary.rfc4372;C:\Development\wireshark\radius\dictionary.rfc4603;C:\Development\wireshark\radius\dictionary.rfc4675;C:\Development\wireshark\radius\dictionary.rfc4679;C:\Development\wireshark\radius\dictionary.rfc4818;C:\Development\wireshark\radius\dictionary.rfc4849;C:\Development\wireshark\radius\dictionary.rfc5090;C:\Development\wireshark\radius\dictionary.rfc5176;C:\Development\wireshark\radius\dictionary.rfc5447;C:\Development\wireshark\radius\dictionary.rfc5580;C:\Development\wireshark\radius\dictionary.rfc5607;C:\Development\wireshark\radius\dictionary.rfc5904;C:\Development\wireshark\radius\dictionary.rfc6519;C:\Development\wireshark\radius\dictionary.rfc6572;C:\Development\wireshark\radius\dictionary.rfc6677;C:\Development\wireshark\radius\dictionary.rfc6911;C:\Development\wireshark\radius\dictionary.rfc6929;C:\Development\wireshark\radius\dictionary.rfc6930;C:\Development\wireshark\radius\dictionary.rfc7055;C:\Development\wireshark\radius\dictionary.rfc7155;C:\Development\wireshark\radius\dictionary.rfc7268;C:\Development\wireshark\radius\dictionary.rfc7499;C:\Development\wireshark\radius\dictionary.rfc7930;C:\Development\wireshark\radius\dictionary.riverbed;C:\Development\wireshark\radius\dictionary.riverstone;C:\Development\wireshark\radius\dictionary.roaringpenguin;C:\Development\wireshark\radius\dictionary.ruckus;C:\Development\wireshark\radius\dictionary.ruggedcom;C:\Development\wireshark\radius\dictionary.sangoma;C:\Development\wireshark\radius\dictionary.sg;C:\Development\wireshark\radius\dictionary.shasta;C:\Development\wireshark\radius\dictionary.shiva;C:\Development\wireshark\radius\dictionary.siemens;C:\Development\wireshark\radius\dictionary.slipstream;C:\Development\wireshark\radius\dictionary.sofaware;C:\Development\wireshark\radius\dictionary.sonicwall;C:\Development\wireshark\radius\dictionary.springtide;C:\Development\wireshark\radius\dictionary.starent;C:\Development\wireshark\radius\dictionary.starent.vsa1;C:\Development\wireshark\radius\dictionary.surfnet;C:\Development\wireshark\radius\dictionary.symbol;C:\Development\wireshark\radius\dictionary.t_systems_nova;C:\Development\wireshark\radius\dictionary.telebit;C:\Development\wireshark\radius\dictionary.telkom;C:\Development\wireshark\radius\dictionary.terena;C:\Development\wireshark\radius\dictionary.trapeze;C:\Development\wireshark\radius\dictionary.travelping;C:\Development\wireshark\radius\dictionary.tropos;C:\Development\wireshark\radius\dictionary.ukerna;C:\Development\wireshark\radius\dictionary.unisphere;C:\Development\wireshark\radius\dictionary.unix;C:\Development\wireshark\radius\dictionary.usr;C:\Development\wireshark\radius\dictionary.utstarcom;C:\Development\wireshark\radius\dictionary.valemount;C:\Development\wireshark\radius\dictionary.verizon;C:\Development\wireshark\radius\dictionary.versanet;C:\Development\wireshark\radius\dictionary.vqp;C:\Development\wireshark\radius\dictionary.walabi;C:\Development\wireshark\radius\dictionary.waverider;C:\Development\wireshark\radius\dictionary.wichorus;C:\Development\wireshark\radius\dictionary.wimax;C:\Development\wireshark\radius\dictionary.wimax.alvarion;C:\Development\wireshark\radius\dictionary.wimax.wichorus;C:\Development\wireshark\radius\dictionary.wispr;C:\Development\wireshark\radius\dictionary.xedia;C:\Development\wireshark\radius\dictionary.xylan;C:\Development\wireshark\radius\dictionary.yubico;C:\Development\wireshark\radius\dictionary.zeus;C:\Development\wireshark\radius\dictionary.zte;C:\Development\wireshark\radius\dictionary.zyxel;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">C:\Development\wireshark\run\$(Configuration)\radius\README.radius_dictionary;C:\Development\wireshark\run\$(Configuration)\radius\custom.includes;C:\Development\wireshark\run\$(Configuration)\radius\dictionary;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.3com;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.3gpp;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.3gpp2;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.acc;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.acme;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.actelis;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.aerohive;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.airespace;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.alcatel;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.alcatel-lucent.aaa;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.alcatel.esam;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.alcatel.sr;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.alteon;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.altiga;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.alvarion;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.alvarion.wimax.v2_2;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.apc;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.aptis;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.arbor;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.aruba;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.ascend;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.asn;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.audiocodes;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.avaya;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.azaire;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.bay;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.bintec;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.bluecoat;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.bristol;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.broadsoft;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.brocade;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.bskyb;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.bt;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.cablelabs;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.cabletron;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.camiant;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.chillispot;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.cisco;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.cisco.asa;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.cisco.bbsm;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.cisco.vpn3000;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.cisco.vpn5000;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.citrix;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.clavister;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.cnergee;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.colubris;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.columbia_university;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.compat;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.compatible;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.cosine;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.dante;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.dellemc;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.dhcp;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.digium;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.dlink;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.dragonwave;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.efficientip;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.eltex;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.epygi;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.equallogic;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.ericsson;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.ericsson.ab;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.ericsson.packet.core.networks;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.extreme;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.f5;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.fdxtended;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.fortinet;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.foundry;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.freedhcp;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.freeradius;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.freeradius.internal;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.freeswitch;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.gandalf;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.garderos;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.gemtek;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.h3c;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.hp;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.huawei;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.iana;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.iea;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.infoblox;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.infonet;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.ipunplugged;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.issanni;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.itk;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.jradius;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.juniper;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.karlnet;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.kineto;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.lancom;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.livingston;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.localweb;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.lucent;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.manzara;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.meinberg;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.merit;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.meru;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.microsemi;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.microsoft;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.mikrotik;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.motorola;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.motorola.wimax;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.navini;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.netscreen;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.networkphysics;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.nexans;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.nokia;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.nokia.conflict;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.nomadix;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.nortel;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.ntua;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.openser;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.packeteer;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.paloalto;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.patton;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.perle;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.propel;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.prosoft;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.proxim;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.purewave;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.quiconnect;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.quintum;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.redcreek;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc2865;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc2866;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc2867;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc2868;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc2869;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc3162;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc3576;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc3580;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc4072;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc4372;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc4603;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc4675;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc4679;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc4818;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc4849;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc5090;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc5176;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc5447;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc5580;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc5607;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc5904;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc6519;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc6572;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc6677;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc6911;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc6929;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc6930;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc7055;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc7155;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc7268;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc7499;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc7930;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.riverbed;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.riverstone;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.roaringpenguin;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.ruckus;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.ruggedcom;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.sangoma;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.sg;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.shasta;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.shiva;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.siemens;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.slipstream;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.sofaware;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.sonicwall;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.springtide;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.starent;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.starent.vsa1;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.surfnet;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.symbol;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.t_systems_nova;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.telebit;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.telkom;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.terena;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.trapeze;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.travelping;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.tropos;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.ukerna;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.unisphere;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.unix;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.usr;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.utstarcom;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.valemount;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.verizon;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.versanet;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.vqp;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.walabi;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.waverider;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.wichorus;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.wimax;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.wimax.alvarion;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.wimax.wichorus;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.wispr;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.xedia;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.xylan;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.yubico;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.zeus;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.zte;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.zyxel</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">Generating run/$(Configuration)/radius/README.radius_dictionary, run/$(Configuration)/radius/custom.includes, run/$(Configuration)/radius/dictionary, run/$(Configuration)/radius/dictionary.3com, run/$(Configuration)/radius/dictionary.3gpp, run/$(Configuration)/radius/dictionary.3gpp2, run/$(Configuration)/radius/dictionary.acc, run/$(Configuration)/radius/dictionary.acme, run/$(Configuration)/radius/dictionary.actelis, run/$(Configuration)/radius/dictionary.aerohive, run/$(Configuration)/radius/dictionary.airespace, run/$(Configuration)/radius/dictionary.alcatel, run/$(Configuration)/radius/dictionary.alcatel-lucent.aaa, run/$(Configuration)/radius/dictionary.alcatel.esam, run/$(Configuration)/radius/dictionary.alcatel.sr, run/$(Configuration)/radius/dictionary.alteon, run/$(Configuration)/radius/dictionary.altiga, run/$(Configuration)/radius/dictionary.alvarion, run/$(Configuration)/radius/dictionary.alvarion.wimax.v2_2, run/$(Configuration)/radius/dictionary.apc, run/$(Configuration)/radius/dictionary.aptis, run/$(Configuration)/radius/dictionary.arbor, run/$(Configuration)/radius/dictionary.aruba, run/$(Configuration)/radius/dictionary.ascend, run/$(Configuration)/radius/dictionary.asn, run/$(Configuration)/radius/dictionary.audiocodes, run/$(Configuration)/radius/dictionary.avaya, run/$(Configuration)/radius/dictionary.azaire, run/$(Configuration)/radius/dictionary.bay, run/$(Configuration)/radius/dictionary.bintec, run/$(Configuration)/radius/dictionary.bluecoat, run/$(Configuration)/radius/dictionary.bristol, run/$(Configuration)/radius/dictionary.broadsoft, run/$(Configuration)/radius/dictionary.brocade, run/$(Configuration)/radius/dictionary.bskyb, run/$(Configuration)/radius/dictionary.bt, run/$(Configuration)/radius/dictionary.cablelabs, run/$(Configuration)/radius/dictionary.cabletron, run/$(Configuration)/radius/dictionary.camiant, run/$(Configuration)/radius/dictionary.chillispot, run/$(Configuration)/radius/dictionary.cisco, run/$(Configuration)/radius/dictionary.cisco.asa, run/$(Configuration)/radius/dictionary.cisco.bbsm, run/$(Configuration)/radius/dictionary.cisco.vpn3000, run/$(Configuration)/radius/dictionary.cisco.vpn5000, run/$(Configuration)/radius/dictionary.citrix, run/$(Configuration)/radius/dictionary.clavister, run/$(Configuration)/radius/dictionary.cnergee, run/$(Configuration)/radius/dictionary.colubris, run/$(Configuration)/radius/dictionary.columbia_university, run/$(Configuration)/radius/dictionary.compat, run/$(Configuration)/radius/dictionary.compatible, run/$(Configuration)/radius/dictionary.cosine, run/$(Configuration)/radius/dictionary.dante, run/$(Configuration)/radius/dictionary.dellemc, run/$(Configuration)/radius/dictionary.dhcp, run/$(Configuration)/radius/dictionary.digium, run/$(Configuration)/radius/dictionary.dlink, run/$(Configuration)/radius/dictionary.dragonwave, run/$(Configuration)/radius/dictionary.efficientip, run/$(Configuration)/radius/dictionary.eltex, run/$(Configuration)/radius/dictionary.epygi, run/$(Configuration)/radius/dictionary.equallogic, run/$(Configuration)/radius/dictionary.ericsson, run/$(Configuration)/radius/dictionary.ericsson.ab, run/$(Configuration)/radius/dictionary.ericsson.packet.core.networks, run/$(Configuration)/radius/dictionary.extreme, run/$(Configuration)/radius/dictionary.f5, run/$(Configuration)/radius/dictionary.fdxtended, run/$(Configuration)/radius/dictionary.fortinet, run/$(Configuration)/radius/dictionary.foundry, run/$(Configuration)/radius/dictionary.freedhcp, run/$(Configuration)/radius/dictionary.freeradius, run/$(Configuration)/radius/dictionary.freeradius.internal, run/$(Configuration)/radius/dictionary.freeswitch, run/$(Configuration)/radius/dictionary.gandalf, run/$(Configuration)/radius/dictionary.garderos, run/$(Configuration)/radius/dictionary.gemtek, run/$(Configuration)/radius/dictionary.h3c, run/$(Configuration)/radius/dictionary.hp, run/$(Configuration)/radius/dictionary.huawei, run/$(Configuration)/radius/dictionary.iana, run/$(Configuration)/radius/dictionary.iea, run/$(Configuration)/radius/dictionary.infoblox, run/$(Configuration)/radius/dictionary.infonet, run/$(Configuration)/radius/dictionary.ipunplugged, run/$(Configuration)/radius/dictionary.issanni, run/$(Configuration)/radius/dictionary.itk, run/$(Configuration)/radius/dictionary.jradius, run/$(Configuration)/radius/dictionary.juniper, run/$(Configuration)/radius/dictionary.karlnet, run/$(Configuration)/radius/dictionary.kineto, run/$(Configuration)/radius/dictionary.lancom, run/$(Configuration)/radius/dictionary.livingston, run/$(Configuration)/radius/dictionary.localweb, run/$(Configuration)/radius/dictionary.lucent, run/$(Configuration)/radius/dictionary.manzara, run/$(Configuration)/radius/dictionary.meinberg, run/$(Configuration)/radius/dictionary.merit, run/$(Configuration)/radius/dictionary.meru, run/$(Configuration)/radius/dictionary.microsemi, run/$(Configuration)/radius/dictionary.microsoft, run/$(Configuration)/radius/dictionary.mikrotik, run/$(Configuration)/radius/dictionary.motorola, run/$(Configuration)/radius/dictionary.motorola.wimax, run/$(Configuration)/radius/dictionary.navini, run/$(Configuration)/radius/dictionary.netscreen, run/$(Configuration)/radius/dictionary.networkphysics, run/$(Configuration)/radius/dictionary.nexans, run/$(Configuration)/radius/dictionary.nokia, run/$(Configuration)/radius/dictionary.nokia.conflict, run/$(Configuration)/radius/dictionary.nomadix, run/$(Configuration)/radius/dictionary.nortel, run/$(Configuration)/radius/dictionary.ntua, run/$(Configuration)/radius/dictionary.openser, run/$(Configuration)/radius/dictionary.packeteer, run/$(Configuration)/radius/dictionary.paloalto, run/$(Configuration)/radius/dictionary.patton, run/$(Configuration)/radius/dictionary.perle, run/$(Configuration)/radius/dictionary.propel, run/$(Configuration)/radius/dictionary.prosoft, run/$(Configuration)/radius/dictionary.proxim, run/$(Configuration)/radius/dictionary.purewave, run/$(Configuration)/radius/dictionary.quiconnect, run/$(Configuration)/radius/dictionary.quintum, run/$(Configuration)/radius/dictionary.redcreek, run/$(Configuration)/radius/dictionary.rfc2865, run/$(Configuration)/radius/dictionary.rfc2866, run/$(Configuration)/radius/dictionary.rfc2867, run/$(Configuration)/radius/dictionary.rfc2868, run/$(Configuration)/radius/dictionary.rfc2869, run/$(Configuration)/radius/dictionary.rfc3162, run/$(Configuration)/radius/dictionary.rfc3576, run/$(Configuration)/radius/dictionary.rfc3580, run/$(Configuration)/radius/dictionary.rfc4072, run/$(Configuration)/radius/dictionary.rfc4372, run/$(Configuration)/radius/dictionary.rfc4603, run/$(Configuration)/radius/dictionary.rfc4675, run/$(Configuration)/radius/dictionary.rfc4679, run/$(Configuration)/radius/dictionary.rfc4818, run/$(Configuration)/radius/dictionary.rfc4849, run/$(Configuration)/radius/dictionary.rfc5090, run/$(Configuration)/radius/dictionary.rfc5176, run/$(Configuration)/radius/dictionary.rfc5447, run/$(Configuration)/radius/dictionary.rfc5580, run/$(Configuration)/radius/dictionary.rfc5607, run/$(Configuration)/radius/dictionary.rfc5904, run/$(Configuration)/radius/dictionary.rfc6519, run/$(Configuration)/radius/dictionary.rfc6572, run/$(Configuration)/radius/dictionary.rfc6677, run/$(Configuration)/radius/dictionary.rfc6911, run/$(Configuration)/radius/dictionary.rfc6929, run/$(Configuration)/radius/dictionary.rfc6930, run/$(Configuration)/radius/dictionary.rfc7055, run/$(Configuration)/radius/dictionary.rfc7155, run/$(Configuration)/radius/dictionary.rfc7268, run/$(Configuration)/radius/dictionary.rfc7499, run/$(Configuration)/radius/dictionary.rfc7930, run/$(Configuration)/radius/dictionary.riverbed, run/$(Configuration)/radius/dictionary.riverstone, run/$(Configuration)/radius/dictionary.roaringpenguin, run/$(Configuration)/radius/dictionary.ruckus, run/$(Configuration)/radius/dictionary.ruggedcom, run/$(Configuration)/radius/dictionary.sangoma, run/$(Configuration)/radius/dictionary.sg, run/$(Configuration)/radius/dictionary.shasta, run/$(Configuration)/radius/dictionary.shiva, run/$(Configuration)/radius/dictionary.siemens, run/$(Configuration)/radius/dictionary.slipstream, run/$(Configuration)/radius/dictionary.sofaware, run/$(Configuration)/radius/dictionary.sonicwall, run/$(Configuration)/radius/dictionary.springtide, run/$(Configuration)/radius/dictionary.starent, run/$(Configuration)/radius/dictionary.starent.vsa1, run/$(Configuration)/radius/dictionary.surfnet, run/$(Configuration)/radius/dictionary.symbol, run/$(Configuration)/radius/dictionary.t_systems_nova, run/$(Configuration)/radius/dictionary.telebit, run/$(Configuration)/radius/dictionary.telkom, run/$(Configuration)/radius/dictionary.terena, run/$(Configuration)/radius/dictionary.trapeze, run/$(Configuration)/radius/dictionary.travelping, run/$(Configuration)/radius/dictionary.tropos, run/$(Configuration)/radius/dictionary.ukerna, run/$(Configuration)/radius/dictionary.unisphere, run/$(Configuration)/radius/dictionary.unix, run/$(Configuration)/radius/dictionary.usr, run/$(Configuration)/radius/dictionary.utstarcom, run/$(Configuration)/radius/dictionary.valemount, run/$(Configuration)/radius/dictionary.verizon, run/$(Configuration)/radius/dictionary.versanet, run/$(Configuration)/radius/dictionary.vqp, run/$(Configuration)/radius/dictionary.walabi, run/$(Configuration)/radius/dictionary.waverider, run/$(Configuration)/radius/dictionary.wichorus, run/$(Configuration)/radius/dictionary.wimax, run/$(Configuration)/radius/dictionary.wimax.alvarion, run/$(Configuration)/radius/dictionary.wimax.wichorus, run/$(Configuration)/radius/dictionary.wispr, run/$(Configuration)/radius/dictionary.xedia, run/$(Configuration)/radius/dictionary.xylan, run/$(Configuration)/radius/dictionary.yubico, run/$(Configuration)/radius/dictionary.zeus, run/$(Configuration)/radius/dictionary.zte, run/$(Configuration)/radius/dictionary.zyxel</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">setlocal
cd C:\Development\wireshark
if %errorlevel% neq 0 goto :cmEnd
C:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory C:/Development/wireshark/run/$(Configuration)/radius
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E copy_if_different radius/README.radius_dictionary radius/custom.includes radius/dictionary radius/dictionary.3com radius/dictionary.3gpp radius/dictionary.3gpp2 radius/dictionary.acc radius/dictionary.acme radius/dictionary.actelis radius/dictionary.aerohive radius/dictionary.airespace radius/dictionary.alcatel radius/dictionary.alcatel-lucent.aaa radius/dictionary.alcatel.esam radius/dictionary.alcatel.sr radius/dictionary.alteon radius/dictionary.altiga radius/dictionary.alvarion radius/dictionary.alvarion.wimax.v2_2 radius/dictionary.apc radius/dictionary.aptis radius/dictionary.arbor radius/dictionary.aruba radius/dictionary.ascend radius/dictionary.asn radius/dictionary.audiocodes radius/dictionary.avaya radius/dictionary.azaire radius/dictionary.bay radius/dictionary.bintec radius/dictionary.bluecoat radius/dictionary.bristol radius/dictionary.broadsoft radius/dictionary.brocade radius/dictionary.bskyb radius/dictionary.bt radius/dictionary.cablelabs radius/dictionary.cabletron radius/dictionary.camiant radius/dictionary.chillispot radius/dictionary.cisco radius/dictionary.cisco.asa radius/dictionary.cisco.bbsm radius/dictionary.cisco.vpn3000 radius/dictionary.cisco.vpn5000 radius/dictionary.citrix radius/dictionary.clavister radius/dictionary.cnergee radius/dictionary.colubris radius/dictionary.columbia_university radius/dictionary.compat radius/dictionary.compatible radius/dictionary.cosine radius/dictionary.dante radius/dictionary.dellemc radius/dictionary.dhcp radius/dictionary.digium radius/dictionary.dlink radius/dictionary.dragonwave radius/dictionary.efficientip radius/dictionary.eltex radius/dictionary.epygi radius/dictionary.equallogic radius/dictionary.ericsson radius/dictionary.ericsson.ab radius/dictionary.ericsson.packet.core.networks radius/dictionary.extreme radius/dictionary.f5 radius/dictionary.fdxtended radius/dictionary.fortinet radius/dictionary.foundry radius/dictionary.freedhcp radius/dictionary.freeradius radius/dictionary.freeradius.internal radius/dictionary.freeswitch radius/dictionary.gandalf radius/dictionary.garderos radius/dictionary.gemtek radius/dictionary.h3c radius/dictionary.hp radius/dictionary.huawei radius/dictionary.iana radius/dictionary.iea radius/dictionary.infoblox radius/dictionary.infonet radius/dictionary.ipunplugged radius/dictionary.issanni radius/dictionary.itk radius/dictionary.jradius radius/dictionary.juniper radius/dictionary.karlnet radius/dictionary.kineto radius/dictionary.lancom radius/dictionary.livingston radius/dictionary.localweb radius/dictionary.lucent radius/dictionary.manzara radius/dictionary.meinberg radius/dictionary.merit radius/dictionary.meru radius/dictionary.microsemi radius/dictionary.microsoft radius/dictionary.mikrotik radius/dictionary.motorola radius/dictionary.motorola.wimax radius/dictionary.navini radius/dictionary.netscreen radius/dictionary.networkphysics radius/dictionary.nexans radius/dictionary.nokia radius/dictionary.nokia.conflict radius/dictionary.nomadix radius/dictionary.nortel radius/dictionary.ntua radius/dictionary.openser radius/dictionary.packeteer radius/dictionary.paloalto radius/dictionary.patton radius/dictionary.perle radius/dictionary.propel radius/dictionary.prosoft radius/dictionary.proxim radius/dictionary.purewave radius/dictionary.quiconnect radius/dictionary.quintum radius/dictionary.redcreek radius/dictionary.rfc2865 radius/dictionary.rfc2866 radius/dictionary.rfc2867 radius/dictionary.rfc2868 radius/dictionary.rfc2869 radius/dictionary.rfc3162 radius/dictionary.rfc3576 radius/dictionary.rfc3580 radius/dictionary.rfc4072 radius/dictionary.rfc4372 radius/dictionary.rfc4603 radius/dictionary.rfc4675 radius/dictionary.rfc4679 radius/dictionary.rfc4818 radius/dictionary.rfc4849 radius/dictionary.rfc5090 radius/dictionary.rfc5176 radius/dictionary.rfc5447 radius/dictionary.rfc5580 radius/dictionary.rfc5607 radius/dictionary.rfc5904 radius/dictionary.rfc6519 radius/dictionary.rfc6572 radius/dictionary.rfc6677 radius/dictionary.rfc6911 radius/dictionary.rfc6929 radius/dictionary.rfc6930 radius/dictionary.rfc7055 radius/dictionary.rfc7155 radius/dictionary.rfc7268 radius/dictionary.rfc7499 radius/dictionary.rfc7930 radius/dictionary.riverbed radius/dictionary.riverstone radius/dictionary.roaringpenguin radius/dictionary.ruckus radius/dictionary.ruggedcom radius/dictionary.sangoma radius/dictionary.sg radius/dictionary.shasta radius/dictionary.shiva radius/dictionary.siemens radius/dictionary.slipstream radius/dictionary.sofaware radius/dictionary.sonicwall radius/dictionary.springtide radius/dictionary.starent radius/dictionary.starent.vsa1 radius/dictionary.surfnet radius/dictionary.symbol radius/dictionary.t_systems_nova radius/dictionary.telebit radius/dictionary.telkom radius/dictionary.terena radius/dictionary.trapeze radius/dictionary.travelping radius/dictionary.tropos radius/dictionary.ukerna radius/dictionary.unisphere radius/dictionary.unix radius/dictionary.usr radius/dictionary.utstarcom radius/dictionary.valemount radius/dictionary.verizon radius/dictionary.versanet radius/dictionary.vqp radius/dictionary.walabi radius/dictionary.waverider radius/dictionary.wichorus radius/dictionary.wimax radius/dictionary.wimax.alvarion radius/dictionary.wimax.wichorus radius/dictionary.wispr radius/dictionary.xedia radius/dictionary.xylan radius/dictionary.yubico radius/dictionary.zeus radius/dictionary.zte radius/dictionary.zyxel C:/Development/wireshark/run/$(Configuration)/radius
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">C:/Development/wireshark/CMakeFiles/8944e641a9b55c429b37c9939e31cf62/README.radius_dictionary.rule;C:\Development\wireshark\radius\README.radius_dictionary;C:\Development\wireshark\radius\custom.includes;C:\Development\wireshark\radius\dictionary;C:\Development\wireshark\radius\dictionary.3com;C:\Development\wireshark\radius\dictionary.3gpp;C:\Development\wireshark\radius\dictionary.3gpp2;C:\Development\wireshark\radius\dictionary.acc;C:\Development\wireshark\radius\dictionary.acme;C:\Development\wireshark\radius\dictionary.actelis;C:\Development\wireshark\radius\dictionary.aerohive;C:\Development\wireshark\radius\dictionary.airespace;C:\Development\wireshark\radius\dictionary.alcatel;C:\Development\wireshark\radius\dictionary.alcatel-lucent.aaa;C:\Development\wireshark\radius\dictionary.alcatel.esam;C:\Development\wireshark\radius\dictionary.alcatel.sr;C:\Development\wireshark\radius\dictionary.alteon;C:\Development\wireshark\radius\dictionary.altiga;C:\Development\wireshark\radius\dictionary.alvarion;C:\Development\wireshark\radius\dictionary.alvarion.wimax.v2_2;C:\Development\wireshark\radius\dictionary.apc;C:\Development\wireshark\radius\dictionary.aptis;C:\Development\wireshark\radius\dictionary.arbor;C:\Development\wireshark\radius\dictionary.aruba;C:\Development\wireshark\radius\dictionary.ascend;C:\Development\wireshark\radius\dictionary.asn;C:\Development\wireshark\radius\dictionary.audiocodes;C:\Development\wireshark\radius\dictionary.avaya;C:\Development\wireshark\radius\dictionary.azaire;C:\Development\wireshark\radius\dictionary.bay;C:\Development\wireshark\radius\dictionary.bintec;C:\Development\wireshark\radius\dictionary.bluecoat;C:\Development\wireshark\radius\dictionary.bristol;C:\Development\wireshark\radius\dictionary.broadsoft;C:\Development\wireshark\radius\dictionary.brocade;C:\Development\wireshark\radius\dictionary.bskyb;C:\Development\wireshark\radius\dictionary.bt;C:\Development\wireshark\radius\dictionary.cablelabs;C:\Development\wireshark\radius\dictionary.cabletron;C:\Development\wireshark\radius\dictionary.camiant;C:\Development\wireshark\radius\dictionary.chillispot;C:\Development\wireshark\radius\dictionary.cisco;C:\Development\wireshark\radius\dictionary.cisco.asa;C:\Development\wireshark\radius\dictionary.cisco.bbsm;C:\Development\wireshark\radius\dictionary.cisco.vpn3000;C:\Development\wireshark\radius\dictionary.cisco.vpn5000;C:\Development\wireshark\radius\dictionary.citrix;C:\Development\wireshark\radius\dictionary.clavister;C:\Development\wireshark\radius\dictionary.cnergee;C:\Development\wireshark\radius\dictionary.colubris;C:\Development\wireshark\radius\dictionary.columbia_university;C:\Development\wireshark\radius\dictionary.compat;C:\Development\wireshark\radius\dictionary.compatible;C:\Development\wireshark\radius\dictionary.cosine;C:\Development\wireshark\radius\dictionary.dante;C:\Development\wireshark\radius\dictionary.dellemc;C:\Development\wireshark\radius\dictionary.dhcp;C:\Development\wireshark\radius\dictionary.digium;C:\Development\wireshark\radius\dictionary.dlink;C:\Development\wireshark\radius\dictionary.dragonwave;C:\Development\wireshark\radius\dictionary.efficientip;C:\Development\wireshark\radius\dictionary.eltex;C:\Development\wireshark\radius\dictionary.epygi;C:\Development\wireshark\radius\dictionary.equallogic;C:\Development\wireshark\radius\dictionary.ericsson;C:\Development\wireshark\radius\dictionary.ericsson.ab;C:\Development\wireshark\radius\dictionary.ericsson.packet.core.networks;C:\Development\wireshark\radius\dictionary.extreme;C:\Development\wireshark\radius\dictionary.f5;C:\Development\wireshark\radius\dictionary.fdxtended;C:\Development\wireshark\radius\dictionary.fortinet;C:\Development\wireshark\radius\dictionary.foundry;C:\Development\wireshark\radius\dictionary.freedhcp;C:\Development\wireshark\radius\dictionary.freeradius;C:\Development\wireshark\radius\dictionary.freeradius.internal;C:\Development\wireshark\radius\dictionary.freeswitch;C:\Development\wireshark\radius\dictionary.gandalf;C:\Development\wireshark\radius\dictionary.garderos;C:\Development\wireshark\radius\dictionary.gemtek;C:\Development\wireshark\radius\dictionary.h3c;C:\Development\wireshark\radius\dictionary.hp;C:\Development\wireshark\radius\dictionary.huawei;C:\Development\wireshark\radius\dictionary.iana;C:\Development\wireshark\radius\dictionary.iea;C:\Development\wireshark\radius\dictionary.infoblox;C:\Development\wireshark\radius\dictionary.infonet;C:\Development\wireshark\radius\dictionary.ipunplugged;C:\Development\wireshark\radius\dictionary.issanni;C:\Development\wireshark\radius\dictionary.itk;C:\Development\wireshark\radius\dictionary.jradius;C:\Development\wireshark\radius\dictionary.juniper;C:\Development\wireshark\radius\dictionary.karlnet;C:\Development\wireshark\radius\dictionary.kineto;C:\Development\wireshark\radius\dictionary.lancom;C:\Development\wireshark\radius\dictionary.livingston;C:\Development\wireshark\radius\dictionary.localweb;C:\Development\wireshark\radius\dictionary.lucent;C:\Development\wireshark\radius\dictionary.manzara;C:\Development\wireshark\radius\dictionary.meinberg;C:\Development\wireshark\radius\dictionary.merit;C:\Development\wireshark\radius\dictionary.meru;C:\Development\wireshark\radius\dictionary.microsemi;C:\Development\wireshark\radius\dictionary.microsoft;C:\Development\wireshark\radius\dictionary.mikrotik;C:\Development\wireshark\radius\dictionary.motorola;C:\Development\wireshark\radius\dictionary.motorola.wimax;C:\Development\wireshark\radius\dictionary.navini;C:\Development\wireshark\radius\dictionary.netscreen;C:\Development\wireshark\radius\dictionary.networkphysics;C:\Development\wireshark\radius\dictionary.nexans;C:\Development\wireshark\radius\dictionary.nokia;C:\Development\wireshark\radius\dictionary.nokia.conflict;C:\Development\wireshark\radius\dictionary.nomadix;C:\Development\wireshark\radius\dictionary.nortel;C:\Development\wireshark\radius\dictionary.ntua;C:\Development\wireshark\radius\dictionary.openser;C:\Development\wireshark\radius\dictionary.packeteer;C:\Development\wireshark\radius\dictionary.paloalto;C:\Development\wireshark\radius\dictionary.patton;C:\Development\wireshark\radius\dictionary.perle;C:\Development\wireshark\radius\dictionary.propel;C:\Development\wireshark\radius\dictionary.prosoft;C:\Development\wireshark\radius\dictionary.proxim;C:\Development\wireshark\radius\dictionary.purewave;C:\Development\wireshark\radius\dictionary.quiconnect;C:\Development\wireshark\radius\dictionary.quintum;C:\Development\wireshark\radius\dictionary.redcreek;C:\Development\wireshark\radius\dictionary.rfc2865;C:\Development\wireshark\radius\dictionary.rfc2866;C:\Development\wireshark\radius\dictionary.rfc2867;C:\Development\wireshark\radius\dictionary.rfc2868;C:\Development\wireshark\radius\dictionary.rfc2869;C:\Development\wireshark\radius\dictionary.rfc3162;C:\Development\wireshark\radius\dictionary.rfc3576;C:\Development\wireshark\radius\dictionary.rfc3580;C:\Development\wireshark\radius\dictionary.rfc4072;C:\Development\wireshark\radius\dictionary.rfc4372;C:\Development\wireshark\radius\dictionary.rfc4603;C:\Development\wireshark\radius\dictionary.rfc4675;C:\Development\wireshark\radius\dictionary.rfc4679;C:\Development\wireshark\radius\dictionary.rfc4818;C:\Development\wireshark\radius\dictionary.rfc4849;C:\Development\wireshark\radius\dictionary.rfc5090;C:\Development\wireshark\radius\dictionary.rfc5176;C:\Development\wireshark\radius\dictionary.rfc5447;C:\Development\wireshark\radius\dictionary.rfc5580;C:\Development\wireshark\radius\dictionary.rfc5607;C:\Development\wireshark\radius\dictionary.rfc5904;C:\Development\wireshark\radius\dictionary.rfc6519;C:\Development\wireshark\radius\dictionary.rfc6572;C:\Development\wireshark\radius\dictionary.rfc6677;C:\Development\wireshark\radius\dictionary.rfc6911;C:\Development\wireshark\radius\dictionary.rfc6929;C:\Development\wireshark\radius\dictionary.rfc6930;C:\Development\wireshark\radius\dictionary.rfc7055;C:\Development\wireshark\radius\dictionary.rfc7155;C:\Development\wireshark\radius\dictionary.rfc7268;C:\Development\wireshark\radius\dictionary.rfc7499;C:\Development\wireshark\radius\dictionary.rfc7930;C:\Development\wireshark\radius\dictionary.riverbed;C:\Development\wireshark\radius\dictionary.riverstone;C:\Development\wireshark\radius\dictionary.roaringpenguin;C:\Development\wireshark\radius\dictionary.ruckus;C:\Development\wireshark\radius\dictionary.ruggedcom;C:\Development\wireshark\radius\dictionary.sangoma;C:\Development\wireshark\radius\dictionary.sg;C:\Development\wireshark\radius\dictionary.shasta;C:\Development\wireshark\radius\dictionary.shiva;C:\Development\wireshark\radius\dictionary.siemens;C:\Development\wireshark\radius\dictionary.slipstream;C:\Development\wireshark\radius\dictionary.sofaware;C:\Development\wireshark\radius\dictionary.sonicwall;C:\Development\wireshark\radius\dictionary.springtide;C:\Development\wireshark\radius\dictionary.starent;C:\Development\wireshark\radius\dictionary.starent.vsa1;C:\Development\wireshark\radius\dictionary.surfnet;C:\Development\wireshark\radius\dictionary.symbol;C:\Development\wireshark\radius\dictionary.t_systems_nova;C:\Development\wireshark\radius\dictionary.telebit;C:\Development\wireshark\radius\dictionary.telkom;C:\Development\wireshark\radius\dictionary.terena;C:\Development\wireshark\radius\dictionary.trapeze;C:\Development\wireshark\radius\dictionary.travelping;C:\Development\wireshark\radius\dictionary.tropos;C:\Development\wireshark\radius\dictionary.ukerna;C:\Development\wireshark\radius\dictionary.unisphere;C:\Development\wireshark\radius\dictionary.unix;C:\Development\wireshark\radius\dictionary.usr;C:\Development\wireshark\radius\dictionary.utstarcom;C:\Development\wireshark\radius\dictionary.valemount;C:\Development\wireshark\radius\dictionary.verizon;C:\Development\wireshark\radius\dictionary.versanet;C:\Development\wireshark\radius\dictionary.vqp;C:\Development\wireshark\radius\dictionary.walabi;C:\Development\wireshark\radius\dictionary.waverider;C:\Development\wireshark\radius\dictionary.wichorus;C:\Development\wireshark\radius\dictionary.wimax;C:\Development\wireshark\radius\dictionary.wimax.alvarion;C:\Development\wireshark\radius\dictionary.wimax.wichorus;C:\Development\wireshark\radius\dictionary.wispr;C:\Development\wireshark\radius\dictionary.xedia;C:\Development\wireshark\radius\dictionary.xylan;C:\Development\wireshark\radius\dictionary.yubico;C:\Development\wireshark\radius\dictionary.zeus;C:\Development\wireshark\radius\dictionary.zte;C:\Development\wireshark\radius\dictionary.zyxel;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">C:\Development\wireshark\run\$(Configuration)\radius\README.radius_dictionary;C:\Development\wireshark\run\$(Configuration)\radius\custom.includes;C:\Development\wireshark\run\$(Configuration)\radius\dictionary;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.3com;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.3gpp;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.3gpp2;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.acc;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.acme;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.actelis;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.aerohive;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.airespace;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.alcatel;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.alcatel-lucent.aaa;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.alcatel.esam;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.alcatel.sr;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.alteon;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.altiga;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.alvarion;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.alvarion.wimax.v2_2;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.apc;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.aptis;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.arbor;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.aruba;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.ascend;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.asn;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.audiocodes;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.avaya;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.azaire;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.bay;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.bintec;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.bluecoat;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.bristol;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.broadsoft;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.brocade;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.bskyb;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.bt;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.cablelabs;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.cabletron;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.camiant;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.chillispot;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.cisco;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.cisco.asa;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.cisco.bbsm;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.cisco.vpn3000;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.cisco.vpn5000;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.citrix;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.clavister;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.cnergee;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.colubris;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.columbia_university;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.compat;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.compatible;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.cosine;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.dante;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.dellemc;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.dhcp;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.digium;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.dlink;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.dragonwave;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.efficientip;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.eltex;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.epygi;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.equallogic;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.ericsson;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.ericsson.ab;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.ericsson.packet.core.networks;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.extreme;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.f5;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.fdxtended;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.fortinet;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.foundry;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.freedhcp;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.freeradius;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.freeradius.internal;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.freeswitch;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.gandalf;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.garderos;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.gemtek;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.h3c;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.hp;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.huawei;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.iana;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.iea;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.infoblox;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.infonet;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.ipunplugged;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.issanni;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.itk;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.jradius;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.juniper;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.karlnet;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.kineto;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.lancom;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.livingston;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.localweb;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.lucent;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.manzara;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.meinberg;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.merit;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.meru;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.microsemi;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.microsoft;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.mikrotik;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.motorola;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.motorola.wimax;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.navini;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.netscreen;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.networkphysics;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.nexans;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.nokia;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.nokia.conflict;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.nomadix;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.nortel;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.ntua;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.openser;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.packeteer;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.paloalto;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.patton;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.perle;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.propel;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.prosoft;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.proxim;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.purewave;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.quiconnect;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.quintum;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.redcreek;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc2865;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc2866;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc2867;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc2868;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc2869;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc3162;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc3576;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc3580;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc4072;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc4372;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc4603;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc4675;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc4679;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc4818;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc4849;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc5090;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc5176;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc5447;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc5580;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc5607;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc5904;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc6519;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc6572;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc6677;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc6911;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc6929;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc6930;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc7055;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc7155;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc7268;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc7499;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc7930;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.riverbed;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.riverstone;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.roaringpenguin;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.ruckus;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.ruggedcom;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.sangoma;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.sg;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.shasta;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.shiva;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.siemens;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.slipstream;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.sofaware;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.sonicwall;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.springtide;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.starent;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.starent.vsa1;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.surfnet;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.symbol;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.t_systems_nova;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.telebit;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.telkom;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.terena;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.trapeze;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.travelping;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.tropos;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.ukerna;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.unisphere;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.unix;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.usr;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.utstarcom;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.valemount;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.verizon;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.versanet;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.vqp;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.walabi;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.waverider;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.wichorus;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.wimax;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.wimax.alvarion;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.wimax.wichorus;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.wispr;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.xedia;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.xylan;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.yubico;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.zeus;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.zte;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.zyxel</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">Generating run/$(Configuration)/radius/README.radius_dictionary, run/$(Configuration)/radius/custom.includes, run/$(Configuration)/radius/dictionary, run/$(Configuration)/radius/dictionary.3com, run/$(Configuration)/radius/dictionary.3gpp, run/$(Configuration)/radius/dictionary.3gpp2, run/$(Configuration)/radius/dictionary.acc, run/$(Configuration)/radius/dictionary.acme, run/$(Configuration)/radius/dictionary.actelis, run/$(Configuration)/radius/dictionary.aerohive, run/$(Configuration)/radius/dictionary.airespace, run/$(Configuration)/radius/dictionary.alcatel, run/$(Configuration)/radius/dictionary.alcatel-lucent.aaa, run/$(Configuration)/radius/dictionary.alcatel.esam, run/$(Configuration)/radius/dictionary.alcatel.sr, run/$(Configuration)/radius/dictionary.alteon, run/$(Configuration)/radius/dictionary.altiga, run/$(Configuration)/radius/dictionary.alvarion, run/$(Configuration)/radius/dictionary.alvarion.wimax.v2_2, run/$(Configuration)/radius/dictionary.apc, run/$(Configuration)/radius/dictionary.aptis, run/$(Configuration)/radius/dictionary.arbor, run/$(Configuration)/radius/dictionary.aruba, run/$(Configuration)/radius/dictionary.ascend, run/$(Configuration)/radius/dictionary.asn, run/$(Configuration)/radius/dictionary.audiocodes, run/$(Configuration)/radius/dictionary.avaya, run/$(Configuration)/radius/dictionary.azaire, run/$(Configuration)/radius/dictionary.bay, run/$(Configuration)/radius/dictionary.bintec, run/$(Configuration)/radius/dictionary.bluecoat, run/$(Configuration)/radius/dictionary.bristol, run/$(Configuration)/radius/dictionary.broadsoft, run/$(Configuration)/radius/dictionary.brocade, run/$(Configuration)/radius/dictionary.bskyb, run/$(Configuration)/radius/dictionary.bt, run/$(Configuration)/radius/dictionary.cablelabs, run/$(Configuration)/radius/dictionary.cabletron, run/$(Configuration)/radius/dictionary.camiant, run/$(Configuration)/radius/dictionary.chillispot, run/$(Configuration)/radius/dictionary.cisco, run/$(Configuration)/radius/dictionary.cisco.asa, run/$(Configuration)/radius/dictionary.cisco.bbsm, run/$(Configuration)/radius/dictionary.cisco.vpn3000, run/$(Configuration)/radius/dictionary.cisco.vpn5000, run/$(Configuration)/radius/dictionary.citrix, run/$(Configuration)/radius/dictionary.clavister, run/$(Configuration)/radius/dictionary.cnergee, run/$(Configuration)/radius/dictionary.colubris, run/$(Configuration)/radius/dictionary.columbia_university, run/$(Configuration)/radius/dictionary.compat, run/$(Configuration)/radius/dictionary.compatible, run/$(Configuration)/radius/dictionary.cosine, run/$(Configuration)/radius/dictionary.dante, run/$(Configuration)/radius/dictionary.dellemc, run/$(Configuration)/radius/dictionary.dhcp, run/$(Configuration)/radius/dictionary.digium, run/$(Configuration)/radius/dictionary.dlink, run/$(Configuration)/radius/dictionary.dragonwave, run/$(Configuration)/radius/dictionary.efficientip, run/$(Configuration)/radius/dictionary.eltex, run/$(Configuration)/radius/dictionary.epygi, run/$(Configuration)/radius/dictionary.equallogic, run/$(Configuration)/radius/dictionary.ericsson, run/$(Configuration)/radius/dictionary.ericsson.ab, run/$(Configuration)/radius/dictionary.ericsson.packet.core.networks, run/$(Configuration)/radius/dictionary.extreme, run/$(Configuration)/radius/dictionary.f5, run/$(Configuration)/radius/dictionary.fdxtended, run/$(Configuration)/radius/dictionary.fortinet, run/$(Configuration)/radius/dictionary.foundry, run/$(Configuration)/radius/dictionary.freedhcp, run/$(Configuration)/radius/dictionary.freeradius, run/$(Configuration)/radius/dictionary.freeradius.internal, run/$(Configuration)/radius/dictionary.freeswitch, run/$(Configuration)/radius/dictionary.gandalf, run/$(Configuration)/radius/dictionary.garderos, run/$(Configuration)/radius/dictionary.gemtek, run/$(Configuration)/radius/dictionary.h3c, run/$(Configuration)/radius/dictionary.hp, run/$(Configuration)/radius/dictionary.huawei, run/$(Configuration)/radius/dictionary.iana, run/$(Configuration)/radius/dictionary.iea, run/$(Configuration)/radius/dictionary.infoblox, run/$(Configuration)/radius/dictionary.infonet, run/$(Configuration)/radius/dictionary.ipunplugged, run/$(Configuration)/radius/dictionary.issanni, run/$(Configuration)/radius/dictionary.itk, run/$(Configuration)/radius/dictionary.jradius, run/$(Configuration)/radius/dictionary.juniper, run/$(Configuration)/radius/dictionary.karlnet, run/$(Configuration)/radius/dictionary.kineto, run/$(Configuration)/radius/dictionary.lancom, run/$(Configuration)/radius/dictionary.livingston, run/$(Configuration)/radius/dictionary.localweb, run/$(Configuration)/radius/dictionary.lucent, run/$(Configuration)/radius/dictionary.manzara, run/$(Configuration)/radius/dictionary.meinberg, run/$(Configuration)/radius/dictionary.merit, run/$(Configuration)/radius/dictionary.meru, run/$(Configuration)/radius/dictionary.microsemi, run/$(Configuration)/radius/dictionary.microsoft, run/$(Configuration)/radius/dictionary.mikrotik, run/$(Configuration)/radius/dictionary.motorola, run/$(Configuration)/radius/dictionary.motorola.wimax, run/$(Configuration)/radius/dictionary.navini, run/$(Configuration)/radius/dictionary.netscreen, run/$(Configuration)/radius/dictionary.networkphysics, run/$(Configuration)/radius/dictionary.nexans, run/$(Configuration)/radius/dictionary.nokia, run/$(Configuration)/radius/dictionary.nokia.conflict, run/$(Configuration)/radius/dictionary.nomadix, run/$(Configuration)/radius/dictionary.nortel, run/$(Configuration)/radius/dictionary.ntua, run/$(Configuration)/radius/dictionary.openser, run/$(Configuration)/radius/dictionary.packeteer, run/$(Configuration)/radius/dictionary.paloalto, run/$(Configuration)/radius/dictionary.patton, run/$(Configuration)/radius/dictionary.perle, run/$(Configuration)/radius/dictionary.propel, run/$(Configuration)/radius/dictionary.prosoft, run/$(Configuration)/radius/dictionary.proxim, run/$(Configuration)/radius/dictionary.purewave, run/$(Configuration)/radius/dictionary.quiconnect, run/$(Configuration)/radius/dictionary.quintum, run/$(Configuration)/radius/dictionary.redcreek, run/$(Configuration)/radius/dictionary.rfc2865, run/$(Configuration)/radius/dictionary.rfc2866, run/$(Configuration)/radius/dictionary.rfc2867, run/$(Configuration)/radius/dictionary.rfc2868, run/$(Configuration)/radius/dictionary.rfc2869, run/$(Configuration)/radius/dictionary.rfc3162, run/$(Configuration)/radius/dictionary.rfc3576, run/$(Configuration)/radius/dictionary.rfc3580, run/$(Configuration)/radius/dictionary.rfc4072, run/$(Configuration)/radius/dictionary.rfc4372, run/$(Configuration)/radius/dictionary.rfc4603, run/$(Configuration)/radius/dictionary.rfc4675, run/$(Configuration)/radius/dictionary.rfc4679, run/$(Configuration)/radius/dictionary.rfc4818, run/$(Configuration)/radius/dictionary.rfc4849, run/$(Configuration)/radius/dictionary.rfc5090, run/$(Configuration)/radius/dictionary.rfc5176, run/$(Configuration)/radius/dictionary.rfc5447, run/$(Configuration)/radius/dictionary.rfc5580, run/$(Configuration)/radius/dictionary.rfc5607, run/$(Configuration)/radius/dictionary.rfc5904, run/$(Configuration)/radius/dictionary.rfc6519, run/$(Configuration)/radius/dictionary.rfc6572, run/$(Configuration)/radius/dictionary.rfc6677, run/$(Configuration)/radius/dictionary.rfc6911, run/$(Configuration)/radius/dictionary.rfc6929, run/$(Configuration)/radius/dictionary.rfc6930, run/$(Configuration)/radius/dictionary.rfc7055, run/$(Configuration)/radius/dictionary.rfc7155, run/$(Configuration)/radius/dictionary.rfc7268, run/$(Configuration)/radius/dictionary.rfc7499, run/$(Configuration)/radius/dictionary.rfc7930, run/$(Configuration)/radius/dictionary.riverbed, run/$(Configuration)/radius/dictionary.riverstone, run/$(Configuration)/radius/dictionary.roaringpenguin, run/$(Configuration)/radius/dictionary.ruckus, run/$(Configuration)/radius/dictionary.ruggedcom, run/$(Configuration)/radius/dictionary.sangoma, run/$(Configuration)/radius/dictionary.sg, run/$(Configuration)/radius/dictionary.shasta, run/$(Configuration)/radius/dictionary.shiva, run/$(Configuration)/radius/dictionary.siemens, run/$(Configuration)/radius/dictionary.slipstream, run/$(Configuration)/radius/dictionary.sofaware, run/$(Configuration)/radius/dictionary.sonicwall, run/$(Configuration)/radius/dictionary.springtide, run/$(Configuration)/radius/dictionary.starent, run/$(Configuration)/radius/dictionary.starent.vsa1, run/$(Configuration)/radius/dictionary.surfnet, run/$(Configuration)/radius/dictionary.symbol, run/$(Configuration)/radius/dictionary.t_systems_nova, run/$(Configuration)/radius/dictionary.telebit, run/$(Configuration)/radius/dictionary.telkom, run/$(Configuration)/radius/dictionary.terena, run/$(Configuration)/radius/dictionary.trapeze, run/$(Configuration)/radius/dictionary.travelping, run/$(Configuration)/radius/dictionary.tropos, run/$(Configuration)/radius/dictionary.ukerna, run/$(Configuration)/radius/dictionary.unisphere, run/$(Configuration)/radius/dictionary.unix, run/$(Configuration)/radius/dictionary.usr, run/$(Configuration)/radius/dictionary.utstarcom, run/$(Configuration)/radius/dictionary.valemount, run/$(Configuration)/radius/dictionary.verizon, run/$(Configuration)/radius/dictionary.versanet, run/$(Configuration)/radius/dictionary.vqp, run/$(Configuration)/radius/dictionary.walabi, run/$(Configuration)/radius/dictionary.waverider, run/$(Configuration)/radius/dictionary.wichorus, run/$(Configuration)/radius/dictionary.wimax, run/$(Configuration)/radius/dictionary.wimax.alvarion, run/$(Configuration)/radius/dictionary.wimax.wichorus, run/$(Configuration)/radius/dictionary.wispr, run/$(Configuration)/radius/dictionary.xedia, run/$(Configuration)/radius/dictionary.xylan, run/$(Configuration)/radius/dictionary.yubico, run/$(Configuration)/radius/dictionary.zeus, run/$(Configuration)/radius/dictionary.zte, run/$(Configuration)/radius/dictionary.zyxel</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">setlocal
cd C:\Development\wireshark
if %errorlevel% neq 0 goto :cmEnd
C:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory C:/Development/wireshark/run/$(Configuration)/radius
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E copy_if_different radius/README.radius_dictionary radius/custom.includes radius/dictionary radius/dictionary.3com radius/dictionary.3gpp radius/dictionary.3gpp2 radius/dictionary.acc radius/dictionary.acme radius/dictionary.actelis radius/dictionary.aerohive radius/dictionary.airespace radius/dictionary.alcatel radius/dictionary.alcatel-lucent.aaa radius/dictionary.alcatel.esam radius/dictionary.alcatel.sr radius/dictionary.alteon radius/dictionary.altiga radius/dictionary.alvarion radius/dictionary.alvarion.wimax.v2_2 radius/dictionary.apc radius/dictionary.aptis radius/dictionary.arbor radius/dictionary.aruba radius/dictionary.ascend radius/dictionary.asn radius/dictionary.audiocodes radius/dictionary.avaya radius/dictionary.azaire radius/dictionary.bay radius/dictionary.bintec radius/dictionary.bluecoat radius/dictionary.bristol radius/dictionary.broadsoft radius/dictionary.brocade radius/dictionary.bskyb radius/dictionary.bt radius/dictionary.cablelabs radius/dictionary.cabletron radius/dictionary.camiant radius/dictionary.chillispot radius/dictionary.cisco radius/dictionary.cisco.asa radius/dictionary.cisco.bbsm radius/dictionary.cisco.vpn3000 radius/dictionary.cisco.vpn5000 radius/dictionary.citrix radius/dictionary.clavister radius/dictionary.cnergee radius/dictionary.colubris radius/dictionary.columbia_university radius/dictionary.compat radius/dictionary.compatible radius/dictionary.cosine radius/dictionary.dante radius/dictionary.dellemc radius/dictionary.dhcp radius/dictionary.digium radius/dictionary.dlink radius/dictionary.dragonwave radius/dictionary.efficientip radius/dictionary.eltex radius/dictionary.epygi radius/dictionary.equallogic radius/dictionary.ericsson radius/dictionary.ericsson.ab radius/dictionary.ericsson.packet.core.networks radius/dictionary.extreme radius/dictionary.f5 radius/dictionary.fdxtended radius/dictionary.fortinet radius/dictionary.foundry radius/dictionary.freedhcp radius/dictionary.freeradius radius/dictionary.freeradius.internal radius/dictionary.freeswitch radius/dictionary.gandalf radius/dictionary.garderos radius/dictionary.gemtek radius/dictionary.h3c radius/dictionary.hp radius/dictionary.huawei radius/dictionary.iana radius/dictionary.iea radius/dictionary.infoblox radius/dictionary.infonet radius/dictionary.ipunplugged radius/dictionary.issanni radius/dictionary.itk radius/dictionary.jradius radius/dictionary.juniper radius/dictionary.karlnet radius/dictionary.kineto radius/dictionary.lancom radius/dictionary.livingston radius/dictionary.localweb radius/dictionary.lucent radius/dictionary.manzara radius/dictionary.meinberg radius/dictionary.merit radius/dictionary.meru radius/dictionary.microsemi radius/dictionary.microsoft radius/dictionary.mikrotik radius/dictionary.motorola radius/dictionary.motorola.wimax radius/dictionary.navini radius/dictionary.netscreen radius/dictionary.networkphysics radius/dictionary.nexans radius/dictionary.nokia radius/dictionary.nokia.conflict radius/dictionary.nomadix radius/dictionary.nortel radius/dictionary.ntua radius/dictionary.openser radius/dictionary.packeteer radius/dictionary.paloalto radius/dictionary.patton radius/dictionary.perle radius/dictionary.propel radius/dictionary.prosoft radius/dictionary.proxim radius/dictionary.purewave radius/dictionary.quiconnect radius/dictionary.quintum radius/dictionary.redcreek radius/dictionary.rfc2865 radius/dictionary.rfc2866 radius/dictionary.rfc2867 radius/dictionary.rfc2868 radius/dictionary.rfc2869 radius/dictionary.rfc3162 radius/dictionary.rfc3576 radius/dictionary.rfc3580 radius/dictionary.rfc4072 radius/dictionary.rfc4372 radius/dictionary.rfc4603 radius/dictionary.rfc4675 radius/dictionary.rfc4679 radius/dictionary.rfc4818 radius/dictionary.rfc4849 radius/dictionary.rfc5090 radius/dictionary.rfc5176 radius/dictionary.rfc5447 radius/dictionary.rfc5580 radius/dictionary.rfc5607 radius/dictionary.rfc5904 radius/dictionary.rfc6519 radius/dictionary.rfc6572 radius/dictionary.rfc6677 radius/dictionary.rfc6911 radius/dictionary.rfc6929 radius/dictionary.rfc6930 radius/dictionary.rfc7055 radius/dictionary.rfc7155 radius/dictionary.rfc7268 radius/dictionary.rfc7499 radius/dictionary.rfc7930 radius/dictionary.riverbed radius/dictionary.riverstone radius/dictionary.roaringpenguin radius/dictionary.ruckus radius/dictionary.ruggedcom radius/dictionary.sangoma radius/dictionary.sg radius/dictionary.shasta radius/dictionary.shiva radius/dictionary.siemens radius/dictionary.slipstream radius/dictionary.sofaware radius/dictionary.sonicwall radius/dictionary.springtide radius/dictionary.starent radius/dictionary.starent.vsa1 radius/dictionary.surfnet radius/dictionary.symbol radius/dictionary.t_systems_nova radius/dictionary.telebit radius/dictionary.telkom radius/dictionary.terena radius/dictionary.trapeze radius/dictionary.travelping radius/dictionary.tropos radius/dictionary.ukerna radius/dictionary.unisphere radius/dictionary.unix radius/dictionary.usr radius/dictionary.utstarcom radius/dictionary.valemount radius/dictionary.verizon radius/dictionary.versanet radius/dictionary.vqp radius/dictionary.walabi radius/dictionary.waverider radius/dictionary.wichorus radius/dictionary.wimax radius/dictionary.wimax.alvarion radius/dictionary.wimax.wichorus radius/dictionary.wispr radius/dictionary.xedia radius/dictionary.xylan radius/dictionary.yubico radius/dictionary.zeus radius/dictionary.zte radius/dictionary.zyxel C:/Development/wireshark/run/$(Configuration)/radius
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">C:/Development/wireshark/CMakeFiles/8944e641a9b55c429b37c9939e31cf62/README.radius_dictionary.rule;C:\Development\wireshark\radius\README.radius_dictionary;C:\Development\wireshark\radius\custom.includes;C:\Development\wireshark\radius\dictionary;C:\Development\wireshark\radius\dictionary.3com;C:\Development\wireshark\radius\dictionary.3gpp;C:\Development\wireshark\radius\dictionary.3gpp2;C:\Development\wireshark\radius\dictionary.acc;C:\Development\wireshark\radius\dictionary.acme;C:\Development\wireshark\radius\dictionary.actelis;C:\Development\wireshark\radius\dictionary.aerohive;C:\Development\wireshark\radius\dictionary.airespace;C:\Development\wireshark\radius\dictionary.alcatel;C:\Development\wireshark\radius\dictionary.alcatel-lucent.aaa;C:\Development\wireshark\radius\dictionary.alcatel.esam;C:\Development\wireshark\radius\dictionary.alcatel.sr;C:\Development\wireshark\radius\dictionary.alteon;C:\Development\wireshark\radius\dictionary.altiga;C:\Development\wireshark\radius\dictionary.alvarion;C:\Development\wireshark\radius\dictionary.alvarion.wimax.v2_2;C:\Development\wireshark\radius\dictionary.apc;C:\Development\wireshark\radius\dictionary.aptis;C:\Development\wireshark\radius\dictionary.arbor;C:\Development\wireshark\radius\dictionary.aruba;C:\Development\wireshark\radius\dictionary.ascend;C:\Development\wireshark\radius\dictionary.asn;C:\Development\wireshark\radius\dictionary.audiocodes;C:\Development\wireshark\radius\dictionary.avaya;C:\Development\wireshark\radius\dictionary.azaire;C:\Development\wireshark\radius\dictionary.bay;C:\Development\wireshark\radius\dictionary.bintec;C:\Development\wireshark\radius\dictionary.bluecoat;C:\Development\wireshark\radius\dictionary.bristol;C:\Development\wireshark\radius\dictionary.broadsoft;C:\Development\wireshark\radius\dictionary.brocade;C:\Development\wireshark\radius\dictionary.bskyb;C:\Development\wireshark\radius\dictionary.bt;C:\Development\wireshark\radius\dictionary.cablelabs;C:\Development\wireshark\radius\dictionary.cabletron;C:\Development\wireshark\radius\dictionary.camiant;C:\Development\wireshark\radius\dictionary.chillispot;C:\Development\wireshark\radius\dictionary.cisco;C:\Development\wireshark\radius\dictionary.cisco.asa;C:\Development\wireshark\radius\dictionary.cisco.bbsm;C:\Development\wireshark\radius\dictionary.cisco.vpn3000;C:\Development\wireshark\radius\dictionary.cisco.vpn5000;C:\Development\wireshark\radius\dictionary.citrix;C:\Development\wireshark\radius\dictionary.clavister;C:\Development\wireshark\radius\dictionary.cnergee;C:\Development\wireshark\radius\dictionary.colubris;C:\Development\wireshark\radius\dictionary.columbia_university;C:\Development\wireshark\radius\dictionary.compat;C:\Development\wireshark\radius\dictionary.compatible;C:\Development\wireshark\radius\dictionary.cosine;C:\Development\wireshark\radius\dictionary.dante;C:\Development\wireshark\radius\dictionary.dellemc;C:\Development\wireshark\radius\dictionary.dhcp;C:\Development\wireshark\radius\dictionary.digium;C:\Development\wireshark\radius\dictionary.dlink;C:\Development\wireshark\radius\dictionary.dragonwave;C:\Development\wireshark\radius\dictionary.efficientip;C:\Development\wireshark\radius\dictionary.eltex;C:\Development\wireshark\radius\dictionary.epygi;C:\Development\wireshark\radius\dictionary.equallogic;C:\Development\wireshark\radius\dictionary.ericsson;C:\Development\wireshark\radius\dictionary.ericsson.ab;C:\Development\wireshark\radius\dictionary.ericsson.packet.core.networks;C:\Development\wireshark\radius\dictionary.extreme;C:\Development\wireshark\radius\dictionary.f5;C:\Development\wireshark\radius\dictionary.fdxtended;C:\Development\wireshark\radius\dictionary.fortinet;C:\Development\wireshark\radius\dictionary.foundry;C:\Development\wireshark\radius\dictionary.freedhcp;C:\Development\wireshark\radius\dictionary.freeradius;C:\Development\wireshark\radius\dictionary.freeradius.internal;C:\Development\wireshark\radius\dictionary.freeswitch;C:\Development\wireshark\radius\dictionary.gandalf;C:\Development\wireshark\radius\dictionary.garderos;C:\Development\wireshark\radius\dictionary.gemtek;C:\Development\wireshark\radius\dictionary.h3c;C:\Development\wireshark\radius\dictionary.hp;C:\Development\wireshark\radius\dictionary.huawei;C:\Development\wireshark\radius\dictionary.iana;C:\Development\wireshark\radius\dictionary.iea;C:\Development\wireshark\radius\dictionary.infoblox;C:\Development\wireshark\radius\dictionary.infonet;C:\Development\wireshark\radius\dictionary.ipunplugged;C:\Development\wireshark\radius\dictionary.issanni;C:\Development\wireshark\radius\dictionary.itk;C:\Development\wireshark\radius\dictionary.jradius;C:\Development\wireshark\radius\dictionary.juniper;C:\Development\wireshark\radius\dictionary.karlnet;C:\Development\wireshark\radius\dictionary.kineto;C:\Development\wireshark\radius\dictionary.lancom;C:\Development\wireshark\radius\dictionary.livingston;C:\Development\wireshark\radius\dictionary.localweb;C:\Development\wireshark\radius\dictionary.lucent;C:\Development\wireshark\radius\dictionary.manzara;C:\Development\wireshark\radius\dictionary.meinberg;C:\Development\wireshark\radius\dictionary.merit;C:\Development\wireshark\radius\dictionary.meru;C:\Development\wireshark\radius\dictionary.microsemi;C:\Development\wireshark\radius\dictionary.microsoft;C:\Development\wireshark\radius\dictionary.mikrotik;C:\Development\wireshark\radius\dictionary.motorola;C:\Development\wireshark\radius\dictionary.motorola.wimax;C:\Development\wireshark\radius\dictionary.navini;C:\Development\wireshark\radius\dictionary.netscreen;C:\Development\wireshark\radius\dictionary.networkphysics;C:\Development\wireshark\radius\dictionary.nexans;C:\Development\wireshark\radius\dictionary.nokia;C:\Development\wireshark\radius\dictionary.nokia.conflict;C:\Development\wireshark\radius\dictionary.nomadix;C:\Development\wireshark\radius\dictionary.nortel;C:\Development\wireshark\radius\dictionary.ntua;C:\Development\wireshark\radius\dictionary.openser;C:\Development\wireshark\radius\dictionary.packeteer;C:\Development\wireshark\radius\dictionary.paloalto;C:\Development\wireshark\radius\dictionary.patton;C:\Development\wireshark\radius\dictionary.perle;C:\Development\wireshark\radius\dictionary.propel;C:\Development\wireshark\radius\dictionary.prosoft;C:\Development\wireshark\radius\dictionary.proxim;C:\Development\wireshark\radius\dictionary.purewave;C:\Development\wireshark\radius\dictionary.quiconnect;C:\Development\wireshark\radius\dictionary.quintum;C:\Development\wireshark\radius\dictionary.redcreek;C:\Development\wireshark\radius\dictionary.rfc2865;C:\Development\wireshark\radius\dictionary.rfc2866;C:\Development\wireshark\radius\dictionary.rfc2867;C:\Development\wireshark\radius\dictionary.rfc2868;C:\Development\wireshark\radius\dictionary.rfc2869;C:\Development\wireshark\radius\dictionary.rfc3162;C:\Development\wireshark\radius\dictionary.rfc3576;C:\Development\wireshark\radius\dictionary.rfc3580;C:\Development\wireshark\radius\dictionary.rfc4072;C:\Development\wireshark\radius\dictionary.rfc4372;C:\Development\wireshark\radius\dictionary.rfc4603;C:\Development\wireshark\radius\dictionary.rfc4675;C:\Development\wireshark\radius\dictionary.rfc4679;C:\Development\wireshark\radius\dictionary.rfc4818;C:\Development\wireshark\radius\dictionary.rfc4849;C:\Development\wireshark\radius\dictionary.rfc5090;C:\Development\wireshark\radius\dictionary.rfc5176;C:\Development\wireshark\radius\dictionary.rfc5447;C:\Development\wireshark\radius\dictionary.rfc5580;C:\Development\wireshark\radius\dictionary.rfc5607;C:\Development\wireshark\radius\dictionary.rfc5904;C:\Development\wireshark\radius\dictionary.rfc6519;C:\Development\wireshark\radius\dictionary.rfc6572;C:\Development\wireshark\radius\dictionary.rfc6677;C:\Development\wireshark\radius\dictionary.rfc6911;C:\Development\wireshark\radius\dictionary.rfc6929;C:\Development\wireshark\radius\dictionary.rfc6930;C:\Development\wireshark\radius\dictionary.rfc7055;C:\Development\wireshark\radius\dictionary.rfc7155;C:\Development\wireshark\radius\dictionary.rfc7268;C:\Development\wireshark\radius\dictionary.rfc7499;C:\Development\wireshark\radius\dictionary.rfc7930;C:\Development\wireshark\radius\dictionary.riverbed;C:\Development\wireshark\radius\dictionary.riverstone;C:\Development\wireshark\radius\dictionary.roaringpenguin;C:\Development\wireshark\radius\dictionary.ruckus;C:\Development\wireshark\radius\dictionary.ruggedcom;C:\Development\wireshark\radius\dictionary.sangoma;C:\Development\wireshark\radius\dictionary.sg;C:\Development\wireshark\radius\dictionary.shasta;C:\Development\wireshark\radius\dictionary.shiva;C:\Development\wireshark\radius\dictionary.siemens;C:\Development\wireshark\radius\dictionary.slipstream;C:\Development\wireshark\radius\dictionary.sofaware;C:\Development\wireshark\radius\dictionary.sonicwall;C:\Development\wireshark\radius\dictionary.springtide;C:\Development\wireshark\radius\dictionary.starent;C:\Development\wireshark\radius\dictionary.starent.vsa1;C:\Development\wireshark\radius\dictionary.surfnet;C:\Development\wireshark\radius\dictionary.symbol;C:\Development\wireshark\radius\dictionary.t_systems_nova;C:\Development\wireshark\radius\dictionary.telebit;C:\Development\wireshark\radius\dictionary.telkom;C:\Development\wireshark\radius\dictionary.terena;C:\Development\wireshark\radius\dictionary.trapeze;C:\Development\wireshark\radius\dictionary.travelping;C:\Development\wireshark\radius\dictionary.tropos;C:\Development\wireshark\radius\dictionary.ukerna;C:\Development\wireshark\radius\dictionary.unisphere;C:\Development\wireshark\radius\dictionary.unix;C:\Development\wireshark\radius\dictionary.usr;C:\Development\wireshark\radius\dictionary.utstarcom;C:\Development\wireshark\radius\dictionary.valemount;C:\Development\wireshark\radius\dictionary.verizon;C:\Development\wireshark\radius\dictionary.versanet;C:\Development\wireshark\radius\dictionary.vqp;C:\Development\wireshark\radius\dictionary.walabi;C:\Development\wireshark\radius\dictionary.waverider;C:\Development\wireshark\radius\dictionary.wichorus;C:\Development\wireshark\radius\dictionary.wimax;C:\Development\wireshark\radius\dictionary.wimax.alvarion;C:\Development\wireshark\radius\dictionary.wimax.wichorus;C:\Development\wireshark\radius\dictionary.wispr;C:\Development\wireshark\radius\dictionary.xedia;C:\Development\wireshark\radius\dictionary.xylan;C:\Development\wireshark\radius\dictionary.yubico;C:\Development\wireshark\radius\dictionary.zeus;C:\Development\wireshark\radius\dictionary.zte;C:\Development\wireshark\radius\dictionary.zyxel;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">C:\Development\wireshark\run\$(Configuration)\radius\README.radius_dictionary;C:\Development\wireshark\run\$(Configuration)\radius\custom.includes;C:\Development\wireshark\run\$(Configuration)\radius\dictionary;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.3com;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.3gpp;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.3gpp2;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.acc;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.acme;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.actelis;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.aerohive;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.airespace;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.alcatel;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.alcatel-lucent.aaa;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.alcatel.esam;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.alcatel.sr;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.alteon;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.altiga;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.alvarion;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.alvarion.wimax.v2_2;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.apc;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.aptis;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.arbor;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.aruba;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.ascend;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.asn;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.audiocodes;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.avaya;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.azaire;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.bay;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.bintec;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.bluecoat;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.bristol;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.broadsoft;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.brocade;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.bskyb;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.bt;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.cablelabs;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.cabletron;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.camiant;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.chillispot;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.cisco;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.cisco.asa;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.cisco.bbsm;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.cisco.vpn3000;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.cisco.vpn5000;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.citrix;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.clavister;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.cnergee;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.colubris;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.columbia_university;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.compat;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.compatible;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.cosine;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.dante;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.dellemc;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.dhcp;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.digium;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.dlink;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.dragonwave;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.efficientip;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.eltex;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.epygi;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.equallogic;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.ericsson;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.ericsson.ab;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.ericsson.packet.core.networks;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.extreme;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.f5;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.fdxtended;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.fortinet;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.foundry;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.freedhcp;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.freeradius;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.freeradius.internal;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.freeswitch;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.gandalf;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.garderos;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.gemtek;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.h3c;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.hp;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.huawei;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.iana;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.iea;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.infoblox;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.infonet;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.ipunplugged;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.issanni;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.itk;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.jradius;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.juniper;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.karlnet;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.kineto;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.lancom;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.livingston;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.localweb;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.lucent;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.manzara;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.meinberg;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.merit;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.meru;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.microsemi;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.microsoft;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.mikrotik;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.motorola;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.motorola.wimax;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.navini;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.netscreen;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.networkphysics;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.nexans;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.nokia;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.nokia.conflict;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.nomadix;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.nortel;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.ntua;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.openser;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.packeteer;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.paloalto;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.patton;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.perle;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.propel;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.prosoft;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.proxim;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.purewave;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.quiconnect;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.quintum;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.redcreek;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc2865;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc2866;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc2867;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc2868;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc2869;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc3162;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc3576;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc3580;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc4072;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc4372;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc4603;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc4675;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc4679;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc4818;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc4849;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc5090;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc5176;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc5447;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc5580;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc5607;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc5904;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc6519;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc6572;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc6677;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc6911;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc6929;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc6930;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc7055;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc7155;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc7268;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc7499;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc7930;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.riverbed;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.riverstone;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.roaringpenguin;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.ruckus;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.ruggedcom;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.sangoma;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.sg;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.shasta;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.shiva;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.siemens;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.slipstream;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.sofaware;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.sonicwall;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.springtide;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.starent;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.starent.vsa1;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.surfnet;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.symbol;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.t_systems_nova;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.telebit;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.telkom;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.terena;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.trapeze;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.travelping;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.tropos;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.ukerna;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.unisphere;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.unix;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.usr;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.utstarcom;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.valemount;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.verizon;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.versanet;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.vqp;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.walabi;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.waverider;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.wichorus;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.wimax;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.wimax.alvarion;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.wimax.wichorus;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.wispr;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.xedia;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.xylan;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.yubico;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.zeus;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.zte;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.zyxel</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="C:\Development\wireshark\CMakeFiles\aef72bec5ae5b0bd15670b636fba34d1\colorfilters.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">Generating run/$(Configuration)/profiles/Bluetooth/colorfilters, run/$(Configuration)/profiles/Bluetooth/preferences, run/$(Configuration)/profiles/Classic/colorfilters, run/$(Configuration)/profiles/No Reassembly/preferences</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E copy_directory C:/Development/wireshark/profiles C:/Development/wireshark/run/$(Configuration)/profiles
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">C:/Development/wireshark/CMakeFiles/aef72bec5ae5b0bd15670b636fba34d1/colorfilters.rule;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">C:\Development\wireshark\run\$(Configuration)\profiles\Bluetooth\colorfilters;C:\Development\wireshark\run\$(Configuration)\profiles\Bluetooth\preferences;C:\Development\wireshark\run\$(Configuration)\profiles\Classic\colorfilters;C:\Development\wireshark\run\$(Configuration)\profiles\No Reassembly\preferences</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">Generating run/$(Configuration)/profiles/Bluetooth/colorfilters, run/$(Configuration)/profiles/Bluetooth/preferences, run/$(Configuration)/profiles/Classic/colorfilters, run/$(Configuration)/profiles/No Reassembly/preferences</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E copy_directory C:/Development/wireshark/profiles C:/Development/wireshark/run/$(Configuration)/profiles
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">C:/Development/wireshark/CMakeFiles/aef72bec5ae5b0bd15670b636fba34d1/colorfilters.rule;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">C:\Development\wireshark\run\$(Configuration)\profiles\Bluetooth\colorfilters;C:\Development\wireshark\run\$(Configuration)\profiles\Bluetooth\preferences;C:\Development\wireshark\run\$(Configuration)\profiles\Classic\colorfilters;C:\Development\wireshark\run\$(Configuration)\profiles\No Reassembly\preferences</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">Generating run/$(Configuration)/profiles/Bluetooth/colorfilters, run/$(Configuration)/profiles/Bluetooth/preferences, run/$(Configuration)/profiles/Classic/colorfilters, run/$(Configuration)/profiles/No Reassembly/preferences</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E copy_directory C:/Development/wireshark/profiles C:/Development/wireshark/run/$(Configuration)/profiles
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">C:/Development/wireshark/CMakeFiles/aef72bec5ae5b0bd15670b636fba34d1/colorfilters.rule;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">C:\Development\wireshark\run\$(Configuration)\profiles\Bluetooth\colorfilters;C:\Development\wireshark\run\$(Configuration)\profiles\Bluetooth\preferences;C:\Development\wireshark\run\$(Configuration)\profiles\Classic\colorfilters;C:\Development\wireshark\run\$(Configuration)\profiles\No Reassembly\preferences</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">Generating run/$(Configuration)/profiles/Bluetooth/colorfilters, run/$(Configuration)/profiles/Bluetooth/preferences, run/$(Configuration)/profiles/Classic/colorfilters, run/$(Configuration)/profiles/No Reassembly/preferences</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E copy_directory C:/Development/wireshark/profiles C:/Development/wireshark/run/$(Configuration)/profiles
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">C:/Development/wireshark/CMakeFiles/aef72bec5ae5b0bd15670b636fba34d1/colorfilters.rule;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">C:\Development\wireshark\run\$(Configuration)\profiles\Bluetooth\colorfilters;C:\Development\wireshark\run\$(Configuration)\profiles\Bluetooth\preferences;C:\Development\wireshark\run\$(Configuration)\profiles\Classic\colorfilters;C:\Development\wireshark\run\$(Configuration)\profiles\No Reassembly\preferences</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="C:\Development\wireshark\CMakeFiles\92c48229d5b0bd5cc27ff1ca1656e8dc\copy_data_files.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'"></Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">setlocal
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">C:/Development/wireshark/CMakeFiles/92c48229d5b0bd5cc27ff1ca1656e8dc/copy_data_files.rule;C:\Development\wireshark\run\$(Configuration)\README.txt;C:\Development\wireshark\run\$(Configuration)\README.windows.txt;C:\Development\wireshark\run\$(Configuration)\NEWS.txt;C:\Development\wireshark\run\$(Configuration)\COPYING.txt;C:\Development\wireshark\run\$(Configuration)\cfilters;C:\Development\wireshark\run\$(Configuration)\colorfilters;C:\Development\wireshark\run\$(Configuration)\dfilters;C:\Development\wireshark\run\$(Configuration)\enterprises.tsv;C:\Development\wireshark\run\$(Configuration)\ipmap.html;C:\Development\wireshark\run\$(Configuration)\manuf;C:\Development\wireshark\run\$(Configuration)\pdml2html.xsl;C:\Development\wireshark\run\$(Configuration)\services;C:\Development\wireshark\run\$(Configuration)\smi_modules;C:\Development\wireshark\run\$(Configuration)\wka;C:\Development\wireshark\run\$(Configuration)\ws.css;C:\Development\wireshark\run\$(Configuration)\AUTHORS-SHORT;C:\Development\wireshark\run\$(Configuration)\androiddump.html;C:\Development\wireshark\run\$(Configuration)\udpdump.html;C:\Development\wireshark\run\$(Configuration)\capinfos.html;C:\Development\wireshark\run\$(Configuration)\captype.html;C:\Development\wireshark\run\$(Configuration)\ciscodump.html;C:\Development\wireshark\run\$(Configuration)\dftest.html;C:\Development\wireshark\run\$(Configuration)\dumpcap.html;C:\Development\wireshark\run\$(Configuration)\editcap.html;C:\Development\wireshark\run\$(Configuration)\extcap.html;C:\Development\wireshark\run\$(Configuration)\mergecap.html;C:\Development\wireshark\run\$(Configuration)\randpkt.html;C:\Development\wireshark\run\$(Configuration)\randpktdump.html;C:\Development\wireshark\run\$(Configuration)\rawshark.html;C:\Development\wireshark\run\$(Configuration)\reordercap.html;C:\Development\wireshark\run\$(Configuration)\sshdump.html;C:\Development\wireshark\run\$(Configuration)\text2pcap.html;C:\Development\wireshark\run\$(Configuration)\tshark.html;C:\Development\wireshark\run\$(Configuration)\wireshark.html;C:\Development\wireshark\run\$(Configuration)\wireshark-filter.html;C:\Development\wireshark\run\$(Configuration)\mmdbresolve.html;C:\Development\wireshark\run\$(Configuration)\init.lua;C:\Development\wireshark\run\$(Configuration)\console.lua;C:\Development\wireshark\run\$(Configuration)\dtd_gen.lua;C:\Development\wireshark\run\$(Configuration)\tpncp\tpncp.dat;C:\Development\wireshark\run\$(Configuration)\wimaxasncp\dictionary.dtd;C:\Development\wireshark\run\$(Configuration)\wimaxasncp\dictionary.xml;C:\Development\wireshark\run\$(Configuration)\dtds\dc.dtd;C:\Development\wireshark\run\$(Configuration)\dtds\itunes.dtd;C:\Development\wireshark\run\$(Configuration)\dtds\mscml.dtd;C:\Development\wireshark\run\$(Configuration)\dtds\pocsettings.dtd;C:\Development\wireshark\run\$(Configuration)\dtds\presence.dtd;C:\Development\wireshark\run\$(Configuration)\dtds\reginfo.dtd;C:\Development\wireshark\run\$(Configuration)\dtds\rlmi.dtd;C:\Development\wireshark\run\$(Configuration)\dtds\rss.dtd;C:\Development\wireshark\run\$(Configuration)\dtds\smil.dtd;C:\Development\wireshark\run\$(Configuration)\dtds\watcherinfo.dtd;C:\Development\wireshark\run\$(Configuration)\dtds\xcap-caps.dtd;C:\Development\wireshark\run\$(Configuration)\dtds\xcap-error.dtd;C:\Development\wireshark\run\$(Configuration)\diameter\AlcatelLucent.xml;C:\Development\wireshark\run\$(Configuration)\diameter\Cisco.xml;C:\Development\wireshark\run\$(Configuration)\diameter\CiscoSystems.xml;C:\Development\wireshark\run\$(Configuration)\diameter\Custom.xml;C:\Development\wireshark\run\$(Configuration)\diameter\Ericsson.xml;C:\Development\wireshark\run\$(Configuration)\diameter\HP.xml;C:\Development\wireshark\run\$(Configuration)\diameter\Huawei.xml;C:\Development\wireshark\run\$(Configuration)\diameter\Inovar.xml;C:\Development\wireshark\run\$(Configuration)\diameter\Juniper.xml;C:\Development\wireshark\run\$(Configuration)\diameter\Nokia.xml;C:\Development\wireshark\run\$(Configuration)\diameter\NokiaSolutionsAndNetworks.xml;C:\Development\wireshark\run\$(Configuration)\diameter\Oracle.xml;C:\Development\wireshark\run\$(Configuration)\diameter\Starent.xml;C:\Development\wireshark\run\$(Configuration)\diameter\TGPP.xml;C:\Development\wireshark\run\$(Configuration)\diameter\TGPP2.xml;C:\Development\wireshark\run\$(Configuration)\diameter\VerizonWireless.xml;C:\Development\wireshark\run\$(Configuration)\diameter\Vodafone.xml;C:\Development\wireshark\run\$(Configuration)\diameter\chargecontrol.xml;C:\Development\wireshark\run\$(Configuration)\diameter\dictionary.dtd;C:\Development\wireshark\run\$(Configuration)\diameter\dictionary.xml;C:\Development\wireshark\run\$(Configuration)\diameter\eap.xml;C:\Development\wireshark\run\$(Configuration)\diameter\etsie2e4.xml;C:\Development\wireshark\run\$(Configuration)\diameter\mobileipv4.xml;C:\Development\wireshark\run\$(Configuration)\diameter\mobileipv6.xml;C:\Development\wireshark\run\$(Configuration)\diameter\nasreq.xml;C:\Development\wireshark\run\$(Configuration)\diameter\sip.xml;C:\Development\wireshark\run\$(Configuration)\diameter\sunping.xml;C:\Development\wireshark\run\$(Configuration)\radius\README.radius_dictionary;C:\Development\wireshark\run\$(Configuration)\radius\custom.includes;C:\Development\wireshark\run\$(Configuration)\radius\dictionary;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.3com;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.3gpp;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.3gpp2;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.acc;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.acme;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.actelis;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.aerohive;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.airespace;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.alcatel;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.alcatel-lucent.aaa;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.alcatel.esam;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.alcatel.sr;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.alteon;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.altiga;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.alvarion;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.alvarion.wimax.v2_2;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.apc;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.aptis;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.arbor;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.aruba;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.ascend;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.asn;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.audiocodes;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.avaya;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.azaire;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.bay;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.bintec;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.bluecoat;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.bristol;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.broadsoft;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.brocade;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.bskyb;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.bt;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.cablelabs;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.cabletron;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.camiant;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.chillispot;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.cisco;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.cisco.asa;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.cisco.bbsm;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.cisco.vpn3000;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.cisco.vpn5000;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.citrix;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.clavister;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.cnergee;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.colubris;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.columbia_university;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.compat;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.compatible;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.cosine;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.dante;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.dellemc;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.dhcp;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.digium;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.dlink;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.dragonwave;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.efficientip;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.eltex;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.epygi;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.equallogic;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.ericsson;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.ericsson.ab;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.ericsson.packet.core.networks;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.extreme;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.f5;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.fdxtended;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.fortinet;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.foundry;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.freedhcp;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.freeradius;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.freeradius.internal;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.freeswitch;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.gandalf;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.garderos;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.gemtek;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.h3c;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.hp;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.huawei;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.iana;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.iea;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.infoblox;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.infonet;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.ipunplugged;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.issanni;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.itk;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.jradius;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.juniper;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.karlnet;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.kineto;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.lancom;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.livingston;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.localweb;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.lucent;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.manzara;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.meinberg;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.merit;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.meru;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.microsemi;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.microsoft;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.mikrotik;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.motorola;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.motorola.wimax;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.navini;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.netscreen;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.networkphysics;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.nexans;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.nokia;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.nokia.conflict;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.nomadix;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.nortel;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.ntua;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.openser;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.packeteer;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.paloalto;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.patton;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.perle;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.propel;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.prosoft;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.proxim;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.purewave;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.quiconnect;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.quintum;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.redcreek;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc2865;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc2866;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc2867;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc2868;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc2869;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc3162;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc3576;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc3580;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc4072;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc4372;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc4603;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc4675;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc4679;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc4818;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc4849;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc5090;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc5176;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc5447;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc5580;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc5607;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc5904;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc6519;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc6572;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc6677;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc6911;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc6929;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc6930;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc7055;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc7155;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc7268;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc7499;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc7930;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.riverbed;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.riverstone;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.roaringpenguin;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.ruckus;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.ruggedcom;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.sangoma;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.sg;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.shasta;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.shiva;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.siemens;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.slipstream;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.sofaware;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.sonicwall;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.springtide;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.starent;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.starent.vsa1;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.surfnet;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.symbol;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.t_systems_nova;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.telebit;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.telkom;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.terena;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.trapeze;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.travelping;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.tropos;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.ukerna;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.unisphere;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.unix;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.usr;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.utstarcom;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.valemount;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.verizon;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.versanet;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.vqp;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.walabi;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.waverider;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.wichorus;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.wimax;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.wimax.alvarion;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.wimax.wichorus;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.wispr;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.xedia;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.xylan;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.yubico;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.zeus;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.zte;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.zyxel;C:\Development\wireshark\run\$(Configuration)\profiles\Bluetooth\colorfilters;C:\Development\wireshark\run\$(Configuration)\profiles\Bluetooth\preferences;C:\Development\wireshark\run\$(Configuration)\profiles\Classic\colorfilters;C:\Development\wireshark\run\$(Configuration)\profiles\No Reassembly\preferences;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">C:\Development\wireshark\CMakeFiles\copy_data_files</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|Win32'"></Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">setlocal
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">C:/Development/wireshark/CMakeFiles/92c48229d5b0bd5cc27ff1ca1656e8dc/copy_data_files.rule;C:\Development\wireshark\run\$(Configuration)\README.txt;C:\Development\wireshark\run\$(Configuration)\README.windows.txt;C:\Development\wireshark\run\$(Configuration)\NEWS.txt;C:\Development\wireshark\run\$(Configuration)\COPYING.txt;C:\Development\wireshark\run\$(Configuration)\cfilters;C:\Development\wireshark\run\$(Configuration)\colorfilters;C:\Development\wireshark\run\$(Configuration)\dfilters;C:\Development\wireshark\run\$(Configuration)\enterprises.tsv;C:\Development\wireshark\run\$(Configuration)\ipmap.html;C:\Development\wireshark\run\$(Configuration)\manuf;C:\Development\wireshark\run\$(Configuration)\pdml2html.xsl;C:\Development\wireshark\run\$(Configuration)\services;C:\Development\wireshark\run\$(Configuration)\smi_modules;C:\Development\wireshark\run\$(Configuration)\wka;C:\Development\wireshark\run\$(Configuration)\ws.css;C:\Development\wireshark\run\$(Configuration)\AUTHORS-SHORT;C:\Development\wireshark\run\$(Configuration)\androiddump.html;C:\Development\wireshark\run\$(Configuration)\udpdump.html;C:\Development\wireshark\run\$(Configuration)\capinfos.html;C:\Development\wireshark\run\$(Configuration)\captype.html;C:\Development\wireshark\run\$(Configuration)\ciscodump.html;C:\Development\wireshark\run\$(Configuration)\dftest.html;C:\Development\wireshark\run\$(Configuration)\dumpcap.html;C:\Development\wireshark\run\$(Configuration)\editcap.html;C:\Development\wireshark\run\$(Configuration)\extcap.html;C:\Development\wireshark\run\$(Configuration)\mergecap.html;C:\Development\wireshark\run\$(Configuration)\randpkt.html;C:\Development\wireshark\run\$(Configuration)\randpktdump.html;C:\Development\wireshark\run\$(Configuration)\rawshark.html;C:\Development\wireshark\run\$(Configuration)\reordercap.html;C:\Development\wireshark\run\$(Configuration)\sshdump.html;C:\Development\wireshark\run\$(Configuration)\text2pcap.html;C:\Development\wireshark\run\$(Configuration)\tshark.html;C:\Development\wireshark\run\$(Configuration)\wireshark.html;C:\Development\wireshark\run\$(Configuration)\wireshark-filter.html;C:\Development\wireshark\run\$(Configuration)\mmdbresolve.html;C:\Development\wireshark\run\$(Configuration)\init.lua;C:\Development\wireshark\run\$(Configuration)\console.lua;C:\Development\wireshark\run\$(Configuration)\dtd_gen.lua;C:\Development\wireshark\run\$(Configuration)\tpncp\tpncp.dat;C:\Development\wireshark\run\$(Configuration)\wimaxasncp\dictionary.dtd;C:\Development\wireshark\run\$(Configuration)\wimaxasncp\dictionary.xml;C:\Development\wireshark\run\$(Configuration)\dtds\dc.dtd;C:\Development\wireshark\run\$(Configuration)\dtds\itunes.dtd;C:\Development\wireshark\run\$(Configuration)\dtds\mscml.dtd;C:\Development\wireshark\run\$(Configuration)\dtds\pocsettings.dtd;C:\Development\wireshark\run\$(Configuration)\dtds\presence.dtd;C:\Development\wireshark\run\$(Configuration)\dtds\reginfo.dtd;C:\Development\wireshark\run\$(Configuration)\dtds\rlmi.dtd;C:\Development\wireshark\run\$(Configuration)\dtds\rss.dtd;C:\Development\wireshark\run\$(Configuration)\dtds\smil.dtd;C:\Development\wireshark\run\$(Configuration)\dtds\watcherinfo.dtd;C:\Development\wireshark\run\$(Configuration)\dtds\xcap-caps.dtd;C:\Development\wireshark\run\$(Configuration)\dtds\xcap-error.dtd;C:\Development\wireshark\run\$(Configuration)\diameter\AlcatelLucent.xml;C:\Development\wireshark\run\$(Configuration)\diameter\Cisco.xml;C:\Development\wireshark\run\$(Configuration)\diameter\CiscoSystems.xml;C:\Development\wireshark\run\$(Configuration)\diameter\Custom.xml;C:\Development\wireshark\run\$(Configuration)\diameter\Ericsson.xml;C:\Development\wireshark\run\$(Configuration)\diameter\HP.xml;C:\Development\wireshark\run\$(Configuration)\diameter\Huawei.xml;C:\Development\wireshark\run\$(Configuration)\diameter\Inovar.xml;C:\Development\wireshark\run\$(Configuration)\diameter\Juniper.xml;C:\Development\wireshark\run\$(Configuration)\diameter\Nokia.xml;C:\Development\wireshark\run\$(Configuration)\diameter\NokiaSolutionsAndNetworks.xml;C:\Development\wireshark\run\$(Configuration)\diameter\Oracle.xml;C:\Development\wireshark\run\$(Configuration)\diameter\Starent.xml;C:\Development\wireshark\run\$(Configuration)\diameter\TGPP.xml;C:\Development\wireshark\run\$(Configuration)\diameter\TGPP2.xml;C:\Development\wireshark\run\$(Configuration)\diameter\VerizonWireless.xml;C:\Development\wireshark\run\$(Configuration)\diameter\Vodafone.xml;C:\Development\wireshark\run\$(Configuration)\diameter\chargecontrol.xml;C:\Development\wireshark\run\$(Configuration)\diameter\dictionary.dtd;C:\Development\wireshark\run\$(Configuration)\diameter\dictionary.xml;C:\Development\wireshark\run\$(Configuration)\diameter\eap.xml;C:\Development\wireshark\run\$(Configuration)\diameter\etsie2e4.xml;C:\Development\wireshark\run\$(Configuration)\diameter\mobileipv4.xml;C:\Development\wireshark\run\$(Configuration)\diameter\mobileipv6.xml;C:\Development\wireshark\run\$(Configuration)\diameter\nasreq.xml;C:\Development\wireshark\run\$(Configuration)\diameter\sip.xml;C:\Development\wireshark\run\$(Configuration)\diameter\sunping.xml;C:\Development\wireshark\run\$(Configuration)\radius\README.radius_dictionary;C:\Development\wireshark\run\$(Configuration)\radius\custom.includes;C:\Development\wireshark\run\$(Configuration)\radius\dictionary;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.3com;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.3gpp;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.3gpp2;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.acc;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.acme;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.actelis;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.aerohive;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.airespace;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.alcatel;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.alcatel-lucent.aaa;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.alcatel.esam;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.alcatel.sr;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.alteon;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.altiga;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.alvarion;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.alvarion.wimax.v2_2;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.apc;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.aptis;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.arbor;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.aruba;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.ascend;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.asn;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.audiocodes;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.avaya;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.azaire;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.bay;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.bintec;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.bluecoat;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.bristol;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.broadsoft;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.brocade;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.bskyb;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.bt;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.cablelabs;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.cabletron;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.camiant;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.chillispot;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.cisco;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.cisco.asa;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.cisco.bbsm;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.cisco.vpn3000;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.cisco.vpn5000;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.citrix;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.clavister;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.cnergee;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.colubris;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.columbia_university;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.compat;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.compatible;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.cosine;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.dante;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.dellemc;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.dhcp;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.digium;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.dlink;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.dragonwave;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.efficientip;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.eltex;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.epygi;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.equallogic;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.ericsson;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.ericsson.ab;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.ericsson.packet.core.networks;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.extreme;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.f5;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.fdxtended;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.fortinet;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.foundry;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.freedhcp;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.freeradius;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.freeradius.internal;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.freeswitch;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.gandalf;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.garderos;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.gemtek;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.h3c;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.hp;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.huawei;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.iana;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.iea;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.infoblox;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.infonet;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.ipunplugged;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.issanni;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.itk;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.jradius;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.juniper;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.karlnet;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.kineto;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.lancom;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.livingston;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.localweb;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.lucent;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.manzara;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.meinberg;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.merit;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.meru;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.microsemi;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.microsoft;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.mikrotik;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.motorola;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.motorola.wimax;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.navini;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.netscreen;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.networkphysics;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.nexans;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.nokia;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.nokia.conflict;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.nomadix;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.nortel;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.ntua;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.openser;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.packeteer;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.paloalto;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.patton;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.perle;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.propel;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.prosoft;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.proxim;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.purewave;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.quiconnect;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.quintum;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.redcreek;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc2865;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc2866;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc2867;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc2868;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc2869;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc3162;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc3576;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc3580;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc4072;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc4372;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc4603;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc4675;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc4679;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc4818;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc4849;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc5090;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc5176;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc5447;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc5580;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc5607;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc5904;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc6519;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc6572;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc6677;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc6911;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc6929;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc6930;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc7055;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc7155;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc7268;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc7499;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc7930;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.riverbed;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.riverstone;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.roaringpenguin;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.ruckus;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.ruggedcom;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.sangoma;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.sg;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.shasta;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.shiva;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.siemens;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.slipstream;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.sofaware;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.sonicwall;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.springtide;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.starent;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.starent.vsa1;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.surfnet;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.symbol;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.t_systems_nova;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.telebit;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.telkom;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.terena;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.trapeze;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.travelping;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.tropos;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.ukerna;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.unisphere;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.unix;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.usr;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.utstarcom;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.valemount;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.verizon;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.versanet;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.vqp;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.walabi;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.waverider;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.wichorus;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.wimax;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.wimax.alvarion;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.wimax.wichorus;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.wispr;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.xedia;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.xylan;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.yubico;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.zeus;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.zte;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.zyxel;C:\Development\wireshark\run\$(Configuration)\profiles\Bluetooth\colorfilters;C:\Development\wireshark\run\$(Configuration)\profiles\Bluetooth\preferences;C:\Development\wireshark\run\$(Configuration)\profiles\Classic\colorfilters;C:\Development\wireshark\run\$(Configuration)\profiles\No Reassembly\preferences;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">C:\Development\wireshark\CMakeFiles\copy_data_files</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'"></Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">setlocal
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">C:/Development/wireshark/CMakeFiles/92c48229d5b0bd5cc27ff1ca1656e8dc/copy_data_files.rule;C:\Development\wireshark\run\$(Configuration)\README.txt;C:\Development\wireshark\run\$(Configuration)\README.windows.txt;C:\Development\wireshark\run\$(Configuration)\NEWS.txt;C:\Development\wireshark\run\$(Configuration)\COPYING.txt;C:\Development\wireshark\run\$(Configuration)\cfilters;C:\Development\wireshark\run\$(Configuration)\colorfilters;C:\Development\wireshark\run\$(Configuration)\dfilters;C:\Development\wireshark\run\$(Configuration)\enterprises.tsv;C:\Development\wireshark\run\$(Configuration)\ipmap.html;C:\Development\wireshark\run\$(Configuration)\manuf;C:\Development\wireshark\run\$(Configuration)\pdml2html.xsl;C:\Development\wireshark\run\$(Configuration)\services;C:\Development\wireshark\run\$(Configuration)\smi_modules;C:\Development\wireshark\run\$(Configuration)\wka;C:\Development\wireshark\run\$(Configuration)\ws.css;C:\Development\wireshark\run\$(Configuration)\AUTHORS-SHORT;C:\Development\wireshark\run\$(Configuration)\androiddump.html;C:\Development\wireshark\run\$(Configuration)\udpdump.html;C:\Development\wireshark\run\$(Configuration)\capinfos.html;C:\Development\wireshark\run\$(Configuration)\captype.html;C:\Development\wireshark\run\$(Configuration)\ciscodump.html;C:\Development\wireshark\run\$(Configuration)\dftest.html;C:\Development\wireshark\run\$(Configuration)\dumpcap.html;C:\Development\wireshark\run\$(Configuration)\editcap.html;C:\Development\wireshark\run\$(Configuration)\extcap.html;C:\Development\wireshark\run\$(Configuration)\mergecap.html;C:\Development\wireshark\run\$(Configuration)\randpkt.html;C:\Development\wireshark\run\$(Configuration)\randpktdump.html;C:\Development\wireshark\run\$(Configuration)\rawshark.html;C:\Development\wireshark\run\$(Configuration)\reordercap.html;C:\Development\wireshark\run\$(Configuration)\sshdump.html;C:\Development\wireshark\run\$(Configuration)\text2pcap.html;C:\Development\wireshark\run\$(Configuration)\tshark.html;C:\Development\wireshark\run\$(Configuration)\wireshark.html;C:\Development\wireshark\run\$(Configuration)\wireshark-filter.html;C:\Development\wireshark\run\$(Configuration)\mmdbresolve.html;C:\Development\wireshark\run\$(Configuration)\init.lua;C:\Development\wireshark\run\$(Configuration)\console.lua;C:\Development\wireshark\run\$(Configuration)\dtd_gen.lua;C:\Development\wireshark\run\$(Configuration)\tpncp\tpncp.dat;C:\Development\wireshark\run\$(Configuration)\wimaxasncp\dictionary.dtd;C:\Development\wireshark\run\$(Configuration)\wimaxasncp\dictionary.xml;C:\Development\wireshark\run\$(Configuration)\dtds\dc.dtd;C:\Development\wireshark\run\$(Configuration)\dtds\itunes.dtd;C:\Development\wireshark\run\$(Configuration)\dtds\mscml.dtd;C:\Development\wireshark\run\$(Configuration)\dtds\pocsettings.dtd;C:\Development\wireshark\run\$(Configuration)\dtds\presence.dtd;C:\Development\wireshark\run\$(Configuration)\dtds\reginfo.dtd;C:\Development\wireshark\run\$(Configuration)\dtds\rlmi.dtd;C:\Development\wireshark\run\$(Configuration)\dtds\rss.dtd;C:\Development\wireshark\run\$(Configuration)\dtds\smil.dtd;C:\Development\wireshark\run\$(Configuration)\dtds\watcherinfo.dtd;C:\Development\wireshark\run\$(Configuration)\dtds\xcap-caps.dtd;C:\Development\wireshark\run\$(Configuration)\dtds\xcap-error.dtd;C:\Development\wireshark\run\$(Configuration)\diameter\AlcatelLucent.xml;C:\Development\wireshark\run\$(Configuration)\diameter\Cisco.xml;C:\Development\wireshark\run\$(Configuration)\diameter\CiscoSystems.xml;C:\Development\wireshark\run\$(Configuration)\diameter\Custom.xml;C:\Development\wireshark\run\$(Configuration)\diameter\Ericsson.xml;C:\Development\wireshark\run\$(Configuration)\diameter\HP.xml;C:\Development\wireshark\run\$(Configuration)\diameter\Huawei.xml;C:\Development\wireshark\run\$(Configuration)\diameter\Inovar.xml;C:\Development\wireshark\run\$(Configuration)\diameter\Juniper.xml;C:\Development\wireshark\run\$(Configuration)\diameter\Nokia.xml;C:\Development\wireshark\run\$(Configuration)\diameter\NokiaSolutionsAndNetworks.xml;C:\Development\wireshark\run\$(Configuration)\diameter\Oracle.xml;C:\Development\wireshark\run\$(Configuration)\diameter\Starent.xml;C:\Development\wireshark\run\$(Configuration)\diameter\TGPP.xml;C:\Development\wireshark\run\$(Configuration)\diameter\TGPP2.xml;C:\Development\wireshark\run\$(Configuration)\diameter\VerizonWireless.xml;C:\Development\wireshark\run\$(Configuration)\diameter\Vodafone.xml;C:\Development\wireshark\run\$(Configuration)\diameter\chargecontrol.xml;C:\Development\wireshark\run\$(Configuration)\diameter\dictionary.dtd;C:\Development\wireshark\run\$(Configuration)\diameter\dictionary.xml;C:\Development\wireshark\run\$(Configuration)\diameter\eap.xml;C:\Development\wireshark\run\$(Configuration)\diameter\etsie2e4.xml;C:\Development\wireshark\run\$(Configuration)\diameter\mobileipv4.xml;C:\Development\wireshark\run\$(Configuration)\diameter\mobileipv6.xml;C:\Development\wireshark\run\$(Configuration)\diameter\nasreq.xml;C:\Development\wireshark\run\$(Configuration)\diameter\sip.xml;C:\Development\wireshark\run\$(Configuration)\diameter\sunping.xml;C:\Development\wireshark\run\$(Configuration)\radius\README.radius_dictionary;C:\Development\wireshark\run\$(Configuration)\radius\custom.includes;C:\Development\wireshark\run\$(Configuration)\radius\dictionary;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.3com;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.3gpp;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.3gpp2;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.acc;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.acme;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.actelis;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.aerohive;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.airespace;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.alcatel;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.alcatel-lucent.aaa;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.alcatel.esam;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.alcatel.sr;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.alteon;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.altiga;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.alvarion;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.alvarion.wimax.v2_2;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.apc;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.aptis;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.arbor;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.aruba;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.ascend;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.asn;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.audiocodes;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.avaya;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.azaire;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.bay;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.bintec;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.bluecoat;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.bristol;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.broadsoft;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.brocade;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.bskyb;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.bt;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.cablelabs;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.cabletron;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.camiant;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.chillispot;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.cisco;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.cisco.asa;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.cisco.bbsm;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.cisco.vpn3000;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.cisco.vpn5000;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.citrix;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.clavister;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.cnergee;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.colubris;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.columbia_university;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.compat;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.compatible;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.cosine;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.dante;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.dellemc;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.dhcp;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.digium;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.dlink;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.dragonwave;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.efficientip;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.eltex;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.epygi;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.equallogic;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.ericsson;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.ericsson.ab;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.ericsson.packet.core.networks;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.extreme;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.f5;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.fdxtended;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.fortinet;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.foundry;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.freedhcp;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.freeradius;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.freeradius.internal;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.freeswitch;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.gandalf;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.garderos;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.gemtek;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.h3c;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.hp;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.huawei;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.iana;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.iea;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.infoblox;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.infonet;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.ipunplugged;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.issanni;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.itk;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.jradius;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.juniper;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.karlnet;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.kineto;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.lancom;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.livingston;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.localweb;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.lucent;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.manzara;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.meinberg;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.merit;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.meru;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.microsemi;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.microsoft;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.mikrotik;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.motorola;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.motorola.wimax;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.navini;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.netscreen;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.networkphysics;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.nexans;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.nokia;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.nokia.conflict;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.nomadix;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.nortel;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.ntua;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.openser;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.packeteer;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.paloalto;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.patton;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.perle;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.propel;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.prosoft;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.proxim;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.purewave;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.quiconnect;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.quintum;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.redcreek;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc2865;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc2866;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc2867;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc2868;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc2869;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc3162;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc3576;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc3580;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc4072;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc4372;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc4603;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc4675;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc4679;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc4818;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc4849;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc5090;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc5176;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc5447;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc5580;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc5607;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc5904;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc6519;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc6572;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc6677;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc6911;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc6929;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc6930;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc7055;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc7155;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc7268;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc7499;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc7930;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.riverbed;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.riverstone;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.roaringpenguin;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.ruckus;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.ruggedcom;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.sangoma;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.sg;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.shasta;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.shiva;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.siemens;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.slipstream;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.sofaware;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.sonicwall;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.springtide;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.starent;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.starent.vsa1;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.surfnet;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.symbol;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.t_systems_nova;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.telebit;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.telkom;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.terena;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.trapeze;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.travelping;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.tropos;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.ukerna;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.unisphere;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.unix;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.usr;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.utstarcom;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.valemount;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.verizon;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.versanet;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.vqp;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.walabi;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.waverider;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.wichorus;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.wimax;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.wimax.alvarion;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.wimax.wichorus;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.wispr;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.xedia;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.xylan;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.yubico;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.zeus;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.zte;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.zyxel;C:\Development\wireshark\run\$(Configuration)\profiles\Bluetooth\colorfilters;C:\Development\wireshark\run\$(Configuration)\profiles\Bluetooth\preferences;C:\Development\wireshark\run\$(Configuration)\profiles\Classic\colorfilters;C:\Development\wireshark\run\$(Configuration)\profiles\No Reassembly\preferences;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">C:\Development\wireshark\CMakeFiles\copy_data_files</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'"></Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">setlocal
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">C:/Development/wireshark/CMakeFiles/92c48229d5b0bd5cc27ff1ca1656e8dc/copy_data_files.rule;C:\Development\wireshark\run\$(Configuration)\README.txt;C:\Development\wireshark\run\$(Configuration)\README.windows.txt;C:\Development\wireshark\run\$(Configuration)\NEWS.txt;C:\Development\wireshark\run\$(Configuration)\COPYING.txt;C:\Development\wireshark\run\$(Configuration)\cfilters;C:\Development\wireshark\run\$(Configuration)\colorfilters;C:\Development\wireshark\run\$(Configuration)\dfilters;C:\Development\wireshark\run\$(Configuration)\enterprises.tsv;C:\Development\wireshark\run\$(Configuration)\ipmap.html;C:\Development\wireshark\run\$(Configuration)\manuf;C:\Development\wireshark\run\$(Configuration)\pdml2html.xsl;C:\Development\wireshark\run\$(Configuration)\services;C:\Development\wireshark\run\$(Configuration)\smi_modules;C:\Development\wireshark\run\$(Configuration)\wka;C:\Development\wireshark\run\$(Configuration)\ws.css;C:\Development\wireshark\run\$(Configuration)\AUTHORS-SHORT;C:\Development\wireshark\run\$(Configuration)\androiddump.html;C:\Development\wireshark\run\$(Configuration)\udpdump.html;C:\Development\wireshark\run\$(Configuration)\capinfos.html;C:\Development\wireshark\run\$(Configuration)\captype.html;C:\Development\wireshark\run\$(Configuration)\ciscodump.html;C:\Development\wireshark\run\$(Configuration)\dftest.html;C:\Development\wireshark\run\$(Configuration)\dumpcap.html;C:\Development\wireshark\run\$(Configuration)\editcap.html;C:\Development\wireshark\run\$(Configuration)\extcap.html;C:\Development\wireshark\run\$(Configuration)\mergecap.html;C:\Development\wireshark\run\$(Configuration)\randpkt.html;C:\Development\wireshark\run\$(Configuration)\randpktdump.html;C:\Development\wireshark\run\$(Configuration)\rawshark.html;C:\Development\wireshark\run\$(Configuration)\reordercap.html;C:\Development\wireshark\run\$(Configuration)\sshdump.html;C:\Development\wireshark\run\$(Configuration)\text2pcap.html;C:\Development\wireshark\run\$(Configuration)\tshark.html;C:\Development\wireshark\run\$(Configuration)\wireshark.html;C:\Development\wireshark\run\$(Configuration)\wireshark-filter.html;C:\Development\wireshark\run\$(Configuration)\mmdbresolve.html;C:\Development\wireshark\run\$(Configuration)\init.lua;C:\Development\wireshark\run\$(Configuration)\console.lua;C:\Development\wireshark\run\$(Configuration)\dtd_gen.lua;C:\Development\wireshark\run\$(Configuration)\tpncp\tpncp.dat;C:\Development\wireshark\run\$(Configuration)\wimaxasncp\dictionary.dtd;C:\Development\wireshark\run\$(Configuration)\wimaxasncp\dictionary.xml;C:\Development\wireshark\run\$(Configuration)\dtds\dc.dtd;C:\Development\wireshark\run\$(Configuration)\dtds\itunes.dtd;C:\Development\wireshark\run\$(Configuration)\dtds\mscml.dtd;C:\Development\wireshark\run\$(Configuration)\dtds\pocsettings.dtd;C:\Development\wireshark\run\$(Configuration)\dtds\presence.dtd;C:\Development\wireshark\run\$(Configuration)\dtds\reginfo.dtd;C:\Development\wireshark\run\$(Configuration)\dtds\rlmi.dtd;C:\Development\wireshark\run\$(Configuration)\dtds\rss.dtd;C:\Development\wireshark\run\$(Configuration)\dtds\smil.dtd;C:\Development\wireshark\run\$(Configuration)\dtds\watcherinfo.dtd;C:\Development\wireshark\run\$(Configuration)\dtds\xcap-caps.dtd;C:\Development\wireshark\run\$(Configuration)\dtds\xcap-error.dtd;C:\Development\wireshark\run\$(Configuration)\diameter\AlcatelLucent.xml;C:\Development\wireshark\run\$(Configuration)\diameter\Cisco.xml;C:\Development\wireshark\run\$(Configuration)\diameter\CiscoSystems.xml;C:\Development\wireshark\run\$(Configuration)\diameter\Custom.xml;C:\Development\wireshark\run\$(Configuration)\diameter\Ericsson.xml;C:\Development\wireshark\run\$(Configuration)\diameter\HP.xml;C:\Development\wireshark\run\$(Configuration)\diameter\Huawei.xml;C:\Development\wireshark\run\$(Configuration)\diameter\Inovar.xml;C:\Development\wireshark\run\$(Configuration)\diameter\Juniper.xml;C:\Development\wireshark\run\$(Configuration)\diameter\Nokia.xml;C:\Development\wireshark\run\$(Configuration)\diameter\NokiaSolutionsAndNetworks.xml;C:\Development\wireshark\run\$(Configuration)\diameter\Oracle.xml;C:\Development\wireshark\run\$(Configuration)\diameter\Starent.xml;C:\Development\wireshark\run\$(Configuration)\diameter\TGPP.xml;C:\Development\wireshark\run\$(Configuration)\diameter\TGPP2.xml;C:\Development\wireshark\run\$(Configuration)\diameter\VerizonWireless.xml;C:\Development\wireshark\run\$(Configuration)\diameter\Vodafone.xml;C:\Development\wireshark\run\$(Configuration)\diameter\chargecontrol.xml;C:\Development\wireshark\run\$(Configuration)\diameter\dictionary.dtd;C:\Development\wireshark\run\$(Configuration)\diameter\dictionary.xml;C:\Development\wireshark\run\$(Configuration)\diameter\eap.xml;C:\Development\wireshark\run\$(Configuration)\diameter\etsie2e4.xml;C:\Development\wireshark\run\$(Configuration)\diameter\mobileipv4.xml;C:\Development\wireshark\run\$(Configuration)\diameter\mobileipv6.xml;C:\Development\wireshark\run\$(Configuration)\diameter\nasreq.xml;C:\Development\wireshark\run\$(Configuration)\diameter\sip.xml;C:\Development\wireshark\run\$(Configuration)\diameter\sunping.xml;C:\Development\wireshark\run\$(Configuration)\radius\README.radius_dictionary;C:\Development\wireshark\run\$(Configuration)\radius\custom.includes;C:\Development\wireshark\run\$(Configuration)\radius\dictionary;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.3com;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.3gpp;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.3gpp2;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.acc;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.acme;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.actelis;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.aerohive;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.airespace;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.alcatel;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.alcatel-lucent.aaa;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.alcatel.esam;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.alcatel.sr;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.alteon;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.altiga;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.alvarion;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.alvarion.wimax.v2_2;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.apc;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.aptis;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.arbor;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.aruba;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.ascend;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.asn;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.audiocodes;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.avaya;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.azaire;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.bay;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.bintec;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.bluecoat;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.bristol;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.broadsoft;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.brocade;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.bskyb;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.bt;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.cablelabs;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.cabletron;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.camiant;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.chillispot;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.cisco;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.cisco.asa;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.cisco.bbsm;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.cisco.vpn3000;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.cisco.vpn5000;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.citrix;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.clavister;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.cnergee;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.colubris;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.columbia_university;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.compat;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.compatible;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.cosine;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.dante;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.dellemc;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.dhcp;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.digium;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.dlink;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.dragonwave;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.efficientip;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.eltex;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.epygi;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.equallogic;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.ericsson;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.ericsson.ab;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.ericsson.packet.core.networks;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.extreme;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.f5;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.fdxtended;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.fortinet;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.foundry;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.freedhcp;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.freeradius;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.freeradius.internal;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.freeswitch;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.gandalf;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.garderos;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.gemtek;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.h3c;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.hp;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.huawei;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.iana;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.iea;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.infoblox;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.infonet;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.ipunplugged;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.issanni;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.itk;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.jradius;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.juniper;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.karlnet;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.kineto;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.lancom;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.livingston;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.localweb;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.lucent;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.manzara;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.meinberg;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.merit;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.meru;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.microsemi;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.microsoft;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.mikrotik;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.motorola;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.motorola.wimax;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.navini;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.netscreen;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.networkphysics;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.nexans;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.nokia;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.nokia.conflict;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.nomadix;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.nortel;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.ntua;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.openser;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.packeteer;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.paloalto;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.patton;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.perle;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.propel;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.prosoft;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.proxim;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.purewave;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.quiconnect;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.quintum;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.redcreek;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc2865;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc2866;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc2867;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc2868;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc2869;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc3162;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc3576;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc3580;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc4072;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc4372;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc4603;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc4675;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc4679;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc4818;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc4849;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc5090;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc5176;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc5447;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc5580;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc5607;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc5904;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc6519;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc6572;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc6677;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc6911;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc6929;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc6930;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc7055;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc7155;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc7268;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc7499;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.rfc7930;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.riverbed;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.riverstone;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.roaringpenguin;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.ruckus;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.ruggedcom;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.sangoma;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.sg;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.shasta;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.shiva;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.siemens;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.slipstream;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.sofaware;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.sonicwall;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.springtide;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.starent;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.starent.vsa1;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.surfnet;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.symbol;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.t_systems_nova;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.telebit;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.telkom;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.terena;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.trapeze;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.travelping;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.tropos;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.ukerna;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.unisphere;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.unix;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.usr;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.utstarcom;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.valemount;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.verizon;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.versanet;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.vqp;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.walabi;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.waverider;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.wichorus;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.wimax;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.wimax.alvarion;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.wimax.wichorus;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.wispr;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.xedia;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.xylan;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.yubico;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.zeus;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.zte;C:\Development\wireshark\run\$(Configuration)\radius\dictionary.zyxel;C:\Development\wireshark\run\$(Configuration)\profiles\Bluetooth\colorfilters;C:\Development\wireshark\run\$(Configuration)\profiles\Bluetooth\preferences;C:\Development\wireshark\run\$(Configuration)\profiles\Classic\colorfilters;C:\Development\wireshark\run\$(Configuration)\profiles\No Reassembly\preferences;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">C:\Development\wireshark\CMakeFiles\copy_data_files</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="C:\Development\wireshark\CMakeLists.txt">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">Building Custom Rule C:/Development/wireshark/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -SC:/Development/wireshark -BC:/Development/wireshark --check-stamp-file C:/Development/wireshark/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">C:/Development/wireshark/CMakeLists.txt;C:\Development\wireshark\CMakeFiles\3.13.2\CMakeCCompiler.cmake;C:\Development\wireshark\CMakeFiles\3.13.2\CMakeCXXCompiler.cmake;C:\Development\wireshark\CMakeFiles\3.13.2\CMakeRCCompiler.cmake;C:\Development\wireshark\CMakeFiles\3.13.2\CMakeSystem.cmake;C:\Development\wireshark\CMakeLists.txt;C:\Development\wireshark\CMakeOptions.txt;C:\Development\wireshark\ConfigureChecks.cmake;C:\Development\wireshark\WiresharkConfig.cmake.in;C:\Development\wireshark\cmake\modules\CheckCLinkerFlag.cmake;C:\Development\wireshark\cmake\modules\FindAIRPCAP.cmake;C:\Development\wireshark\cmake\modules\FindBCG729.cmake;C:\Development\wireshark\cmake\modules\FindCARES.cmake;C:\Development\wireshark\cmake\modules\FindChocolatey.cmake;C:\Development\wireshark\cmake\modules\FindDOXYGEN.cmake;C:\Development\wireshark\cmake\modules\FindGCRYPT.cmake;C:\Development\wireshark\cmake\modules\FindGLIB2.cmake;C:\Development\wireshark\cmake\modules\FindGMODULE2.cmake;C:\Development\wireshark\cmake\modules\FindGNUTLS.cmake;C:\Development\wireshark\cmake\modules\FindGTHREAD2.cmake;C:\Development\wireshark\cmake\modules\FindKERBEROS.cmake;C:\Development\wireshark\cmake\modules\FindLEX.cmake;C:\Development\wireshark\cmake\modules\FindLIBSSH.cmake;C:\Development\wireshark\cmake\modules\FindLUA.cmake;C:\Development\wireshark\cmake\modules\FindLZ4.cmake;C:\Development\wireshark\cmake\modules\FindLibXml2.cmake;C:\Development\wireshark\cmake\modules\FindMSVC_REDIST.cmake;C:\Development\wireshark\cmake\modules\FindMaxMindDB.cmake;C:\Development\wireshark\cmake\modules\FindNGHTTP2.cmake;C:\Development\wireshark\cmake\modules\FindNSIS.cmake;C:\Development\wireshark\cmake\modules\FindPCAP.cmake;C:\Development\wireshark\cmake\modules\FindPOD.cmake;C:\Development\wireshark\cmake\modules\FindPortableApps.cmake;C:\Development\wireshark\cmake\modules\FindPowerShell.cmake;C:\Development\wireshark\cmake\modules\FindSBC.cmake;C:\Development\wireshark\cmake\modules\FindSMI.cmake;C:\Development\wireshark\cmake\modules\FindSNAPPY.cmake;C:\Development\wireshark\cmake\modules\FindSPANDSP.cmake;C:\Development\wireshark\cmake\modules\FindWSWinLibs.cmake;C:\Development\wireshark\cmake\modules\FindWiX.cmake;C:\Development\wireshark\cmake\modules\FindWinSparkle.cmake;C:\Development\wireshark\cmake\modules\FindYACC.cmake;C:\Development\wireshark\cmake\modules\FindZLIB.cmake;C:\Development\wireshark\cmake\modules\UseAsn2Wrs.cmake;C:\Development\wireshark\cmake\modules\UseCheckAPI.cmake;C:\Development\wireshark\cmake\modules\UseCustomIncludes.cmake;C:\Development\wireshark\cmake\modules\UseExecutableResources.cmake;C:\Development\wireshark\cmake\modules\UseLemon.cmake;C:\Development\wireshark\cmake\modules\UseMakePluginReg.cmake;C:\Development\wireshark\cmake\modules\UseMakeTaps.cmake;C:\Development\wireshark\cmake\modules\gmxTestLargeFiles.cmake;C:\Development\wireshark\cmakeconfig.h.in;C:\Development\wireshark\doxygen.cfg.in;C:\Development\wireshark\image\cli_template.rc.in;C:\Development\wireshark\image\dumpcap.rc.in;C:\Development\wireshark\image\libwireshark.rc.in;C:\Development\wireshark\image\libwscodecs.rc.in;C:\Development\wireshark\image\libwsutil.rc.in;C:\Development\wireshark\image\tshark.rc.in;C:\Development\wireshark\image\wireshark.exe.manifest.in;C:\Development\wireshark\image\wireshark.rc.in;C:\Development\wireshark\image\wiretap.rc.in;C:\Development\wireshark\packaging\macosx\Info.plist.in;C:\Development\wireshark\packaging\macosx\Read_me_first.rtf.in;C:\Development\wireshark\packaging\macosx\Wireshark_package.pmdoc\index.xml.in;C:\Development\wireshark\packaging\macosx\osx-app.sh.in;C:\Development\wireshark\packaging\macosx\osx-dmg.sh.in;C:\Development\wireshark\packaging\rpm\wireshark.spec.in;C:\Development\wireshark\packaging\source\git-export-release.sh.in;C:\Development\wireshark\wireshark.pc.in;C:\Development\wireshark\ws_version.h.in;C:\Program Files\CMake\share\cmake-3.13\Modules\BasicConfigVersion-AnyNewerVersion.cmake.in;C:\Program Files\CMake\share\cmake-3.13\Modules\CMakeCInformation.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\CMakeCXXInformation.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\CMakeCheckCompilerFlagCommonPatterns.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\CMakeCommonLanguageInclude.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\CMakeGenericSystem.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\CMakeInitializeConfigs.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\CMakeLanguageInformation.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\CMakePackageConfigHelpers.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\CMakeParseArguments.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\CMakePushCheckState.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\CMakeRCInformation.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\CMakeSystemSpecificInformation.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\CMakeSystemSpecificInitialize.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\CheckCCompilerFlag.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\CheckCSourceCompiles.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\CheckCSourceRuns.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\CheckCXXCompilerFlag.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\CheckCXXSourceCompiles.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\CheckFunctionExists.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\CheckIncludeFile.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\CheckIncludeFiles.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\CheckStructHasMember.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\CheckSymbolExists.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\CheckVariableExists.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\Compiler\CMakeCommonCompilerMacros.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\Compiler\MSVC-C.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\Compiler\MSVC-CXX.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\FeatureSummary.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\FindCygwin.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\FindGit.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\FindPackageHandleStandardArgs.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\FindPackageMessage.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\FindPerl.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\FindPkgConfig.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\FindPython\Support.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\FindPython3.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\GNUInstallDirs.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\InstallRequiredSystemLibraries.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\Platform\Windows-MSVC-C.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\Platform\Windows-MSVC-CXX.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\Platform\Windows-MSVC.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\Platform\Windows.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\Platform\WindowsPaths.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\WriteBasicConfigVersionFile.cmake;D:\Qt\5.12.0\msvc2017_64\lib\cmake\Qt5Core\Qt5CoreConfig.cmake;D:\Qt\5.12.0\msvc2017_64\lib\cmake\Qt5Core\Qt5CoreConfigExtras.cmake;D:\Qt\5.12.0\msvc2017_64\lib\cmake\Qt5Core\Qt5CoreConfigExtrasMkspecDir.cmake;D:\Qt\5.12.0\msvc2017_64\lib\cmake\Qt5Core\Qt5CoreConfigVersion.cmake;D:\Qt\5.12.0\msvc2017_64\lib\cmake\Qt5Core\Qt5CoreMacros.cmake;D:\Qt\5.12.0\msvc2017_64\lib\cmake\Qt5Gui\Qt5GuiConfig.cmake;D:\Qt\5.12.0\msvc2017_64\lib\cmake\Qt5Gui\Qt5GuiConfigExtras.cmake;D:\Qt\5.12.0\msvc2017_64\lib\cmake\Qt5Gui\Qt5GuiConfigVersion.cmake;D:\Qt\5.12.0\msvc2017_64\lib\cmake\Qt5Gui\Qt5Gui_QGifPlugin.cmake;D:\Qt\5.12.0\msvc2017_64\lib\cmake\Qt5Gui\Qt5Gui_QICNSPlugin.cmake;D:\Qt\5.12.0\msvc2017_64\lib\cmake\Qt5Gui\Qt5Gui_QICOPlugin.cmake;D:\Qt\5.12.0\msvc2017_64\lib\cmake\Qt5Gui\Qt5Gui_QJpegPlugin.cmake;D:\Qt\5.12.0\msvc2017_64\lib\cmake\Qt5Gui\Qt5Gui_QMinimalIntegrationPlugin.cmake;D:\Qt\5.12.0\msvc2017_64\lib\cmake\Qt5Gui\Qt5Gui_QOffscreenIntegrationPlugin.cmake;D:\Qt\5.12.0\msvc2017_64\lib\cmake\Qt5Gui\Qt5Gui_QTgaPlugin.cmake;D:\Qt\5.12.0\msvc2017_64\lib\cmake\Qt5Gui\Qt5Gui_QTiffPlugin.cmake;D:\Qt\5.12.0\msvc2017_64\lib\cmake\Qt5Gui\Qt5Gui_QTuioTouchPlugin.cmake;D:\Qt\5.12.0\msvc2017_64\lib\cmake\Qt5Gui\Qt5Gui_QVirtualKeyboardPlugin.cmake;D:\Qt\5.12.0\msvc2017_64\lib\cmake\Qt5Gui\Qt5Gui_QWbmpPlugin.cmake;D:\Qt\5.12.0\msvc2017_64\lib\cmake\Qt5Gui\Qt5Gui_QWebGLIntegrationPlugin.cmake;D:\Qt\5.12.0\msvc2017_64\lib\cmake\Qt5Gui\Qt5Gui_QWebpPlugin.cmake;D:\Qt\5.12.0\msvc2017_64\lib\cmake\Qt5Gui\Qt5Gui_QWindowsDirect2DIntegrationPlugin.cmake;D:\Qt\5.12.0\msvc2017_64\lib\cmake\Qt5Gui\Qt5Gui_QWindowsIntegrationPlugin.cmake;D:\Qt\5.12.0\msvc2017_64\lib\cmake\Qt5Gui\Qt5Gui_QXdgDesktopPortalThemePlugin.cmake;D:\Qt\5.12.0\msvc2017_64\lib\cmake\Qt5LinguistTools\Qt5LinguistToolsConfig.cmake;D:\Qt\5.12.0\msvc2017_64\lib\cmake\Qt5LinguistTools\Qt5LinguistToolsConfigVersion.cmake;D:\Qt\5.12.0\msvc2017_64\lib\cmake\Qt5LinguistTools\Qt5LinguistToolsMacros.cmake;D:\Qt\5.12.0\msvc2017_64\lib\cmake\Qt5Multimedia\Qt5MultimediaConfig.cmake;D:\Qt\5.12.0\msvc2017_64\lib\cmake\Qt5Multimedia\Qt5MultimediaConfigVersion.cmake;D:\Qt\5.12.0\msvc2017_64\lib\cmake\Qt5Multimedia\Qt5Multimedia_AudioCaptureServicePlugin.cmake;D:\Qt\5.12.0\msvc2017_64\lib\cmake\Qt5Multimedia\Qt5Multimedia_DSServicePlugin.cmake;D:\Qt\5.12.0\msvc2017_64\lib\cmake\Qt5Multimedia\Qt5Multimedia_QM3uPlaylistPlugin.cmake;D:\Qt\5.12.0\msvc2017_64\lib\cmake\Qt5Multimedia\Qt5Multimedia_QWasapiPlugin.cmake;D:\Qt\5.12.0\msvc2017_64\lib\cmake\Qt5Multimedia\Qt5Multimedia_QWindowsAudioPlugin.cmake;D:\Qt\5.12.0\msvc2017_64\lib\cmake\Qt5Multimedia\Qt5Multimedia_WMFServicePlugin.cmake;D:\Qt\5.12.0\msvc2017_64\lib\cmake\Qt5Network\Qt5NetworkConfig.cmake;D:\Qt\5.12.0\msvc2017_64\lib\cmake\Qt5Network\Qt5NetworkConfigVersion.cmake;D:\Qt\5.12.0\msvc2017_64\lib\cmake\Qt5Network\Qt5Network_QGenericEnginePlugin.cmake;D:\Qt\5.12.0\msvc2017_64\lib\cmake\Qt5PrintSupport\Qt5PrintSupportConfig.cmake;D:\Qt\5.12.0\msvc2017_64\lib\cmake\Qt5PrintSupport\Qt5PrintSupportConfigVersion.cmake;D:\Qt\5.12.0\msvc2017_64\lib\cmake\Qt5PrintSupport\Qt5PrintSupport_QWindowsPrinterSupportPlugin.cmake;D:\Qt\5.12.0\msvc2017_64\lib\cmake\Qt5Svg\Qt5SvgConfig.cmake;D:\Qt\5.12.0\msvc2017_64\lib\cmake\Qt5Svg\Qt5SvgConfigVersion.cmake;D:\Qt\5.12.0\msvc2017_64\lib\cmake\Qt5Svg\Qt5Svg_QSvgIconPlugin.cmake;D:\Qt\5.12.0\msvc2017_64\lib\cmake\Qt5Svg\Qt5Svg_QSvgPlugin.cmake;D:\Qt\5.12.0\msvc2017_64\lib\cmake\Qt5Widgets\Qt5WidgetsConfig.cmake;D:\Qt\5.12.0\msvc2017_64\lib\cmake\Qt5Widgets\Qt5WidgetsConfigExtras.cmake;D:\Qt\5.12.0\msvc2017_64\lib\cmake\Qt5Widgets\Qt5WidgetsConfigVersion.cmake;D:\Qt\5.12.0\msvc2017_64\lib\cmake\Qt5Widgets\Qt5WidgetsMacros.cmake;D:\Qt\5.12.0\msvc2017_64\lib\cmake\Qt5Widgets\Qt5Widgets_QWindowsVistaStylePlugin.cmake;D:\Qt\5.12.0\msvc2017_64\lib\cmake\Qt5WinExtras\Qt5WinExtrasConfig.cmake;D:\Qt\5.12.0\msvc2017_64\lib\cmake\Qt5WinExtras\Qt5WinExtrasConfigVersion.cmake;C:\Development\wireshark\CMakeLists.txt;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">C:\Development\wireshark\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">Building Custom Rule C:/Development/wireshark/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -SC:/Development/wireshark -BC:/Development/wireshark --check-stamp-file C:/Development/wireshark/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">C:/Development/wireshark/CMakeLists.txt;C:\Development\wireshark\CMakeFiles\3.13.2\CMakeCCompiler.cmake;C:\Development\wireshark\CMakeFiles\3.13.2\CMakeCXXCompiler.cmake;C:\Development\wireshark\CMakeFiles\3.13.2\CMakeRCCompiler.cmake;C:\Development\wireshark\CMakeFiles\3.13.2\CMakeSystem.cmake;C:\Development\wireshark\CMakeLists.txt;C:\Development\wireshark\CMakeOptions.txt;C:\Development\wireshark\ConfigureChecks.cmake;C:\Development\wireshark\WiresharkConfig.cmake.in;C:\Development\wireshark\cmake\modules\CheckCLinkerFlag.cmake;C:\Development\wireshark\cmake\modules\FindAIRPCAP.cmake;C:\Development\wireshark\cmake\modules\FindBCG729.cmake;C:\Development\wireshark\cmake\modules\FindCARES.cmake;C:\Development\wireshark\cmake\modules\FindChocolatey.cmake;C:\Development\wireshark\cmake\modules\FindDOXYGEN.cmake;C:\Development\wireshark\cmake\modules\FindGCRYPT.cmake;C:\Development\wireshark\cmake\modules\FindGLIB2.cmake;C:\Development\wireshark\cmake\modules\FindGMODULE2.cmake;C:\Development\wireshark\cmake\modules\FindGNUTLS.cmake;C:\Development\wireshark\cmake\modules\FindGTHREAD2.cmake;C:\Development\wireshark\cmake\modules\FindKERBEROS.cmake;C:\Development\wireshark\cmake\modules\FindLEX.cmake;C:\Development\wireshark\cmake\modules\FindLIBSSH.cmake;C:\Development\wireshark\cmake\modules\FindLUA.cmake;C:\Development\wireshark\cmake\modules\FindLZ4.cmake;C:\Development\wireshark\cmake\modules\FindLibXml2.cmake;C:\Development\wireshark\cmake\modules\FindMSVC_REDIST.cmake;C:\Development\wireshark\cmake\modules\FindMaxMindDB.cmake;C:\Development\wireshark\cmake\modules\FindNGHTTP2.cmake;C:\Development\wireshark\cmake\modules\FindNSIS.cmake;C:\Development\wireshark\cmake\modules\FindPCAP.cmake;C:\Development\wireshark\cmake\modules\FindPOD.cmake;C:\Development\wireshark\cmake\modules\FindPortableApps.cmake;C:\Development\wireshark\cmake\modules\FindPowerShell.cmake;C:\Development\wireshark\cmake\modules\FindSBC.cmake;C:\Development\wireshark\cmake\modules\FindSMI.cmake;C:\Development\wireshark\cmake\modules\FindSNAPPY.cmake;C:\Development\wireshark\cmake\modules\FindSPANDSP.cmake;C:\Development\wireshark\cmake\modules\FindWSWinLibs.cmake;C:\Development\wireshark\cmake\modules\FindWiX.cmake;C:\Development\wireshark\cmake\modules\FindWinSparkle.cmake;C:\Development\wireshark\cmake\modules\FindYACC.cmake;C:\Development\wireshark\cmake\modules\FindZLIB.cmake;C:\Development\wireshark\cmake\modules\UseAsn2Wrs.cmake;C:\Development\wireshark\cmake\modules\UseCheckAPI.cmake;C:\Development\wireshark\cmake\modules\UseCustomIncludes.cmake;C:\Development\wireshark\cmake\modules\UseExecutableResources.cmake;C:\Development\wireshark\cmake\modules\UseLemon.cmake;C:\Development\wireshark\cmake\modules\UseMakePluginReg.cmake;C:\Development\wireshark\cmake\modules\UseMakeTaps.cmake;C:\Development\wireshark\cmake\modules\gmxTestLargeFiles.cmake;C:\Development\wireshark\cmakeconfig.h.in;C:\Development\wireshark\doxygen.cfg.in;C:\Development\wireshark\image\cli_template.rc.in;C:\Development\wireshark\image\dumpcap.rc.in;C:\Development\wireshark\image\libwireshark.rc.in;C:\Development\wireshark\image\libwscodecs.rc.in;C:\Development\wireshark\image\libwsutil.rc.in;C:\Development\wireshark\image\tshark.rc.in;C:\Development\wireshark\image\wireshark.exe.manifest.in;C:\Development\wireshark\image\wireshark.rc.in;C:\Development\wireshark\image\wiretap.rc.in;C:\Development\wireshark\packaging\macosx\Info.plist.in;C:\Development\wireshark\packaging\macosx\Read_me_first.rtf.in;C:\Development\wireshark\packaging\macosx\Wireshark_package.pmdoc\index.xml.in;C:\Development\wireshark\packaging\macosx\osx-app.sh.in;C:\Development\wireshark\packaging\macosx\osx-dmg.sh.in;C:\Development\wireshark\packaging\rpm\wireshark.spec.in;C:\Development\wireshark\packaging\source\git-export-release.sh.in;C:\Development\wireshark\wireshark.pc.in;C:\Development\wireshark\ws_version.h.in;C:\Program Files\CMake\share\cmake-3.13\Modules\BasicConfigVersion-AnyNewerVersion.cmake.in;C:\Program Files\CMake\share\cmake-3.13\Modules\CMakeCInformation.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\CMakeCXXInformation.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\CMakeCheckCompilerFlagCommonPatterns.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\CMakeCommonLanguageInclude.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\CMakeGenericSystem.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\CMakeInitializeConfigs.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\CMakeLanguageInformation.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\CMakePackageConfigHelpers.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\CMakeParseArguments.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\CMakePushCheckState.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\CMakeRCInformation.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\CMakeSystemSpecificInformation.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\CMakeSystemSpecificInitialize.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\CheckCCompilerFlag.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\CheckCSourceCompiles.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\CheckCSourceRuns.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\CheckCXXCompilerFlag.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\CheckCXXSourceCompiles.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\CheckFunctionExists.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\CheckIncludeFile.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\CheckIncludeFiles.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\CheckStructHasMember.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\CheckSymbolExists.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\CheckVariableExists.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\Compiler\CMakeCommonCompilerMacros.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\Compiler\MSVC-C.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\Compiler\MSVC-CXX.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\FeatureSummary.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\FindCygwin.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\FindGit.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\FindPackageHandleStandardArgs.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\FindPackageMessage.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\FindPerl.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\FindPkgConfig.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\FindPython\Support.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\FindPython3.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\GNUInstallDirs.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\InstallRequiredSystemLibraries.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\Platform\Windows-MSVC-C.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\Platform\Windows-MSVC-CXX.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\Platform\Windows-MSVC.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\Platform\Windows.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\Platform\WindowsPaths.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\WriteBasicConfigVersionFile.cmake;D:\Qt\5.12.0\msvc2017_64\lib\cmake\Qt5Core\Qt5CoreConfig.cmake;D:\Qt\5.12.0\msvc2017_64\lib\cmake\Qt5Core\Qt5CoreConfigExtras.cmake;D:\Qt\5.12.0\msvc2017_64\lib\cmake\Qt5Core\Qt5CoreConfigExtrasMkspecDir.cmake;D:\Qt\5.12.0\msvc2017_64\lib\cmake\Qt5Core\Qt5CoreConfigVersion.cmake;D:\Qt\5.12.0\msvc2017_64\lib\cmake\Qt5Core\Qt5CoreMacros.cmake;D:\Qt\5.12.0\msvc2017_64\lib\cmake\Qt5Gui\Qt5GuiConfig.cmake;D:\Qt\5.12.0\msvc2017_64\lib\cmake\Qt5Gui\Qt5GuiConfigExtras.cmake;D:\Qt\5.12.0\msvc2017_64\lib\cmake\Qt5Gui\Qt5GuiConfigVersion.cmake;D:\Qt\5.12.0\msvc2017_64\lib\cmake\Qt5Gui\Qt5Gui_QGifPlugin.cmake;D:\Qt\5.12.0\msvc2017_64\lib\cmake\Qt5Gui\Qt5Gui_QICNSPlugin.cmake;D:\Qt\5.12.0\msvc2017_64\lib\cmake\Qt5Gui\Qt5Gui_QICOPlugin.cmake;D:\Qt\5.12.0\msvc2017_64\lib\cmake\Qt5Gui\Qt5Gui_QJpegPlugin.cmake;D:\Qt\5.12.0\msvc2017_64\lib\cmake\Qt5Gui\Qt5Gui_QMinimalIntegrationPlugin.cmake;D:\Qt\5.12.0\msvc2017_64\lib\cmake\Qt5Gui\Qt5Gui_QOffscreenIntegrationPlugin.cmake;D:\Qt\5.12.0\msvc2017_64\lib\cmake\Qt5Gui\Qt5Gui_QTgaPlugin.cmake;D:\Qt\5.12.0\msvc2017_64\lib\cmake\Qt5Gui\Qt5Gui_QTiffPlugin.cmake;D:\Qt\5.12.0\msvc2017_64\lib\cmake\Qt5Gui\Qt5Gui_QTuioTouchPlugin.cmake;D:\Qt\5.12.0\msvc2017_64\lib\cmake\Qt5Gui\Qt5Gui_QVirtualKeyboardPlugin.cmake;D:\Qt\5.12.0\msvc2017_64\lib\cmake\Qt5Gui\Qt5Gui_QWbmpPlugin.cmake;D:\Qt\5.12.0\msvc2017_64\lib\cmake\Qt5Gui\Qt5Gui_QWebGLIntegrationPlugin.cmake;D:\Qt\5.12.0\msvc2017_64\lib\cmake\Qt5Gui\Qt5Gui_QWebpPlugin.cmake;D:\Qt\5.12.0\msvc2017_64\lib\cmake\Qt5Gui\Qt5Gui_QWindowsDirect2DIntegrationPlugin.cmake;D:\Qt\5.12.0\msvc2017_64\lib\cmake\Qt5Gui\Qt5Gui_QWindowsIntegrationPlugin.cmake;D:\Qt\5.12.0\msvc2017_64\lib\cmake\Qt5Gui\Qt5Gui_QXdgDesktopPortalThemePlugin.cmake;D:\Qt\5.12.0\msvc2017_64\lib\cmake\Qt5LinguistTools\Qt5LinguistToolsConfig.cmake;D:\Qt\5.12.0\msvc2017_64\lib\cmake\Qt5LinguistTools\Qt5LinguistToolsConfigVersion.cmake;D:\Qt\5.12.0\msvc2017_64\lib\cmake\Qt5LinguistTools\Qt5LinguistToolsMacros.cmake;D:\Qt\5.12.0\msvc2017_64\lib\cmake\Qt5Multimedia\Qt5MultimediaConfig.cmake;D:\Qt\5.12.0\msvc2017_64\lib\cmake\Qt5Multimedia\Qt5MultimediaConfigVersion.cmake;D:\Qt\5.12.0\msvc2017_64\lib\cmake\Qt5Multimedia\Qt5Multimedia_AudioCaptureServicePlugin.cmake;D:\Qt\5.12.0\msvc2017_64\lib\cmake\Qt5Multimedia\Qt5Multimedia_DSServicePlugin.cmake;D:\Qt\5.12.0\msvc2017_64\lib\cmake\Qt5Multimedia\Qt5Multimedia_QM3uPlaylistPlugin.cmake;D:\Qt\5.12.0\msvc2017_64\lib\cmake\Qt5Multimedia\Qt5Multimedia_QWasapiPlugin.cmake;D:\Qt\5.12.0\msvc2017_64\lib\cmake\Qt5Multimedia\Qt5Multimedia_QWindowsAudioPlugin.cmake;D:\Qt\5.12.0\msvc2017_64\lib\cmake\Qt5Multimedia\Qt5Multimedia_WMFServicePlugin.cmake;D:\Qt\5.12.0\msvc2017_64\lib\cmake\Qt5Network\Qt5NetworkConfig.cmake;D:\Qt\5.12.0\msvc2017_64\lib\cmake\Qt5Network\Qt5NetworkConfigVersion.cmake;D:\Qt\5.12.0\msvc2017_64\lib\cmake\Qt5Network\Qt5Network_QGenericEnginePlugin.cmake;D:\Qt\5.12.0\msvc2017_64\lib\cmake\Qt5PrintSupport\Qt5PrintSupportConfig.cmake;D:\Qt\5.12.0\msvc2017_64\lib\cmake\Qt5PrintSupport\Qt5PrintSupportConfigVersion.cmake;D:\Qt\5.12.0\msvc2017_64\lib\cmake\Qt5PrintSupport\Qt5PrintSupport_QWindowsPrinterSupportPlugin.cmake;D:\Qt\5.12.0\msvc2017_64\lib\cmake\Qt5Svg\Qt5SvgConfig.cmake;D:\Qt\5.12.0\msvc2017_64\lib\cmake\Qt5Svg\Qt5SvgConfigVersion.cmake;D:\Qt\5.12.0\msvc2017_64\lib\cmake\Qt5Svg\Qt5Svg_QSvgIconPlugin.cmake;D:\Qt\5.12.0\msvc2017_64\lib\cmake\Qt5Svg\Qt5Svg_QSvgPlugin.cmake;D:\Qt\5.12.0\msvc2017_64\lib\cmake\Qt5Widgets\Qt5WidgetsConfig.cmake;D:\Qt\5.12.0\msvc2017_64\lib\cmake\Qt5Widgets\Qt5WidgetsConfigExtras.cmake;D:\Qt\5.12.0\msvc2017_64\lib\cmake\Qt5Widgets\Qt5WidgetsConfigVersion.cmake;D:\Qt\5.12.0\msvc2017_64\lib\cmake\Qt5Widgets\Qt5WidgetsMacros.cmake;D:\Qt\5.12.0\msvc2017_64\lib\cmake\Qt5Widgets\Qt5Widgets_QWindowsVistaStylePlugin.cmake;D:\Qt\5.12.0\msvc2017_64\lib\cmake\Qt5WinExtras\Qt5WinExtrasConfig.cmake;D:\Qt\5.12.0\msvc2017_64\lib\cmake\Qt5WinExtras\Qt5WinExtrasConfigVersion.cmake;C:\Development\wireshark\CMakeLists.txt;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">C:\Development\wireshark\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">Building Custom Rule C:/Development/wireshark/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -SC:/Development/wireshark -BC:/Development/wireshark --check-stamp-file C:/Development/wireshark/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">C:/Development/wireshark/CMakeLists.txt;C:\Development\wireshark\CMakeFiles\3.13.2\CMakeCCompiler.cmake;C:\Development\wireshark\CMakeFiles\3.13.2\CMakeCXXCompiler.cmake;C:\Development\wireshark\CMakeFiles\3.13.2\CMakeRCCompiler.cmake;C:\Development\wireshark\CMakeFiles\3.13.2\CMakeSystem.cmake;C:\Development\wireshark\CMakeLists.txt;C:\Development\wireshark\CMakeOptions.txt;C:\Development\wireshark\ConfigureChecks.cmake;C:\Development\wireshark\WiresharkConfig.cmake.in;C:\Development\wireshark\cmake\modules\CheckCLinkerFlag.cmake;C:\Development\wireshark\cmake\modules\FindAIRPCAP.cmake;C:\Development\wireshark\cmake\modules\FindBCG729.cmake;C:\Development\wireshark\cmake\modules\FindCARES.cmake;C:\Development\wireshark\cmake\modules\FindChocolatey.cmake;C:\Development\wireshark\cmake\modules\FindDOXYGEN.cmake;C:\Development\wireshark\cmake\modules\FindGCRYPT.cmake;C:\Development\wireshark\cmake\modules\FindGLIB2.cmake;C:\Development\wireshark\cmake\modules\FindGMODULE2.cmake;C:\Development\wireshark\cmake\modules\FindGNUTLS.cmake;C:\Development\wireshark\cmake\modules\FindGTHREAD2.cmake;C:\Development\wireshark\cmake\modules\FindKERBEROS.cmake;C:\Development\wireshark\cmake\modules\FindLEX.cmake;C:\Development\wireshark\cmake\modules\FindLIBSSH.cmake;C:\Development\wireshark\cmake\modules\FindLUA.cmake;C:\Development\wireshark\cmake\modules\FindLZ4.cmake;C:\Development\wireshark\cmake\modules\FindLibXml2.cmake;C:\Development\wireshark\cmake\modules\FindMSVC_REDIST.cmake;C:\Development\wireshark\cmake\modules\FindMaxMindDB.cmake;C:\Development\wireshark\cmake\modules\FindNGHTTP2.cmake;C:\Development\wireshark\cmake\modules\FindNSIS.cmake;C:\Development\wireshark\cmake\modules\FindPCAP.cmake;C:\Development\wireshark\cmake\modules\FindPOD.cmake;C:\Development\wireshark\cmake\modules\FindPortableApps.cmake;C:\Development\wireshark\cmake\modules\FindPowerShell.cmake;C:\Development\wireshark\cmake\modules\FindSBC.cmake;C:\Development\wireshark\cmake\modules\FindSMI.cmake;C:\Development\wireshark\cmake\modules\FindSNAPPY.cmake;C:\Development\wireshark\cmake\modules\FindSPANDSP.cmake;C:\Development\wireshark\cmake\modules\FindWSWinLibs.cmake;C:\Development\wireshark\cmake\modules\FindWiX.cmake;C:\Development\wireshark\cmake\modules\FindWinSparkle.cmake;C:\Development\wireshark\cmake\modules\FindYACC.cmake;C:\Development\wireshark\cmake\modules\FindZLIB.cmake;C:\Development\wireshark\cmake\modules\UseAsn2Wrs.cmake;C:\Development\wireshark\cmake\modules\UseCheckAPI.cmake;C:\Development\wireshark\cmake\modules\UseCustomIncludes.cmake;C:\Development\wireshark\cmake\modules\UseExecutableResources.cmake;C:\Development\wireshark\cmake\modules\UseLemon.cmake;C:\Development\wireshark\cmake\modules\UseMakePluginReg.cmake;C:\Development\wireshark\cmake\modules\UseMakeTaps.cmake;C:\Development\wireshark\cmake\modules\gmxTestLargeFiles.cmake;C:\Development\wireshark\cmakeconfig.h.in;C:\Development\wireshark\doxygen.cfg.in;C:\Development\wireshark\image\cli_template.rc.in;C:\Development\wireshark\image\dumpcap.rc.in;C:\Development\wireshark\image\libwireshark.rc.in;C:\Development\wireshark\image\libwscodecs.rc.in;C:\Development\wireshark\image\libwsutil.rc.in;C:\Development\wireshark\image\tshark.rc.in;C:\Development\wireshark\image\wireshark.exe.manifest.in;C:\Development\wireshark\image\wireshark.rc.in;C:\Development\wireshark\image\wiretap.rc.in;C:\Development\wireshark\packaging\macosx\Info.plist.in;C:\Development\wireshark\packaging\macosx\Read_me_first.rtf.in;C:\Development\wireshark\packaging\macosx\Wireshark_package.pmdoc\index.xml.in;C:\Development\wireshark\packaging\macosx\osx-app.sh.in;C:\Development\wireshark\packaging\macosx\osx-dmg.sh.in;C:\Development\wireshark\packaging\rpm\wireshark.spec.in;C:\Development\wireshark\packaging\source\git-export-release.sh.in;C:\Development\wireshark\wireshark.pc.in;C:\Development\wireshark\ws_version.h.in;C:\Program Files\CMake\share\cmake-3.13\Modules\BasicConfigVersion-AnyNewerVersion.cmake.in;C:\Program Files\CMake\share\cmake-3.13\Modules\CMakeCInformation.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\CMakeCXXInformation.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\CMakeCheckCompilerFlagCommonPatterns.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\CMakeCommonLanguageInclude.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\CMakeGenericSystem.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\CMakeInitializeConfigs.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\CMakeLanguageInformation.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\CMakePackageConfigHelpers.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\CMakeParseArguments.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\CMakePushCheckState.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\CMakeRCInformation.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\CMakeSystemSpecificInformation.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\CMakeSystemSpecificInitialize.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\CheckCCompilerFlag.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\CheckCSourceCompiles.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\CheckCSourceRuns.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\CheckCXXCompilerFlag.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\CheckCXXSourceCompiles.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\CheckFunctionExists.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\CheckIncludeFile.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\CheckIncludeFiles.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\CheckStructHasMember.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\CheckSymbolExists.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\CheckVariableExists.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\Compiler\CMakeCommonCompilerMacros.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\Compiler\MSVC-C.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\Compiler\MSVC-CXX.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\FeatureSummary.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\FindCygwin.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\FindGit.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\FindPackageHandleStandardArgs.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\FindPackageMessage.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\FindPerl.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\FindPkgConfig.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\FindPython\Support.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\FindPython3.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\GNUInstallDirs.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\InstallRequiredSystemLibraries.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\Platform\Windows-MSVC-C.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\Platform\Windows-MSVC-CXX.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\Platform\Windows-MSVC.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\Platform\Windows.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\Platform\WindowsPaths.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\WriteBasicConfigVersionFile.cmake;D:\Qt\5.12.0\msvc2017_64\lib\cmake\Qt5Core\Qt5CoreConfig.cmake;D:\Qt\5.12.0\msvc2017_64\lib\cmake\Qt5Core\Qt5CoreConfigExtras.cmake;D:\Qt\5.12.0\msvc2017_64\lib\cmake\Qt5Core\Qt5CoreConfigExtrasMkspecDir.cmake;D:\Qt\5.12.0\msvc2017_64\lib\cmake\Qt5Core\Qt5CoreConfigVersion.cmake;D:\Qt\5.12.0\msvc2017_64\lib\cmake\Qt5Core\Qt5CoreMacros.cmake;D:\Qt\5.12.0\msvc2017_64\lib\cmake\Qt5Gui\Qt5GuiConfig.cmake;D:\Qt\5.12.0\msvc2017_64\lib\cmake\Qt5Gui\Qt5GuiConfigExtras.cmake;D:\Qt\5.12.0\msvc2017_64\lib\cmake\Qt5Gui\Qt5GuiConfigVersion.cmake;D:\Qt\5.12.0\msvc2017_64\lib\cmake\Qt5Gui\Qt5Gui_QGifPlugin.cmake;D:\Qt\5.12.0\msvc2017_64\lib\cmake\Qt5Gui\Qt5Gui_QICNSPlugin.cmake;D:\Qt\5.12.0\msvc2017_64\lib\cmake\Qt5Gui\Qt5Gui_QICOPlugin.cmake;D:\Qt\5.12.0\msvc2017_64\lib\cmake\Qt5Gui\Qt5Gui_QJpegPlugin.cmake;D:\Qt\5.12.0\msvc2017_64\lib\cmake\Qt5Gui\Qt5Gui_QMinimalIntegrationPlugin.cmake;D:\Qt\5.12.0\msvc2017_64\lib\cmake\Qt5Gui\Qt5Gui_QOffscreenIntegrationPlugin.cmake;D:\Qt\5.12.0\msvc2017_64\lib\cmake\Qt5Gui\Qt5Gui_QTgaPlugin.cmake;D:\Qt\5.12.0\msvc2017_64\lib\cmake\Qt5Gui\Qt5Gui_QTiffPlugin.cmake;D:\Qt\5.12.0\msvc2017_64\lib\cmake\Qt5Gui\Qt5Gui_QTuioTouchPlugin.cmake;D:\Qt\5.12.0\msvc2017_64\lib\cmake\Qt5Gui\Qt5Gui_QVirtualKeyboardPlugin.cmake;D:\Qt\5.12.0\msvc2017_64\lib\cmake\Qt5Gui\Qt5Gui_QWbmpPlugin.cmake;D:\Qt\5.12.0\msvc2017_64\lib\cmake\Qt5Gui\Qt5Gui_QWebGLIntegrationPlugin.cmake;D:\Qt\5.12.0\msvc2017_64\lib\cmake\Qt5Gui\Qt5Gui_QWebpPlugin.cmake;D:\Qt\5.12.0\msvc2017_64\lib\cmake\Qt5Gui\Qt5Gui_QWindowsDirect2DIntegrationPlugin.cmake;D:\Qt\5.12.0\msvc2017_64\lib\cmake\Qt5Gui\Qt5Gui_QWindowsIntegrationPlugin.cmake;D:\Qt\5.12.0\msvc2017_64\lib\cmake\Qt5Gui\Qt5Gui_QXdgDesktopPortalThemePlugin.cmake;D:\Qt\5.12.0\msvc2017_64\lib\cmake\Qt5LinguistTools\Qt5LinguistToolsConfig.cmake;D:\Qt\5.12.0\msvc2017_64\lib\cmake\Qt5LinguistTools\Qt5LinguistToolsConfigVersion.cmake;D:\Qt\5.12.0\msvc2017_64\lib\cmake\Qt5LinguistTools\Qt5LinguistToolsMacros.cmake;D:\Qt\5.12.0\msvc2017_64\lib\cmake\Qt5Multimedia\Qt5MultimediaConfig.cmake;D:\Qt\5.12.0\msvc2017_64\lib\cmake\Qt5Multimedia\Qt5MultimediaConfigVersion.cmake;D:\Qt\5.12.0\msvc2017_64\lib\cmake\Qt5Multimedia\Qt5Multimedia_AudioCaptureServicePlugin.cmake;D:\Qt\5.12.0\msvc2017_64\lib\cmake\Qt5Multimedia\Qt5Multimedia_DSServicePlugin.cmake;D:\Qt\5.12.0\msvc2017_64\lib\cmake\Qt5Multimedia\Qt5Multimedia_QM3uPlaylistPlugin.cmake;D:\Qt\5.12.0\msvc2017_64\lib\cmake\Qt5Multimedia\Qt5Multimedia_QWasapiPlugin.cmake;D:\Qt\5.12.0\msvc2017_64\lib\cmake\Qt5Multimedia\Qt5Multimedia_QWindowsAudioPlugin.cmake;D:\Qt\5.12.0\msvc2017_64\lib\cmake\Qt5Multimedia\Qt5Multimedia_WMFServicePlugin.cmake;D:\Qt\5.12.0\msvc2017_64\lib\cmake\Qt5Network\Qt5NetworkConfig.cmake;D:\Qt\5.12.0\msvc2017_64\lib\cmake\Qt5Network\Qt5NetworkConfigVersion.cmake;D:\Qt\5.12.0\msvc2017_64\lib\cmake\Qt5Network\Qt5Network_QGenericEnginePlugin.cmake;D:\Qt\5.12.0\msvc2017_64\lib\cmake\Qt5PrintSupport\Qt5PrintSupportConfig.cmake;D:\Qt\5.12.0\msvc2017_64\lib\cmake\Qt5PrintSupport\Qt5PrintSupportConfigVersion.cmake;D:\Qt\5.12.0\msvc2017_64\lib\cmake\Qt5PrintSupport\Qt5PrintSupport_QWindowsPrinterSupportPlugin.cmake;D:\Qt\5.12.0\msvc2017_64\lib\cmake\Qt5Svg\Qt5SvgConfig.cmake;D:\Qt\5.12.0\msvc2017_64\lib\cmake\Qt5Svg\Qt5SvgConfigVersion.cmake;D:\Qt\5.12.0\msvc2017_64\lib\cmake\Qt5Svg\Qt5Svg_QSvgIconPlugin.cmake;D:\Qt\5.12.0\msvc2017_64\lib\cmake\Qt5Svg\Qt5Svg_QSvgPlugin.cmake;D:\Qt\5.12.0\msvc2017_64\lib\cmake\Qt5Widgets\Qt5WidgetsConfig.cmake;D:\Qt\5.12.0\msvc2017_64\lib\cmake\Qt5Widgets\Qt5WidgetsConfigExtras.cmake;D:\Qt\5.12.0\msvc2017_64\lib\cmake\Qt5Widgets\Qt5WidgetsConfigVersion.cmake;D:\Qt\5.12.0\msvc2017_64\lib\cmake\Qt5Widgets\Qt5WidgetsMacros.cmake;D:\Qt\5.12.0\msvc2017_64\lib\cmake\Qt5Widgets\Qt5Widgets_QWindowsVistaStylePlugin.cmake;D:\Qt\5.12.0\msvc2017_64\lib\cmake\Qt5WinExtras\Qt5WinExtrasConfig.cmake;D:\Qt\5.12.0\msvc2017_64\lib\cmake\Qt5WinExtras\Qt5WinExtrasConfigVersion.cmake;C:\Development\wireshark\CMakeLists.txt;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">C:\Development\wireshark\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">Building Custom Rule C:/Development/wireshark/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -SC:/Development/wireshark -BC:/Development/wireshark --check-stamp-file C:/Development/wireshark/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">C:/Development/wireshark/CMakeLists.txt;C:\Development\wireshark\CMakeFiles\3.13.2\CMakeCCompiler.cmake;C:\Development\wireshark\CMakeFiles\3.13.2\CMakeCXXCompiler.cmake;C:\Development\wireshark\CMakeFiles\3.13.2\CMakeRCCompiler.cmake;C:\Development\wireshark\CMakeFiles\3.13.2\CMakeSystem.cmake;C:\Development\wireshark\CMakeLists.txt;C:\Development\wireshark\CMakeOptions.txt;C:\Development\wireshark\ConfigureChecks.cmake;C:\Development\wireshark\WiresharkConfig.cmake.in;C:\Development\wireshark\cmake\modules\CheckCLinkerFlag.cmake;C:\Development\wireshark\cmake\modules\FindAIRPCAP.cmake;C:\Development\wireshark\cmake\modules\FindBCG729.cmake;C:\Development\wireshark\cmake\modules\FindCARES.cmake;C:\Development\wireshark\cmake\modules\FindChocolatey.cmake;C:\Development\wireshark\cmake\modules\FindDOXYGEN.cmake;C:\Development\wireshark\cmake\modules\FindGCRYPT.cmake;C:\Development\wireshark\cmake\modules\FindGLIB2.cmake;C:\Development\wireshark\cmake\modules\FindGMODULE2.cmake;C:\Development\wireshark\cmake\modules\FindGNUTLS.cmake;C:\Development\wireshark\cmake\modules\FindGTHREAD2.cmake;C:\Development\wireshark\cmake\modules\FindKERBEROS.cmake;C:\Development\wireshark\cmake\modules\FindLEX.cmake;C:\Development\wireshark\cmake\modules\FindLIBSSH.cmake;C:\Development\wireshark\cmake\modules\FindLUA.cmake;C:\Development\wireshark\cmake\modules\FindLZ4.cmake;C:\Development\wireshark\cmake\modules\FindLibXml2.cmake;C:\Development\wireshark\cmake\modules\FindMSVC_REDIST.cmake;C:\Development\wireshark\cmake\modules\FindMaxMindDB.cmake;C:\Development\wireshark\cmake\modules\FindNGHTTP2.cmake;C:\Development\wireshark\cmake\modules\FindNSIS.cmake;C:\Development\wireshark\cmake\modules\FindPCAP.cmake;C:\Development\wireshark\cmake\modules\FindPOD.cmake;C:\Development\wireshark\cmake\modules\FindPortableApps.cmake;C:\Development\wireshark\cmake\modules\FindPowerShell.cmake;C:\Development\wireshark\cmake\modules\FindSBC.cmake;C:\Development\wireshark\cmake\modules\FindSMI.cmake;C:\Development\wireshark\cmake\modules\FindSNAPPY.cmake;C:\Development\wireshark\cmake\modules\FindSPANDSP.cmake;C:\Development\wireshark\cmake\modules\FindWSWinLibs.cmake;C:\Development\wireshark\cmake\modules\FindWiX.cmake;C:\Development\wireshark\cmake\modules\FindWinSparkle.cmake;C:\Development\wireshark\cmake\modules\FindYACC.cmake;C:\Development\wireshark\cmake\modules\FindZLIB.cmake;C:\Development\wireshark\cmake\modules\UseAsn2Wrs.cmake;C:\Development\wireshark\cmake\modules\UseCheckAPI.cmake;C:\Development\wireshark\cmake\modules\UseCustomIncludes.cmake;C:\Development\wireshark\cmake\modules\UseExecutableResources.cmake;C:\Development\wireshark\cmake\modules\UseLemon.cmake;C:\Development\wireshark\cmake\modules\UseMakePluginReg.cmake;C:\Development\wireshark\cmake\modules\UseMakeTaps.cmake;C:\Development\wireshark\cmake\modules\gmxTestLargeFiles.cmake;C:\Development\wireshark\cmakeconfig.h.in;C:\Development\wireshark\doxygen.cfg.in;C:\Development\wireshark\image\cli_template.rc.in;C:\Development\wireshark\image\dumpcap.rc.in;C:\Development\wireshark\image\libwireshark.rc.in;C:\Development\wireshark\image\libwscodecs.rc.in;C:\Development\wireshark\image\libwsutil.rc.in;C:\Development\wireshark\image\tshark.rc.in;C:\Development\wireshark\image\wireshark.exe.manifest.in;C:\Development\wireshark\image\wireshark.rc.in;C:\Development\wireshark\image\wiretap.rc.in;C:\Development\wireshark\packaging\macosx\Info.plist.in;C:\Development\wireshark\packaging\macosx\Read_me_first.rtf.in;C:\Development\wireshark\packaging\macosx\Wireshark_package.pmdoc\index.xml.in;C:\Development\wireshark\packaging\macosx\osx-app.sh.in;C:\Development\wireshark\packaging\macosx\osx-dmg.sh.in;C:\Development\wireshark\packaging\rpm\wireshark.spec.in;C:\Development\wireshark\packaging\source\git-export-release.sh.in;C:\Development\wireshark\wireshark.pc.in;C:\Development\wireshark\ws_version.h.in;C:\Program Files\CMake\share\cmake-3.13\Modules\BasicConfigVersion-AnyNewerVersion.cmake.in;C:\Program Files\CMake\share\cmake-3.13\Modules\CMakeCInformation.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\CMakeCXXInformation.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\CMakeCheckCompilerFlagCommonPatterns.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\CMakeCommonLanguageInclude.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\CMakeGenericSystem.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\CMakeInitializeConfigs.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\CMakeLanguageInformation.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\CMakePackageConfigHelpers.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\CMakeParseArguments.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\CMakePushCheckState.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\CMakeRCInformation.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\CMakeSystemSpecificInformation.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\CMakeSystemSpecificInitialize.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\CheckCCompilerFlag.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\CheckCSourceCompiles.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\CheckCSourceRuns.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\CheckCXXCompilerFlag.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\CheckCXXSourceCompiles.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\CheckFunctionExists.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\CheckIncludeFile.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\CheckIncludeFiles.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\CheckStructHasMember.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\CheckSymbolExists.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\CheckVariableExists.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\Compiler\CMakeCommonCompilerMacros.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\Compiler\MSVC-C.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\Compiler\MSVC-CXX.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\FeatureSummary.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\FindCygwin.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\FindGit.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\FindPackageHandleStandardArgs.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\FindPackageMessage.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\FindPerl.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\FindPkgConfig.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\FindPython\Support.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\FindPython3.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\GNUInstallDirs.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\InstallRequiredSystemLibraries.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\Platform\Windows-MSVC-C.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\Platform\Windows-MSVC-CXX.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\Platform\Windows-MSVC.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\Platform\Windows.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\Platform\WindowsPaths.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\WriteBasicConfigVersionFile.cmake;D:\Qt\5.12.0\msvc2017_64\lib\cmake\Qt5Core\Qt5CoreConfig.cmake;D:\Qt\5.12.0\msvc2017_64\lib\cmake\Qt5Core\Qt5CoreConfigExtras.cmake;D:\Qt\5.12.0\msvc2017_64\lib\cmake\Qt5Core\Qt5CoreConfigExtrasMkspecDir.cmake;D:\Qt\5.12.0\msvc2017_64\lib\cmake\Qt5Core\Qt5CoreConfigVersion.cmake;D:\Qt\5.12.0\msvc2017_64\lib\cmake\Qt5Core\Qt5CoreMacros.cmake;D:\Qt\5.12.0\msvc2017_64\lib\cmake\Qt5Gui\Qt5GuiConfig.cmake;D:\Qt\5.12.0\msvc2017_64\lib\cmake\Qt5Gui\Qt5GuiConfigExtras.cmake;D:\Qt\5.12.0\msvc2017_64\lib\cmake\Qt5Gui\Qt5GuiConfigVersion.cmake;D:\Qt\5.12.0\msvc2017_64\lib\cmake\Qt5Gui\Qt5Gui_QGifPlugin.cmake;D:\Qt\5.12.0\msvc2017_64\lib\cmake\Qt5Gui\Qt5Gui_QICNSPlugin.cmake;D:\Qt\5.12.0\msvc2017_64\lib\cmake\Qt5Gui\Qt5Gui_QICOPlugin.cmake;D:\Qt\5.12.0\msvc2017_64\lib\cmake\Qt5Gui\Qt5Gui_QJpegPlugin.cmake;D:\Qt\5.12.0\msvc2017_64\lib\cmake\Qt5Gui\Qt5Gui_QMinimalIntegrationPlugin.cmake;D:\Qt\5.12.0\msvc2017_64\lib\cmake\Qt5Gui\Qt5Gui_QOffscreenIntegrationPlugin.cmake;D:\Qt\5.12.0\msvc2017_64\lib\cmake\Qt5Gui\Qt5Gui_QTgaPlugin.cmake;D:\Qt\5.12.0\msvc2017_64\lib\cmake\Qt5Gui\Qt5Gui_QTiffPlugin.cmake;D:\Qt\5.12.0\msvc2017_64\lib\cmake\Qt5Gui\Qt5Gui_QTuioTouchPlugin.cmake;D:\Qt\5.12.0\msvc2017_64\lib\cmake\Qt5Gui\Qt5Gui_QVirtualKeyboardPlugin.cmake;D:\Qt\5.12.0\msvc2017_64\lib\cmake\Qt5Gui\Qt5Gui_QWbmpPlugin.cmake;D:\Qt\5.12.0\msvc2017_64\lib\cmake\Qt5Gui\Qt5Gui_QWebGLIntegrationPlugin.cmake;D:\Qt\5.12.0\msvc2017_64\lib\cmake\Qt5Gui\Qt5Gui_QWebpPlugin.cmake;D:\Qt\5.12.0\msvc2017_64\lib\cmake\Qt5Gui\Qt5Gui_QWindowsDirect2DIntegrationPlugin.cmake;D:\Qt\5.12.0\msvc2017_64\lib\cmake\Qt5Gui\Qt5Gui_QWindowsIntegrationPlugin.cmake;D:\Qt\5.12.0\msvc2017_64\lib\cmake\Qt5Gui\Qt5Gui_QXdgDesktopPortalThemePlugin.cmake;D:\Qt\5.12.0\msvc2017_64\lib\cmake\Qt5LinguistTools\Qt5LinguistToolsConfig.cmake;D:\Qt\5.12.0\msvc2017_64\lib\cmake\Qt5LinguistTools\Qt5LinguistToolsConfigVersion.cmake;D:\Qt\5.12.0\msvc2017_64\lib\cmake\Qt5LinguistTools\Qt5LinguistToolsMacros.cmake;D:\Qt\5.12.0\msvc2017_64\lib\cmake\Qt5Multimedia\Qt5MultimediaConfig.cmake;D:\Qt\5.12.0\msvc2017_64\lib\cmake\Qt5Multimedia\Qt5MultimediaConfigVersion.cmake;D:\Qt\5.12.0\msvc2017_64\lib\cmake\Qt5Multimedia\Qt5Multimedia_AudioCaptureServicePlugin.cmake;D:\Qt\5.12.0\msvc2017_64\lib\cmake\Qt5Multimedia\Qt5Multimedia_DSServicePlugin.cmake;D:\Qt\5.12.0\msvc2017_64\lib\cmake\Qt5Multimedia\Qt5Multimedia_QM3uPlaylistPlugin.cmake;D:\Qt\5.12.0\msvc2017_64\lib\cmake\Qt5Multimedia\Qt5Multimedia_QWasapiPlugin.cmake;D:\Qt\5.12.0\msvc2017_64\lib\cmake\Qt5Multimedia\Qt5Multimedia_QWindowsAudioPlugin.cmake;D:\Qt\5.12.0\msvc2017_64\lib\cmake\Qt5Multimedia\Qt5Multimedia_WMFServicePlugin.cmake;D:\Qt\5.12.0\msvc2017_64\lib\cmake\Qt5Network\Qt5NetworkConfig.cmake;D:\Qt\5.12.0\msvc2017_64\lib\cmake\Qt5Network\Qt5NetworkConfigVersion.cmake;D:\Qt\5.12.0\msvc2017_64\lib\cmake\Qt5Network\Qt5Network_QGenericEnginePlugin.cmake;D:\Qt\5.12.0\msvc2017_64\lib\cmake\Qt5PrintSupport\Qt5PrintSupportConfig.cmake;D:\Qt\5.12.0\msvc2017_64\lib\cmake\Qt5PrintSupport\Qt5PrintSupportConfigVersion.cmake;D:\Qt\5.12.0\msvc2017_64\lib\cmake\Qt5PrintSupport\Qt5PrintSupport_QWindowsPrinterSupportPlugin.cmake;D:\Qt\5.12.0\msvc2017_64\lib\cmake\Qt5Svg\Qt5SvgConfig.cmake;D:\Qt\5.12.0\msvc2017_64\lib\cmake\Qt5Svg\Qt5SvgConfigVersion.cmake;D:\Qt\5.12.0\msvc2017_64\lib\cmake\Qt5Svg\Qt5Svg_QSvgIconPlugin.cmake;D:\Qt\5.12.0\msvc2017_64\lib\cmake\Qt5Svg\Qt5Svg_QSvgPlugin.cmake;D:\Qt\5.12.0\msvc2017_64\lib\cmake\Qt5Widgets\Qt5WidgetsConfig.cmake;D:\Qt\5.12.0\msvc2017_64\lib\cmake\Qt5Widgets\Qt5WidgetsConfigExtras.cmake;D:\Qt\5.12.0\msvc2017_64\lib\cmake\Qt5Widgets\Qt5WidgetsConfigVersion.cmake;D:\Qt\5.12.0\msvc2017_64\lib\cmake\Qt5Widgets\Qt5WidgetsMacros.cmake;D:\Qt\5.12.0\msvc2017_64\lib\cmake\Qt5Widgets\Qt5Widgets_QWindowsVistaStylePlugin.cmake;D:\Qt\5.12.0\msvc2017_64\lib\cmake\Qt5WinExtras\Qt5WinExtrasConfig.cmake;D:\Qt\5.12.0\msvc2017_64\lib\cmake\Qt5WinExtras\Qt5WinExtrasConfigVersion.cmake;C:\Development\wireshark\CMakeLists.txt;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">C:\Development\wireshark\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <None Include="C:\Development\wireshark\CMakeFiles\copy_data_files" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="C:\Development\wireshark\ZERO_CHECK.vcxproj">
      <Project>{B765B3E1-9AF0-39DF-BCC2-760F120CAE35}</Project>
      <Name>ZERO_CHECK</Name>
      <ReferenceOutputAssembly>false</ReferenceOutputAssembly>
      <CopyToOutputDirectory>Never</CopyToOutputDirectory>
    </ProjectReference>
    <ProjectReference Include="C:\Development\wireshark\doc\docs.vcxproj">
      <Project>{32A3D80E-BD63-3749-BE85-322910F6C946}</Project>
      <Name>docs</Name>
      <ReferenceOutputAssembly>false</ReferenceOutputAssembly>
      <CopyToOutputDirectory>Never</CopyToOutputDirectory>
    </ProjectReference>
    <ProjectReference Include="C:\Development\wireshark\epan\wslua\wsluaauxiliary.vcxproj">
      <Project>{11699B7B-B2DA-3932-BF1C-1186D9D92F2E}</Project>
      <Name>wsluaauxiliary</Name>
      <ReferenceOutputAssembly>false</ReferenceOutputAssembly>
      <CopyToOutputDirectory>Never</CopyToOutputDirectory>
    </ProjectReference>
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
  </ImportGroup>
</Project>